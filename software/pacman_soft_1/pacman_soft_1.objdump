
pacman_soft_1.elf:     file format elf32-littlenios2
pacman_soft_1.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00080244

Program Header:
    LOAD off    0x00001000 vaddr 0x00080000 paddr 0x00080000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00080020 paddr 0x00080020 align 2**12
         filesz 0x0000fbd0 memsz 0x0000fbd0 flags r-x
    LOAD off    0x00010bf0 vaddr 0x0008fbf0 paddr 0x000916e0 align 2**12
         filesz 0x00001af0 memsz 0x00001af0 flags rw-
    LOAD off    0x000131d0 vaddr 0x000931d0 paddr 0x000931d0 align 2**12
         filesz 0x00000000 memsz 0x0000016c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00080000  00080000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00080020  00080020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f67c  00080244  00080244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000330  0008f8c0  0008f8c0  000108c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af0  0008fbf0  000916e0  00010bf0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000016c  000931d0  000931d0  000131d0  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2 00000000  0009333c  0009333c  000126e0  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  000126e0  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000ed8  00000000  00000000  00012708  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00023972  00000000  00000000  000135e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009206  00000000  00000000  00036f52  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b57b  00000000  00000000  00040158  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002138  00000000  00000000  0004b6d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000389e  00000000  00000000  0004d80c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017868  00000000  00000000  000510aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00068914  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018c0  00000000  00000000  00068948  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006d416  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000a  00000000  00000000  0006d419  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006d423  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006d424  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0006d425  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0006d429  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0006d42d  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0006d431  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0006d43a  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0006d443  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000009  00000000  00000000  0006d44c  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000001e  00000000  00000000  0006d455  2**0
                  CONTENTS, READONLY
 29 .jdi          0000677d  00000000  00000000  0006d473  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0007716e  00000000  00000000  00073bf0  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00080000 l    d  .entry	00000000 .entry
00080020 l    d  .exceptions	00000000 .exceptions
00080244 l    d  .text	00000000 .text
0008f8c0 l    d  .rodata	00000000 .rodata
0008fbf0 l    d  .rwdata	00000000 .rwdata
000931d0 l    d  .bss	00000000 .bss
0009333c l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../pacman_soft_1_bsp//obj/HAL/src/crt0.o
0008028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
000804d8 l     F .text	000000f4 refresh_position_interrupt_handler
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0008f93e l     O .rodata	00000010 zeroes.4404
00082a5c l     F .text	000000bc __sbprintf
0008f94e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00082c6c l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0008479c l     F .text	00000008 __fp_unlock
000847b0 l     F .text	0000019c __sinit.part.1
0008494c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0008fbf0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00090034 l     O .rwdata	00000020 lc_ctype_charset
00090014 l     O .rwdata	00000020 lc_message_charset
00090054 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0008f980 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00087d48 l     F .text	000000fc __sprint_r.part.0
0008fab4 l     O .rodata	00000010 blanks.4348
0008faa4 l     O .rodata	00000010 zeroes.4349
000892d4 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0008cf90 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0008d09c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0008d0c8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0008d5d4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0008d6b4 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0008d7a0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0008d974 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000916d4 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0008dbc0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0008dcf4 l     F .text	00000034 alt_dev_reg
0009063c l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0008dfe8 l     F .text	0000020c altera_avalon_jtag_uart_irq
0008e1f4 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0008e82c l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0008ea94 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0008ed04 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
0008ee44 l     F .text	0000003c alt_get_errno
0008ee80 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00093208 g     O .bss	00000004 alt_instruction_exception_handler
0008738c g     F .text	00000074 _mprec_log10
00087478 g     F .text	0000008c __any_on
00089870 g     F .text	00000054 _isatty_r
0008f98c g     O .rodata	00000028 __mprec_tinytens
0008d8b0 g     F .text	0000007c alt_main
000806dc g     F .text	000000c0 _puts_r
0009323c g     O .bss	00000100 alt_irq
000898c4 g     F .text	00000060 _lseek_r
000916e0 g       *ABS*	00000000 __flash_rwdata_start
0008babc g     F .text	00000088 .hidden __eqdf2
00080314 g     F .text	00000088 init_position
0009333c g       *ABS*	00000000 __alt_heap_start
000806a0 g     F .text	0000003c printf
00089adc g     F .text	0000009c _wcrtomb_r
00087c08 g     F .text	0000005c __sseek
00084aec g     F .text	00000010 __sinit
00089984 g     F .text	00000140 __swbuf_r
000855b4 g     F .text	0000007c _setlocale_r
00084954 g     F .text	00000068 __sfmoreglue
0008d950 g     F .text	00000024 __malloc_unlock
000931d4 g     O .bss	00000004 temp_counter
00086284 g     F .text	0000015c memmove
00084ad4 g     F .text	00000018 _cleanup
00086508 g     F .text	000000a8 _Balloc
000931d8 g     O .bss	00000004 refreshIO
0008bb44 g     F .text	000000dc .hidden __gtdf2
0008f23c g     F .text	00000024 altera_nios2_gen2_irq_init
00080000 g     F .entry	0000001c __reset
00080020 g       *ABS*	00000000 __flash_exceptions_start
00089814 g     F .text	0000005c _fstat_r
000931f4 g     O .bss	00000004 errno
00087b84 g     F .text	00000008 __seofread
00093200 g     O .bss	00000004 alt_argv
0009969c g       *ABS*	00000000 _gp
000904bc g     O .rwdata	00000180 alt_fd_list
0008f260 g     F .text	00000090 alt_find_dev
0008613c g     F .text	00000148 memcpy
000847a4 g     F .text	0000000c _cleanup_r
0008cda8 g     F .text	000000dc .hidden __floatsidf
0008edc8 g     F .text	0000007c alt_io_redirect
0008bc20 g     F .text	000000f4 .hidden __ltdf2
0008f8c0 g       *ABS*	00000000 __DTOR_END__
0008079c g     F .text	00000014 puts
0008ec68 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00087a68 g     F .text	00000074 __fpclassifyd
000872e8 g     F .text	000000a4 __ratio
000892b8 g     F .text	0000001c __vfiprintf_internal
0008e3ec g     F .text	0000021c altera_avalon_jtag_uart_read
00080670 g     F .text	00000030 _printf_r
0008a86c g     F .text	00000064 .hidden __udivsi3
0008d610 g     F .text	000000a4 isatty
0008f9dc g     O .rodata	000000c8 __mprec_tens
00085630 g     F .text	0000000c __locale_charset
0008f49c g     F .text	00000090 alt_icache_flush
000931f0 g     O .bss	00000004 __malloc_top_pad
000916a8 g     O .rwdata	00000004 __mb_cur_max
00085660 g     F .text	0000000c _localeconv_r
00086914 g     F .text	0000003c __i2b
00084f70 g     F .text	000004bc __sfvwrite_r
00087adc g     F .text	00000054 _sbrk_r
00089924 g     F .text	00000060 _read_r
000916c8 g     O .rwdata	00000004 alt_max_fd
00089508 g     F .text	000000f0 _fclose_r
0008476c g     F .text	00000030 fflush
000931ec g     O .bss	00000004 __malloc_max_sbrked_mem
0008d454 g     F .text	00000180 alt_irq_register
0008a928 g     F .text	000008ac .hidden __adddf3
00087090 g     F .text	0000010c __b2d
0008a23c g     F .text	00000538 .hidden __umoddi3
0008d7dc g     F .text	000000d4 lseek
000916a0 g     O .rwdata	00000004 _global_impure_ptr
00087504 g     F .text	00000564 _realloc_r
0009333c g       *ABS*	00000000 __bss_end
0008d364 g     F .text	000000f0 alt_iic_isr_register
0008f134 g     F .text	00000108 alt_tick
00089cc4 g     F .text	00000578 .hidden __udivdi3
00089770 g     F .text	00000024 _fputwc_r
0008f9b4 g     O .rodata	00000028 __mprec_bigtens
000866f8 g     F .text	00000104 __s2b
0008ce84 g     F .text	000000a8 .hidden __floatunsidf
00086dd0 g     F .text	00000060 __mcmp
00084b0c g     F .text	00000018 __fp_lock_all
0008d318 g     F .text	0000004c alt_ic_irq_enabled
0008f098 g     F .text	0000009c alt_alarm_stop
000931f8 g     O .bss	00000004 alt_irq_active
00080290 g     F .text	00000084 compute_byte_packet
000800fc g     F .exceptions	000000d4 alt_irq_handler
00090494 g     O .rwdata	00000028 alt_dev_null
0009169c g     O .rwdata	00000001 counter_dir
0008ea4c g     F .text	00000048 alt_dcache_flush_all
000867fc g     F .text	00000068 __hi0bits
0008cd28 g     F .text	00000080 .hidden __fixdfsi
000916e0 g       *ABS*	00000000 __ram_rwdata_end
000916c0 g     O .rwdata	00000008 alt_dev_list
0008dbfc g     F .text	000000f8 write
0008fbf0 g       *ABS*	00000000 __ram_rodata_end
0008d104 g     F .text	000000b0 fstat
0008bc20 g     F .text	000000f4 .hidden __ledf2
00086b48 g     F .text	00000140 __pow5mult
00087e5c g     F .text	0000145c ___vfiprintf_internal_r
000931e4 g     O .bss	00000004 __nlocale_changed
0008a8d0 g     F .text	00000058 .hidden __umodsi3
0009333c g       *ABS*	00000000 end
0008df28 g     F .text	000000c0 altera_avalon_jtag_uart_init
000801d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0008f8c0 g       *ABS*	00000000 __CTOR_LIST__
000cbaf0 g       *ABS*	00000000 __alt_stack_pointer
0008e8a4 g     F .text	0000007c alt_avalon_timer_sc_init
0008cf2c g     F .text	00000064 .hidden __clzsi2
0008e608 g     F .text	00000224 altera_avalon_jtag_uart_write
00084afc g     F .text	00000004 __sfp_lock_acquire
00086058 g     F .text	000000e4 memchr
00080848 g     F .text	000021f8 ___vfprintf_internal_r
00084c60 g     F .text	00000310 _free_r
0008563c g     F .text	00000010 __locale_mb_cur_max
0008f70c g     F .text	00000180 __call_exitprocs
000931e0 g     O .bss	00000004 __mlocale_changed
000916ac g     O .rwdata	00000004 __malloc_sbrk_base
00080244 g     F .text	0000004c _start
0009320c g     O .bss	00000004 _alt_tick_rate
00086c88 g     F .text	00000148 __lshift
00093210 g     O .bss	00000004 _alt_nticks
0008d9b0 g     F .text	000000fc read
0008dd60 g     F .text	00000064 alt_sys_init
0008f5f4 g     F .text	00000118 __register_exitproc
00086950 g     F .text	000001f8 __multiply
0008e294 g     F .text	00000068 altera_avalon_jtag_uart_close
0008fbf0 g       *ABS*	00000000 __ram_rwdata_start
0008f8c0 g       *ABS*	00000000 __ram_rodata_start
00093214 g     O .bss	00000028 __malloc_current_mallinfo
0008719c g     F .text	0000014c __d2b
0008ddc4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0008f3f8 g     F .text	000000a4 alt_get_fd
000893f0 g     F .text	00000054 _close_r
0008f578 g     F .text	0000007c memcmp
0008de84 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0009333c g       *ABS*	00000000 __alt_stack_base
0008ded4 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00082b18 g     F .text	00000154 __swsetup_r
0008b1d4 g     F .text	000008e8 .hidden __divdf3
000849bc g     F .text	00000118 __sfp
00087400 g     F .text	00000078 __copybits
0009008c g     O .rwdata	00000408 __malloc_av_
00084b08 g     F .text	00000004 __sinit_lock_release
0008bd14 g     F .text	00000718 .hidden __muldf3
00087b30 g     F .text	00000054 __sread
000931d0 g     O .bss	00000004 counter
0008f2f0 g     F .text	00000108 alt_find_file
0008ead0 g     F .text	000000a4 alt_dev_llist_insert
0008d92c g     F .text	00000024 __malloc_lock
0008db10 g     F .text	000000b0 sbrk
00084710 g     F .text	0000005c _fflush_r
00089444 g     F .text	000000c4 _calloc_r
000931d0 g       *ABS*	00000000 __bss_start
000863e0 g     F .text	00000128 memset
000805cc g     F .text	000000a4 main
00093204 g     O .bss	00000004 alt_envp
000931e8 g     O .bss	00000004 __malloc_max_total_mem
0008de24 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00089ac4 g     F .text	00000018 __swbuf
00087c64 g     F .text	00000008 __sclose
000cbaf0 g       *ABS*	00000000 __alt_heap_limit
000895f8 g     F .text	00000014 fclose
00082e6c g     F .text	00001688 _dtoa_r
0008584c g     F .text	0000080c _malloc_r
00089c38 g     F .text	00000030 __ascii_wctomb
000916cc g     O .rwdata	00000004 alt_errno
0008542c g     F .text	000000c4 _fwalk
0008a774 g     F .text	00000084 .hidden __divsi3
00084b3c g     F .text	00000124 _malloc_trim_r
0008f8c0 g       *ABS*	00000000 __CTOR_END__
00087c6c g     F .text	000000dc strcmp
0008f8c0 g       *ABS*	00000000 __flash_rodata_start
0008f8c0 g       *ABS*	00000000 __DTOR_LIST__
0008babc g     F .text	00000088 .hidden __nedf2
0008dd28 g     F .text	00000038 alt_irq_init
0008daac g     F .text	00000064 alt_release_fd
0008fac4 g     O .rodata	00000100 .hidden __clz_tab
000931dc g     O .bss	00000004 _PathLocale
0008f52c g     F .text	00000014 atexit
00089390 g     F .text	00000060 _write_r
0008566c g     F .text	00000018 setlocale
000916a4 g     O .rwdata	00000004 _impure_ptr
000931fc g     O .bss	00000004 alt_argc
000844f4 g     F .text	0000021c __sflush_r
0008ebd4 g     F .text	00000060 _do_dtors
00085658 g     F .text	00000008 __locale_cjk_lang
00080020 g       .exceptions	00000000 alt_irq_entry
0008702c g     F .text	00000064 __ulp
00084b24 g     F .text	00000018 __fp_unlock_all
000916b8 g     O .rwdata	00000008 alt_fs_list
00080020 g       *ABS*	00000000 __ram_exceptions_start
00085684 g     F .text	0000000c localeconv
0008039c g     F .text	0000013c refresh_position
00080000 g       *ABS*	00000000 __alt_mem_onchip_memory2
0008d1b4 g     F .text	00000050 alt_ic_isr_register
000916e0 g       *ABS*	00000000 _edata
0009333c g       *ABS*	00000000 _end
0008960c g     F .text	00000164 __fputwc
00080244 g       *ABS*	00000000 __ram_exceptions_end
0008e2fc g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0008d28c g     F .text	0000008c alt_ic_irq_disable
00087b8c g     F .text	0000007c __swrite
000916b0 g     O .rwdata	00000004 __malloc_trim_threshold
0008564c g     F .text	0000000c __locale_msgcharset
0008f540 g     F .text	00000038 exit
000854f0 g     F .text	000000c4 _fwalk_reent
00086e30 g     F .text	000001fc __mdiff
0008a7f8 g     F .text	00000074 .hidden __modsi3
000cbaf0 g       *ABS*	00000000 __alt_data_end
00080020 g     F .exceptions	00000000 alt_exception
00084b00 g     F .text	00000004 __sfp_lock_release
0008f88c g     F .text	00000034 _exit
0008e920 g     F .text	0000012c alt_alarm_start
00085690 g     F .text	000001bc __smakebuf_r
000807b0 g     F .text	00000098 strlen
0008ef44 g     F .text	00000154 open
0008bb44 g     F .text	000000dc .hidden __gedf2
000916b4 g     O .rwdata	00000004 __wctomb
00087e44 g     F .text	00000018 __sprint_r
0008ec34 g     F .text	00000034 alt_icache_flush_all
000916d0 g     O .rwdata	00000004 alt_priority_mask
0008d204 g     F .text	00000088 alt_ic_irq_enable
00082a40 g     F .text	0000001c __vfprintf_internal
00089c68 g     F .text	0000005c _wctomb_r
0008c42c g     F .text	000008fc .hidden __subdf3
00086864 g     F .text	000000b0 __lo0bits
000916d8 g     O .rwdata	00000008 alt_alarm_list
0008eb74 g     F .text	00000060 _do_ctors
00089b78 g     F .text	000000c0 wcrtomb
0008cfcc g     F .text	000000d0 close
0008d71c g     F .text	00000084 alt_load
00089794 g     F .text	00000080 fputwc
00084b04 g     F .text	00000004 __sinit_lock_acquire
000865d8 g     F .text	00000120 __multadd
000865b0 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00080000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   80000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   80004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   80008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   8000c:	00bffd16 	blt	zero,r2,80004 <__alt_data_end+0xfffb4514>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   80010:	00400234 	movhi	at,8
    ori r1, r1, %lo(_start)
   80014:	08409114 	ori	at,at,580
    jmp r1
   80018:	0800683a 	jmp	at
   8001c:	00000000 	call	0 <__reset-0x80000>

Disassembly of section .exceptions:

00080020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   80020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   80024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   80028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   8002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   80030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   80034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   80038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   8003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   80040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   80044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   80048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   8004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   80050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   80054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   80058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   8005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   80060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   80064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   80068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   8006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   80070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   80074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   80078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   8007c:	10000326 	beq	r2,zero,8008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   80080:	20000226 	beq	r4,zero,8008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   80084:	00800fc0 	call	800fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   80088:	00000706 	br	800a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   8008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   80090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   80094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   80098:	00801d00 	call	801d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   8009c:	1000021e 	bne	r2,zero,800a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   800a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   800a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   800a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   800ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   800b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   800b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   800b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   800bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   800c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   800c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   800c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   800cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   800d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   800d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   800d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   800dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   800e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   800e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   800e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   800ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   800f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   800f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   800f8:	ef80083a 	eret

000800fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   800fc:	defff904 	addi	sp,sp,-28
   80100:	dfc00615 	stw	ra,24(sp)
   80104:	df000515 	stw	fp,20(sp)
   80108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   8010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   80110:	0005313a 	rdctl	r2,ipending
   80114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   80118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   8011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   80120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   80124:	00800044 	movi	r2,1
   80128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   8012c:	e0fffb17 	ldw	r3,-20(fp)
   80130:	e0bffc17 	ldw	r2,-16(fp)
   80134:	1884703a 	and	r2,r3,r2
   80138:	10001426 	beq	r2,zero,8018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   8013c:	00800274 	movhi	r2,9
   80140:	108c8f04 	addi	r2,r2,12860
   80144:	e0fffd17 	ldw	r3,-12(fp)
   80148:	180690fa 	slli	r3,r3,3
   8014c:	10c5883a 	add	r2,r2,r3
   80150:	10c00017 	ldw	r3,0(r2)
   80154:	00800274 	movhi	r2,9
   80158:	108c8f04 	addi	r2,r2,12860
   8015c:	e13ffd17 	ldw	r4,-12(fp)
   80160:	200890fa 	slli	r4,r4,3
   80164:	1105883a 	add	r2,r2,r4
   80168:	10800104 	addi	r2,r2,4
   8016c:	10800017 	ldw	r2,0(r2)
   80170:	1009883a 	mov	r4,r2
   80174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   80178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   8017c:	0005313a 	rdctl	r2,ipending
   80180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   80184:	e0bfff17 	ldw	r2,-4(fp)
   80188:	00000706 	br	801a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   8018c:	e0bffc17 	ldw	r2,-16(fp)
   80190:	1085883a 	add	r2,r2,r2
   80194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   80198:	e0bffd17 	ldw	r2,-12(fp)
   8019c:	10800044 	addi	r2,r2,1
   801a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   801a4:	003fe106 	br	8012c <__alt_data_end+0xfffb463c>

    active = alt_irq_pending ();
   801a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   801ac:	e0bffb17 	ldw	r2,-20(fp)
   801b0:	103fdb1e 	bne	r2,zero,80120 <__alt_data_end+0xfffb4630>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   801b4:	0001883a 	nop
}
   801b8:	0001883a 	nop
   801bc:	e037883a 	mov	sp,fp
   801c0:	dfc00117 	ldw	ra,4(sp)
   801c4:	df000017 	ldw	fp,0(sp)
   801c8:	dec00204 	addi	sp,sp,8
   801cc:	f800283a 	ret

000801d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   801d0:	defffb04 	addi	sp,sp,-20
   801d4:	dfc00415 	stw	ra,16(sp)
   801d8:	df000315 	stw	fp,12(sp)
   801dc:	df000304 	addi	fp,sp,12
   801e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   801e4:	000531fa 	rdctl	r2,exception
   801e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   801ec:	e0bffd17 	ldw	r2,-12(fp)
   801f0:	10801f0c 	andi	r2,r2,124
   801f4:	1004d0ba 	srli	r2,r2,2
   801f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   801fc:	0005333a 	rdctl	r2,badaddr
   80200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   80204:	d0a6db17 	ldw	r2,-25748(gp)
   80208:	10000726 	beq	r2,zero,80228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   8020c:	d0a6db17 	ldw	r2,-25748(gp)
   80210:	e0fffd17 	ldw	r3,-12(fp)
   80214:	e1bffe17 	ldw	r6,-8(fp)
   80218:	e17fff17 	ldw	r5,-4(fp)
   8021c:	1809883a 	mov	r4,r3
   80220:	103ee83a 	callr	r2
   80224:	00000206 	br	80230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   80228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   8022c:	0005883a 	mov	r2,zero
}
   80230:	e037883a 	mov	sp,fp
   80234:	dfc00117 	ldw	ra,4(sp)
   80238:	df000017 	ldw	fp,0(sp)
   8023c:	dec00204 	addi	sp,sp,8
   80240:	f800283a 	ret

Disassembly of section .text:

00080244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   80244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   80248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   8024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   80250:	00bffd16 	blt	zero,r2,80248 <__alt_data_end+0xfffb4758>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   80254:	06c00334 	movhi	sp,12
    ori sp, sp, %lo(__alt_stack_pointer)
   80258:	deeebc14 	ori	sp,sp,47856
    movhi gp, %hi(_gp)
   8025c:	06800274 	movhi	gp,9
    ori gp, gp, %lo(_gp)
   80260:	d6a5a714 	ori	gp,gp,38556
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   80264:	00800274 	movhi	r2,9
    ori r2, r2, %lo(__bss_start)
   80268:	108c7414 	ori	r2,r2,12752

    movhi r3, %hi(__bss_end)
   8026c:	00c00274 	movhi	r3,9
    ori r3, r3, %lo(__bss_end)
   80270:	18cccf14 	ori	r3,r3,13116

    beq r2, r3, 1f
   80274:	10c00326 	beq	r2,r3,80284 <_start+0x40>

0:
    stw zero, (r2)
   80278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   8027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   80280:	10fffd36 	bltu	r2,r3,80278 <__alt_data_end+0xfffb4788>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   80284:	008d71c0 	call	8d71c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   80288:	008d8b00 	call	8d8b0 <alt_main>

0008028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   8028c:	003fff06 	br	8028c <__alt_data_end+0xfffb479c>

00080290 <compute_byte_packet>:
	orientation orientation;
	alt_u32 bytePacket;
} position;

void compute_byte_packet(position* charPosition)
{
   80290:	defffe04 	addi	sp,sp,-8
   80294:	df000115 	stw	fp,4(sp)
   80298:	df000104 	addi	fp,sp,4
   8029c:	e13fff15 	stw	r4,-4(fp)
	charPosition->bytePacket = (charPosition->charId << 29) + (charPosition->positionX << 17 ) + (charPosition->positionY << 5) + (charPosition->state << 2) + (charPosition->orientation );
   802a0:	e0bfff17 	ldw	r2,-4(fp)
   802a4:	10800003 	ldbu	r2,0(r2)
   802a8:	10803fcc 	andi	r2,r2,255
   802ac:	1004977a 	slli	r2,r2,29
   802b0:	1007883a 	mov	r3,r2
   802b4:	e0bfff17 	ldw	r2,-4(fp)
   802b8:	10800117 	ldw	r2,4(r2)
   802bc:	1004947a 	slli	r2,r2,17
   802c0:	1887883a 	add	r3,r3,r2
   802c4:	e0bfff17 	ldw	r2,-4(fp)
   802c8:	10800217 	ldw	r2,8(r2)
   802cc:	1004917a 	slli	r2,r2,5
   802d0:	1887883a 	add	r3,r3,r2
   802d4:	e0bfff17 	ldw	r2,-4(fp)
   802d8:	10800303 	ldbu	r2,12(r2)
   802dc:	10803fcc 	andi	r2,r2,255
   802e0:	1085883a 	add	r2,r2,r2
   802e4:	1085883a 	add	r2,r2,r2
   802e8:	1887883a 	add	r3,r3,r2
   802ec:	e0bfff17 	ldw	r2,-4(fp)
   802f0:	10800417 	ldw	r2,16(r2)
   802f4:	1887883a 	add	r3,r3,r2
   802f8:	e0bfff17 	ldw	r2,-4(fp)
   802fc:	10c00515 	stw	r3,20(r2)
}
   80300:	0001883a 	nop
   80304:	e037883a 	mov	sp,fp
   80308:	df000017 	ldw	fp,0(sp)
   8030c:	dec00104 	addi	sp,sp,4
   80310:	f800283a 	ret

00080314 <init_position>:

void init_position(position* charPosition, alt_u8 charId, alt_u32 positionX, alt_u32 positionY, alt_u8 state, orientation orientation)
{
   80314:	defff904 	addi	sp,sp,-28
   80318:	dfc00615 	stw	ra,24(sp)
   8031c:	df000515 	stw	fp,20(sp)
   80320:	df000504 	addi	fp,sp,20
   80324:	e13ffb15 	stw	r4,-20(fp)
   80328:	2807883a 	mov	r3,r5
   8032c:	e1bffd15 	stw	r6,-12(fp)
   80330:	e1fffe15 	stw	r7,-8(fp)
   80334:	e0800217 	ldw	r2,8(fp)
   80338:	e0fffc05 	stb	r3,-16(fp)
   8033c:	e0bfff05 	stb	r2,-4(fp)
	charPosition->charId = charId ;
   80340:	e0bffb17 	ldw	r2,-20(fp)
   80344:	e0fffc03 	ldbu	r3,-16(fp)
   80348:	10c00005 	stb	r3,0(r2)
	charPosition->positionX = positionX ;
   8034c:	e0bffb17 	ldw	r2,-20(fp)
   80350:	e0fffd17 	ldw	r3,-12(fp)
   80354:	10c00115 	stw	r3,4(r2)
	charPosition->positionY = positionY ;
   80358:	e0bffb17 	ldw	r2,-20(fp)
   8035c:	e0fffe17 	ldw	r3,-8(fp)
   80360:	10c00215 	stw	r3,8(r2)
	charPosition->state = state ;
   80364:	e0bffb17 	ldw	r2,-20(fp)
   80368:	e0ffff03 	ldbu	r3,-4(fp)
   8036c:	10c00305 	stb	r3,12(r2)
	charPosition->orientation = orientation ;
   80370:	e0bffb17 	ldw	r2,-20(fp)
   80374:	e0c00317 	ldw	r3,12(fp)
   80378:	10c00415 	stw	r3,16(r2)
	compute_byte_packet(charPosition);
   8037c:	e13ffb17 	ldw	r4,-20(fp)
   80380:	00802900 	call	80290 <compute_byte_packet>
}
   80384:	0001883a 	nop
   80388:	e037883a 	mov	sp,fp
   8038c:	dfc00117 	ldw	ra,4(sp)
   80390:	df000017 	ldw	fp,0(sp)
   80394:	dec00204 	addi	sp,sp,8
   80398:	f800283a 	ret

0008039c <refresh_position>:

void refresh_position(position* charPosition)
{
   8039c:	defffc04 	addi	sp,sp,-16
   803a0:	dfc00315 	stw	ra,12(sp)
   803a4:	df000215 	stw	fp,8(sp)
   803a8:	df000204 	addi	fp,sp,8
   803ac:	e13fff15 	stw	r4,-4(fp)
	alt_u8 step = 1<<2;
   803b0:	00800104 	movi	r2,4
   803b4:	e0bffe05 	stb	r2,-8(fp)
	switch(charPosition->orientation)
   803b8:	e0bfff17 	ldw	r2,-4(fp)
   803bc:	10800417 	ldw	r2,16(r2)
   803c0:	10c00060 	cmpeqi	r3,r2,1
   803c4:	1800061e 	bne	r3,zero,803e0 <refresh_position+0x44>
   803c8:	00802e2e 	bgeu	zero,r2,80484 <refresh_position+0xe8>
   803cc:	10c000a0 	cmpeqi	r3,r2,2
   803d0:	1800101e 	bne	r3,zero,80414 <refresh_position+0x78>
   803d4:	108000e0 	cmpeqi	r2,r2,3
   803d8:	10001c1e 	bne	r2,zero,8044c <refresh_position+0xb0>
   803dc:	00003606 	br	804b8 <refresh_position+0x11c>
	{
		case NORTH :
			charPosition->positionY = (charPosition->positionY > 0) ? charPosition->positionY - step : charPosition->positionY ;
   803e0:	e0bfff17 	ldw	r2,-4(fp)
   803e4:	10800217 	ldw	r2,8(r2)
   803e8:	10000526 	beq	r2,zero,80400 <refresh_position+0x64>
   803ec:	e0bfff17 	ldw	r2,-4(fp)
   803f0:	10c00217 	ldw	r3,8(r2)
   803f4:	e0bffe03 	ldbu	r2,-8(fp)
   803f8:	1885c83a 	sub	r2,r3,r2
   803fc:	00000206 	br	80408 <refresh_position+0x6c>
   80400:	e0bfff17 	ldw	r2,-4(fp)
   80404:	10800217 	ldw	r2,8(r2)
   80408:	e0ffff17 	ldw	r3,-4(fp)
   8040c:	18800215 	stw	r2,8(r3)
		break;
   80410:	00002906 	br	804b8 <refresh_position+0x11c>
		case EAST :
			charPosition->positionX = (charPosition->positionX < 1440) ? charPosition->positionX + step : charPosition->positionX ;
   80414:	e0bfff17 	ldw	r2,-4(fp)
   80418:	10800117 	ldw	r2,4(r2)
   8041c:	10816828 	cmpgeui	r2,r2,1440
   80420:	1000051e 	bne	r2,zero,80438 <refresh_position+0x9c>
   80424:	e0bfff17 	ldw	r2,-4(fp)
   80428:	10c00117 	ldw	r3,4(r2)
   8042c:	e0bffe03 	ldbu	r2,-8(fp)
   80430:	1885883a 	add	r2,r3,r2
   80434:	00000206 	br	80440 <refresh_position+0xa4>
   80438:	e0bfff17 	ldw	r2,-4(fp)
   8043c:	10800117 	ldw	r2,4(r2)
   80440:	e0ffff17 	ldw	r3,-4(fp)
   80444:	18800115 	stw	r2,4(r3)
		break;
   80448:	00001b06 	br	804b8 <refresh_position+0x11c>
		case SOUTH :
			charPosition->positionY = (charPosition->positionY < 900) ? charPosition->positionY + step : charPosition->positionY ;
   8044c:	e0bfff17 	ldw	r2,-4(fp)
   80450:	10800217 	ldw	r2,8(r2)
   80454:	1080e128 	cmpgeui	r2,r2,900
   80458:	1000051e 	bne	r2,zero,80470 <refresh_position+0xd4>
   8045c:	e0bfff17 	ldw	r2,-4(fp)
   80460:	10c00217 	ldw	r3,8(r2)
   80464:	e0bffe03 	ldbu	r2,-8(fp)
   80468:	1885883a 	add	r2,r3,r2
   8046c:	00000206 	br	80478 <refresh_position+0xdc>
   80470:	e0bfff17 	ldw	r2,-4(fp)
   80474:	10800217 	ldw	r2,8(r2)
   80478:	e0ffff17 	ldw	r3,-4(fp)
   8047c:	18800215 	stw	r2,8(r3)
		break;
   80480:	00000d06 	br	804b8 <refresh_position+0x11c>
		case WEST :
			charPosition->positionX = (charPosition->positionX > 0) ? charPosition->positionX - step : charPosition->positionX ;
   80484:	e0bfff17 	ldw	r2,-4(fp)
   80488:	10800117 	ldw	r2,4(r2)
   8048c:	10000526 	beq	r2,zero,804a4 <refresh_position+0x108>
   80490:	e0bfff17 	ldw	r2,-4(fp)
   80494:	10c00117 	ldw	r3,4(r2)
   80498:	e0bffe03 	ldbu	r2,-8(fp)
   8049c:	1885c83a 	sub	r2,r3,r2
   804a0:	00000206 	br	804ac <refresh_position+0x110>
   804a4:	e0bfff17 	ldw	r2,-4(fp)
   804a8:	10800117 	ldw	r2,4(r2)
   804ac:	e0ffff17 	ldw	r3,-4(fp)
   804b0:	18800115 	stw	r2,4(r3)
		break;
   804b4:	0001883a 	nop
	}
	compute_byte_packet(charPosition);
   804b8:	e13fff17 	ldw	r4,-4(fp)
   804bc:	00802900 	call	80290 <compute_byte_packet>
}
   804c0:	0001883a 	nop
   804c4:	e037883a 	mov	sp,fp
   804c8:	dfc00117 	ldw	ra,4(sp)
   804cc:	df000017 	ldw	fp,0(sp)
   804d0:	dec00204 	addi	sp,sp,8
   804d4:	f800283a 	ret

000804d8 <refresh_position_interrupt_handler>:

static void refresh_position_interrupt_handler(void* context)
{
   804d8:	defffc04 	addi	sp,sp,-16
   804dc:	dfc00315 	stw	ra,12(sp)
   804e0:	df000215 	stw	fp,8(sp)
   804e4:	df000204 	addi	fp,sp,8
   804e8:	e13fff15 	stw	r4,-4(fp)


	position* p_pacmanPosition = (position*) context;
   804ec:	e0bfff17 	ldw	r2,-4(fp)
   804f0:	e0bffe15 	stw	r2,-8(fp)
	refresh_position(p_pacmanPosition);
   804f4:	e13ffe17 	ldw	r4,-8(fp)
   804f8:	008039c0 	call	8039c <refresh_position>
	IOWR_32DIRECT(POSITION_BASE, 0, p_pacmanPosition->bytePacket);
   804fc:	e0bffe17 	ldw	r2,-8(fp)
   80500:	10800517 	ldw	r2,20(r2)
   80504:	1007883a 	mov	r3,r2
   80508:	00800434 	movhi	r2,16
   8050c:	10840c04 	addi	r2,r2,4144
   80510:	10c00035 	stwio	r3,0(r2)
	IOWR(REFRESH_BASE,3,0xf);
   80514:	00c003c4 	movi	r3,15
   80518:	00800434 	movhi	r2,16
   8051c:	10840b04 	addi	r2,r2,4140
   80520:	10c00035 	stwio	r3,0(r2)

	if(counter > 600){
   80524:	d0a6cd17 	ldw	r2,-25804(gp)
   80528:	10809670 	cmpltui	r2,r2,601
   8052c:	1000051e 	bne	r2,zero,80544 <refresh_position_interrupt_handler+0x6c>
		counter_dir = -1;
   80530:	00bfffc4 	movi	r2,-1
   80534:	d0a00005 	stb	r2,-32768(gp)
		p_pacmanPosition->orientation = NORTH;
   80538:	e0bffe17 	ldw	r2,-8(fp)
   8053c:	00c00044 	movi	r3,1
   80540:	10c00415 	stw	r3,16(r2)
	}
	if(counter < 60){
   80544:	d0a6cd17 	ldw	r2,-25804(gp)
   80548:	10800f28 	cmpgeui	r2,r2,60
   8054c:	1000051e 	bne	r2,zero,80564 <refresh_position_interrupt_handler+0x8c>
		counter_dir = 1;
   80550:	00800044 	movi	r2,1
   80554:	d0a00005 	stb	r2,-32768(gp)
		p_pacmanPosition->orientation = SOUTH;
   80558:	e0bffe17 	ldw	r2,-8(fp)
   8055c:	00c000c4 	movi	r3,3
   80560:	10c00415 	stw	r3,16(r2)
	}
	counter = counter + (1<<2)*counter_dir;
   80564:	d0a00003 	ldbu	r2,-32768(gp)
   80568:	10803fcc 	andi	r2,r2,255
   8056c:	1080201c 	xori	r2,r2,128
   80570:	10bfe004 	addi	r2,r2,-128
   80574:	1085883a 	add	r2,r2,r2
   80578:	1085883a 	add	r2,r2,r2
   8057c:	1007883a 	mov	r3,r2
   80580:	d0a6cd17 	ldw	r2,-25804(gp)
   80584:	1885883a 	add	r2,r3,r2
   80588:	d0a6cd15 	stw	r2,-25804(gp)

	printf("%lu %u\n", counter, counter_dir);
   8058c:	d0a6cd17 	ldw	r2,-25804(gp)
   80590:	d0e00003 	ldbu	r3,-32768(gp)
   80594:	18c03fcc 	andi	r3,r3,255
   80598:	18c0201c 	xori	r3,r3,128
   8059c:	18ffe004 	addi	r3,r3,-128
   805a0:	180d883a 	mov	r6,r3
   805a4:	100b883a 	mov	r5,r2
   805a8:	01000274 	movhi	r4,9
   805ac:	213e3004 	addi	r4,r4,-1856
   805b0:	00806a00 	call	806a0 <printf>

}
   805b4:	0001883a 	nop
   805b8:	e037883a 	mov	sp,fp
   805bc:	dfc00117 	ldw	ra,4(sp)
   805c0:	df000017 	ldw	fp,0(sp)
   805c4:	dec00204 	addi	sp,sp,8
   805c8:	f800283a 	ret

000805cc <main>:

int main()
{
   805cc:	defff504 	addi	sp,sp,-44
   805d0:	dfc00a15 	stw	ra,40(sp)
   805d4:	df000915 	stw	fp,36(sp)
   805d8:	df000904 	addi	fp,sp,36
	position pacmanPosition;
	init_position(&pacmanPosition, 0, 60, 60, ACTIVE, SOUTH);
   805dc:	e0fffa04 	addi	r3,fp,-24
   805e0:	008000c4 	movi	r2,3
   805e4:	d8800115 	stw	r2,4(sp)
   805e8:	00800044 	movi	r2,1
   805ec:	d8800015 	stw	r2,0(sp)
   805f0:	01c00f04 	movi	r7,60
   805f4:	01800f04 	movi	r6,60
   805f8:	000b883a 	mov	r5,zero
   805fc:	1809883a 	mov	r4,r3
   80600:	00803140 	call	80314 <init_position>
	printf("Hello from Nios II!\n");
   80604:	01000274 	movhi	r4,9
   80608:	213e3204 	addi	r4,r4,-1848
   8060c:	008079c0 	call	8079c <puts>

	//IRQ initialisation
	IOWR(REFRESH_BASE,2,0xf); //enable interrupt
   80610:	00c003c4 	movi	r3,15
   80614:	00800434 	movhi	r2,16
   80618:	10840a04 	addi	r2,r2,4136
   8061c:	10c00035 	stwio	r3,0(r2)
	IOWR(REFRESH_BASE,3,0xf); //clear edge register
   80620:	00c003c4 	movi	r3,15
   80624:	00800434 	movhi	r2,16
   80628:	10840b04 	addi	r2,r2,4140
   8062c:	10c00035 	stwio	r3,0(r2)
	printf("alt_ic_irq_enabled : %lu \n", alt_ic_irq_enabled(REFRESH_IRQ_INTERRUPT_CONTROLLER_ID, REFRESH_IRQ));
   80630:	014000c4 	movi	r5,3
   80634:	0009883a 	mov	r4,zero
   80638:	008d3180 	call	8d318 <alt_ic_irq_enabled>
   8063c:	100b883a 	mov	r5,r2
   80640:	01000274 	movhi	r4,9
   80644:	213e3704 	addi	r4,r4,-1828
   80648:	00806a00 	call	806a0 <printf>
	alt_irq_register(REFRESH_IRQ,(void*)&pacmanPosition,refresh_position_interrupt_handler);
   8064c:	e0bffa04 	addi	r2,fp,-24
   80650:	01800234 	movhi	r6,8
   80654:	31813604 	addi	r6,r6,1240
   80658:	100b883a 	mov	r5,r2
   8065c:	010000c4 	movi	r4,3
   80660:	008d4540 	call	8d454 <alt_irq_register>

	int counter_dir = 1;
   80664:	00800044 	movi	r2,1
   80668:	e0bff915 	stw	r2,-28(fp)
		// 	printf("positionY : %lu \n", pacmanPosition.positionY);
		// 	printf("state : %u \n", pacmanPosition.state);
		// 	printf("orientation : %u \n", pacmanPosition.orientation);
		// 	temp_counter = counter;
		// }
	}
   8066c:	003fff06 	br	8066c <__alt_data_end+0xfffb4b7c>

00080670 <_printf_r>:
   80670:	defffd04 	addi	sp,sp,-12
   80674:	2805883a 	mov	r2,r5
   80678:	dfc00015 	stw	ra,0(sp)
   8067c:	d9800115 	stw	r6,4(sp)
   80680:	d9c00215 	stw	r7,8(sp)
   80684:	21400217 	ldw	r5,8(r4)
   80688:	d9c00104 	addi	r7,sp,4
   8068c:	100d883a 	mov	r6,r2
   80690:	00808480 	call	80848 <___vfprintf_internal_r>
   80694:	dfc00017 	ldw	ra,0(sp)
   80698:	dec00304 	addi	sp,sp,12
   8069c:	f800283a 	ret

000806a0 <printf>:
   806a0:	defffc04 	addi	sp,sp,-16
   806a4:	dfc00015 	stw	ra,0(sp)
   806a8:	d9400115 	stw	r5,4(sp)
   806ac:	d9800215 	stw	r6,8(sp)
   806b0:	d9c00315 	stw	r7,12(sp)
   806b4:	00800274 	movhi	r2,9
   806b8:	1085a904 	addi	r2,r2,5796
   806bc:	10800017 	ldw	r2,0(r2)
   806c0:	200b883a 	mov	r5,r4
   806c4:	d9800104 	addi	r6,sp,4
   806c8:	11000217 	ldw	r4,8(r2)
   806cc:	0082a400 	call	82a40 <__vfprintf_internal>
   806d0:	dfc00017 	ldw	ra,0(sp)
   806d4:	dec00404 	addi	sp,sp,16
   806d8:	f800283a 	ret

000806dc <_puts_r>:
   806dc:	defff604 	addi	sp,sp,-40
   806e0:	dc000715 	stw	r16,28(sp)
   806e4:	2021883a 	mov	r16,r4
   806e8:	2809883a 	mov	r4,r5
   806ec:	dc400815 	stw	r17,32(sp)
   806f0:	dfc00915 	stw	ra,36(sp)
   806f4:	2823883a 	mov	r17,r5
   806f8:	00807b00 	call	807b0 <strlen>
   806fc:	10c00044 	addi	r3,r2,1
   80700:	d8800115 	stw	r2,4(sp)
   80704:	00800274 	movhi	r2,9
   80708:	10be3e04 	addi	r2,r2,-1800
   8070c:	d8800215 	stw	r2,8(sp)
   80710:	00800044 	movi	r2,1
   80714:	d8800315 	stw	r2,12(sp)
   80718:	00800084 	movi	r2,2
   8071c:	dc400015 	stw	r17,0(sp)
   80720:	d8c00615 	stw	r3,24(sp)
   80724:	dec00415 	stw	sp,16(sp)
   80728:	d8800515 	stw	r2,20(sp)
   8072c:	80000226 	beq	r16,zero,80738 <_puts_r+0x5c>
   80730:	80800e17 	ldw	r2,56(r16)
   80734:	10001426 	beq	r2,zero,80788 <_puts_r+0xac>
   80738:	81400217 	ldw	r5,8(r16)
   8073c:	2880030b 	ldhu	r2,12(r5)
   80740:	10c8000c 	andi	r3,r2,8192
   80744:	1800061e 	bne	r3,zero,80760 <_puts_r+0x84>
   80748:	29001917 	ldw	r4,100(r5)
   8074c:	00f7ffc4 	movi	r3,-8193
   80750:	10880014 	ori	r2,r2,8192
   80754:	20c6703a 	and	r3,r4,r3
   80758:	2880030d 	sth	r2,12(r5)
   8075c:	28c01915 	stw	r3,100(r5)
   80760:	d9800404 	addi	r6,sp,16
   80764:	8009883a 	mov	r4,r16
   80768:	0084f700 	call	84f70 <__sfvwrite_r>
   8076c:	1000091e 	bne	r2,zero,80794 <_puts_r+0xb8>
   80770:	00800284 	movi	r2,10
   80774:	dfc00917 	ldw	ra,36(sp)
   80778:	dc400817 	ldw	r17,32(sp)
   8077c:	dc000717 	ldw	r16,28(sp)
   80780:	dec00a04 	addi	sp,sp,40
   80784:	f800283a 	ret
   80788:	8009883a 	mov	r4,r16
   8078c:	0084aec0 	call	84aec <__sinit>
   80790:	003fe906 	br	80738 <__alt_data_end+0xfffb4c48>
   80794:	00bfffc4 	movi	r2,-1
   80798:	003ff606 	br	80774 <__alt_data_end+0xfffb4c84>

0008079c <puts>:
   8079c:	00800274 	movhi	r2,9
   807a0:	1085a904 	addi	r2,r2,5796
   807a4:	200b883a 	mov	r5,r4
   807a8:	11000017 	ldw	r4,0(r2)
   807ac:	00806dc1 	jmpi	806dc <_puts_r>

000807b0 <strlen>:
   807b0:	208000cc 	andi	r2,r4,3
   807b4:	10002026 	beq	r2,zero,80838 <strlen+0x88>
   807b8:	20800007 	ldb	r2,0(r4)
   807bc:	10002026 	beq	r2,zero,80840 <strlen+0x90>
   807c0:	2005883a 	mov	r2,r4
   807c4:	00000206 	br	807d0 <strlen+0x20>
   807c8:	10c00007 	ldb	r3,0(r2)
   807cc:	18001826 	beq	r3,zero,80830 <strlen+0x80>
   807d0:	10800044 	addi	r2,r2,1
   807d4:	10c000cc 	andi	r3,r2,3
   807d8:	183ffb1e 	bne	r3,zero,807c8 <__alt_data_end+0xfffb4cd8>
   807dc:	10c00017 	ldw	r3,0(r2)
   807e0:	01ffbff4 	movhi	r7,65279
   807e4:	39ffbfc4 	addi	r7,r7,-257
   807e8:	00ca303a 	nor	r5,zero,r3
   807ec:	01a02074 	movhi	r6,32897
   807f0:	19c7883a 	add	r3,r3,r7
   807f4:	31a02004 	addi	r6,r6,-32640
   807f8:	1946703a 	and	r3,r3,r5
   807fc:	1986703a 	and	r3,r3,r6
   80800:	1800091e 	bne	r3,zero,80828 <strlen+0x78>
   80804:	10800104 	addi	r2,r2,4
   80808:	10c00017 	ldw	r3,0(r2)
   8080c:	19cb883a 	add	r5,r3,r7
   80810:	00c6303a 	nor	r3,zero,r3
   80814:	28c6703a 	and	r3,r5,r3
   80818:	1986703a 	and	r3,r3,r6
   8081c:	183ff926 	beq	r3,zero,80804 <__alt_data_end+0xfffb4d14>
   80820:	00000106 	br	80828 <strlen+0x78>
   80824:	10800044 	addi	r2,r2,1
   80828:	10c00007 	ldb	r3,0(r2)
   8082c:	183ffd1e 	bne	r3,zero,80824 <__alt_data_end+0xfffb4d34>
   80830:	1105c83a 	sub	r2,r2,r4
   80834:	f800283a 	ret
   80838:	2005883a 	mov	r2,r4
   8083c:	003fe706 	br	807dc <__alt_data_end+0xfffb4cec>
   80840:	0005883a 	mov	r2,zero
   80844:	f800283a 	ret

00080848 <___vfprintf_internal_r>:
   80848:	deffb804 	addi	sp,sp,-288
   8084c:	dfc04715 	stw	ra,284(sp)
   80850:	ddc04515 	stw	r23,276(sp)
   80854:	dd404315 	stw	r21,268(sp)
   80858:	d9002c15 	stw	r4,176(sp)
   8085c:	282f883a 	mov	r23,r5
   80860:	302b883a 	mov	r21,r6
   80864:	d9c02d15 	stw	r7,180(sp)
   80868:	df004615 	stw	fp,280(sp)
   8086c:	dd804415 	stw	r22,272(sp)
   80870:	dd004215 	stw	r20,264(sp)
   80874:	dcc04115 	stw	r19,260(sp)
   80878:	dc804015 	stw	r18,256(sp)
   8087c:	dc403f15 	stw	r17,252(sp)
   80880:	dc003e15 	stw	r16,248(sp)
   80884:	00856600 	call	85660 <_localeconv_r>
   80888:	10800017 	ldw	r2,0(r2)
   8088c:	1009883a 	mov	r4,r2
   80890:	d8803415 	stw	r2,208(sp)
   80894:	00807b00 	call	807b0 <strlen>
   80898:	d8803715 	stw	r2,220(sp)
   8089c:	d8802c17 	ldw	r2,176(sp)
   808a0:	10000226 	beq	r2,zero,808ac <___vfprintf_internal_r+0x64>
   808a4:	10800e17 	ldw	r2,56(r2)
   808a8:	1000f926 	beq	r2,zero,80c90 <___vfprintf_internal_r+0x448>
   808ac:	b880030b 	ldhu	r2,12(r23)
   808b0:	10c8000c 	andi	r3,r2,8192
   808b4:	1800061e 	bne	r3,zero,808d0 <___vfprintf_internal_r+0x88>
   808b8:	b9001917 	ldw	r4,100(r23)
   808bc:	00f7ffc4 	movi	r3,-8193
   808c0:	10880014 	ori	r2,r2,8192
   808c4:	20c6703a 	and	r3,r4,r3
   808c8:	b880030d 	sth	r2,12(r23)
   808cc:	b8c01915 	stw	r3,100(r23)
   808d0:	10c0020c 	andi	r3,r2,8
   808d4:	1800c126 	beq	r3,zero,80bdc <___vfprintf_internal_r+0x394>
   808d8:	b8c00417 	ldw	r3,16(r23)
   808dc:	1800bf26 	beq	r3,zero,80bdc <___vfprintf_internal_r+0x394>
   808e0:	1080068c 	andi	r2,r2,26
   808e4:	00c00284 	movi	r3,10
   808e8:	10c0c426 	beq	r2,r3,80bfc <___vfprintf_internal_r+0x3b4>
   808ec:	d8c00404 	addi	r3,sp,16
   808f0:	05000274 	movhi	r20,9
   808f4:	d9001e04 	addi	r4,sp,120
   808f8:	a53e4f84 	addi	r20,r20,-1730
   808fc:	d8c01e15 	stw	r3,120(sp)
   80900:	d8002015 	stw	zero,128(sp)
   80904:	d8001f15 	stw	zero,124(sp)
   80908:	d8003315 	stw	zero,204(sp)
   8090c:	d8003615 	stw	zero,216(sp)
   80910:	d8003815 	stw	zero,224(sp)
   80914:	1811883a 	mov	r8,r3
   80918:	d8003915 	stw	zero,228(sp)
   8091c:	d8003a15 	stw	zero,232(sp)
   80920:	d8002f15 	stw	zero,188(sp)
   80924:	d9002815 	stw	r4,160(sp)
   80928:	a8800007 	ldb	r2,0(r21)
   8092c:	10027b26 	beq	r2,zero,8131c <___vfprintf_internal_r+0xad4>
   80930:	00c00944 	movi	r3,37
   80934:	a821883a 	mov	r16,r21
   80938:	10c0021e 	bne	r2,r3,80944 <___vfprintf_internal_r+0xfc>
   8093c:	00001406 	br	80990 <___vfprintf_internal_r+0x148>
   80940:	10c00326 	beq	r2,r3,80950 <___vfprintf_internal_r+0x108>
   80944:	84000044 	addi	r16,r16,1
   80948:	80800007 	ldb	r2,0(r16)
   8094c:	103ffc1e 	bne	r2,zero,80940 <__alt_data_end+0xfffb4e50>
   80950:	8563c83a 	sub	r17,r16,r21
   80954:	88000e26 	beq	r17,zero,80990 <___vfprintf_internal_r+0x148>
   80958:	d8c02017 	ldw	r3,128(sp)
   8095c:	d8801f17 	ldw	r2,124(sp)
   80960:	45400015 	stw	r21,0(r8)
   80964:	1c47883a 	add	r3,r3,r17
   80968:	10800044 	addi	r2,r2,1
   8096c:	d8c02015 	stw	r3,128(sp)
   80970:	44400115 	stw	r17,4(r8)
   80974:	d8801f15 	stw	r2,124(sp)
   80978:	00c001c4 	movi	r3,7
   8097c:	1880a716 	blt	r3,r2,80c1c <___vfprintf_internal_r+0x3d4>
   80980:	42000204 	addi	r8,r8,8
   80984:	d9402f17 	ldw	r5,188(sp)
   80988:	2c4b883a 	add	r5,r5,r17
   8098c:	d9402f15 	stw	r5,188(sp)
   80990:	80800007 	ldb	r2,0(r16)
   80994:	1000a826 	beq	r2,zero,80c38 <___vfprintf_internal_r+0x3f0>
   80998:	84400047 	ldb	r17,1(r16)
   8099c:	00bfffc4 	movi	r2,-1
   809a0:	85400044 	addi	r21,r16,1
   809a4:	d8002785 	stb	zero,158(sp)
   809a8:	0007883a 	mov	r3,zero
   809ac:	000f883a 	mov	r7,zero
   809b0:	d8802915 	stw	r2,164(sp)
   809b4:	d8003115 	stw	zero,196(sp)
   809b8:	0025883a 	mov	r18,zero
   809bc:	01401604 	movi	r5,88
   809c0:	01800244 	movi	r6,9
   809c4:	02800a84 	movi	r10,42
   809c8:	02401b04 	movi	r9,108
   809cc:	ad400044 	addi	r21,r21,1
   809d0:	88bff804 	addi	r2,r17,-32
   809d4:	28830436 	bltu	r5,r2,815e8 <___vfprintf_internal_r+0xda0>
   809d8:	100490ba 	slli	r2,r2,2
   809dc:	01000234 	movhi	r4,8
   809e0:	21027c04 	addi	r4,r4,2544
   809e4:	1105883a 	add	r2,r2,r4
   809e8:	10800017 	ldw	r2,0(r2)
   809ec:	1000683a 	jmp	r2
   809f0:	00081508 	cmpgei	zero,zero,8276
   809f4:	000815e8 	cmpgeui	zero,zero,8279
   809f8:	000815e8 	cmpgeui	zero,zero,8279
   809fc:	00081528 	cmpgeui	zero,zero,8276
   80a00:	000815e8 	cmpgeui	zero,zero,8279
   80a04:	000815e8 	cmpgeui	zero,zero,8279
   80a08:	000815e8 	cmpgeui	zero,zero,8279
   80a0c:	000815e8 	cmpgeui	zero,zero,8279
   80a10:	000815e8 	cmpgeui	zero,zero,8279
   80a14:	000815e8 	cmpgeui	zero,zero,8279
   80a18:	00080c9c 	xori	zero,zero,8242
   80a1c:	00081444 	movi	zero,8273
   80a20:	000815e8 	cmpgeui	zero,zero,8279
   80a24:	00080b64 	muli	zero,zero,8237
   80a28:	00080cc4 	movi	zero,8243
   80a2c:	000815e8 	cmpgeui	zero,zero,8279
   80a30:	00080d04 	movi	zero,8244
   80a34:	00080d10 	cmplti	zero,zero,8244
   80a38:	00080d10 	cmplti	zero,zero,8244
   80a3c:	00080d10 	cmplti	zero,zero,8244
   80a40:	00080d10 	cmplti	zero,zero,8244
   80a44:	00080d10 	cmplti	zero,zero,8244
   80a48:	00080d10 	cmplti	zero,zero,8244
   80a4c:	00080d10 	cmplti	zero,zero,8244
   80a50:	00080d10 	cmplti	zero,zero,8244
   80a54:	00080d10 	cmplti	zero,zero,8244
   80a58:	000815e8 	cmpgeui	zero,zero,8279
   80a5c:	000815e8 	cmpgeui	zero,zero,8279
   80a60:	000815e8 	cmpgeui	zero,zero,8279
   80a64:	000815e8 	cmpgeui	zero,zero,8279
   80a68:	000815e8 	cmpgeui	zero,zero,8279
   80a6c:	000815e8 	cmpgeui	zero,zero,8279
   80a70:	000815e8 	cmpgeui	zero,zero,8279
   80a74:	000815e8 	cmpgeui	zero,zero,8279
   80a78:	000815e8 	cmpgeui	zero,zero,8279
   80a7c:	000815e8 	cmpgeui	zero,zero,8279
   80a80:	00080d44 	movi	zero,8245
   80a84:	00080e00 	call	80e0 <__reset-0x77f20>
   80a88:	000815e8 	cmpgeui	zero,zero,8279
   80a8c:	00080e00 	call	80e0 <__reset-0x77f20>
   80a90:	000815e8 	cmpgeui	zero,zero,8279
   80a94:	000815e8 	cmpgeui	zero,zero,8279
   80a98:	000815e8 	cmpgeui	zero,zero,8279
   80a9c:	000815e8 	cmpgeui	zero,zero,8279
   80aa0:	00080ea0 	cmpeqi	zero,zero,8250
   80aa4:	000815e8 	cmpgeui	zero,zero,8279
   80aa8:	000815e8 	cmpgeui	zero,zero,8279
   80aac:	00080eac 	andhi	zero,zero,8250
   80ab0:	000815e8 	cmpgeui	zero,zero,8279
   80ab4:	000815e8 	cmpgeui	zero,zero,8279
   80ab8:	000815e8 	cmpgeui	zero,zero,8279
   80abc:	000815e8 	cmpgeui	zero,zero,8279
   80ac0:	000815e8 	cmpgeui	zero,zero,8279
   80ac4:	00081324 	muli	zero,zero,8268
   80ac8:	000815e8 	cmpgeui	zero,zero,8279
   80acc:	000815e8 	cmpgeui	zero,zero,8279
   80ad0:	00081384 	movi	zero,8270
   80ad4:	000815e8 	cmpgeui	zero,zero,8279
   80ad8:	000815e8 	cmpgeui	zero,zero,8279
   80adc:	000815e8 	cmpgeui	zero,zero,8279
   80ae0:	000815e8 	cmpgeui	zero,zero,8279
   80ae4:	000815e8 	cmpgeui	zero,zero,8279
   80ae8:	000815e8 	cmpgeui	zero,zero,8279
   80aec:	000815e8 	cmpgeui	zero,zero,8279
   80af0:	000815e8 	cmpgeui	zero,zero,8279
   80af4:	000815e8 	cmpgeui	zero,zero,8279
   80af8:	000815e8 	cmpgeui	zero,zero,8279
   80afc:	00081594 	movui	zero,8278
   80b00:	00081534 	movhi	zero,8276
   80b04:	00080e00 	call	80e0 <__reset-0x77f20>
   80b08:	00080e00 	call	80e0 <__reset-0x77f20>
   80b0c:	00080e00 	call	80e0 <__reset-0x77f20>
   80b10:	00081544 	movi	zero,8277
   80b14:	00081534 	movhi	zero,8276
   80b18:	000815e8 	cmpgeui	zero,zero,8279
   80b1c:	000815e8 	cmpgeui	zero,zero,8279
   80b20:	00081550 	cmplti	zero,zero,8277
   80b24:	000815e8 	cmpgeui	zero,zero,8279
   80b28:	00081560 	cmpeqi	zero,zero,8277
   80b2c:	00081434 	movhi	zero,8272
   80b30:	00080b70 	cmpltui	zero,zero,8237
   80b34:	00081454 	movui	zero,8273
   80b38:	000815e8 	cmpgeui	zero,zero,8279
   80b3c:	00081460 	cmpeqi	zero,zero,8273
   80b40:	000815e8 	cmpgeui	zero,zero,8279
   80b44:	000814bc 	xorhi	zero,zero,8274
   80b48:	000815e8 	cmpgeui	zero,zero,8279
   80b4c:	000815e8 	cmpgeui	zero,zero,8279
   80b50:	000814cc 	andi	zero,zero,8275
   80b54:	d9003117 	ldw	r4,196(sp)
   80b58:	d8802d15 	stw	r2,180(sp)
   80b5c:	0109c83a 	sub	r4,zero,r4
   80b60:	d9003115 	stw	r4,196(sp)
   80b64:	94800114 	ori	r18,r18,4
   80b68:	ac400007 	ldb	r17,0(r21)
   80b6c:	003f9706 	br	809cc <__alt_data_end+0xfffb4edc>
   80b70:	00800c04 	movi	r2,48
   80b74:	d9002d17 	ldw	r4,180(sp)
   80b78:	d9402917 	ldw	r5,164(sp)
   80b7c:	d8802705 	stb	r2,156(sp)
   80b80:	00801e04 	movi	r2,120
   80b84:	d8802745 	stb	r2,157(sp)
   80b88:	d8002785 	stb	zero,158(sp)
   80b8c:	20c00104 	addi	r3,r4,4
   80b90:	24c00017 	ldw	r19,0(r4)
   80b94:	002d883a 	mov	r22,zero
   80b98:	90800094 	ori	r2,r18,2
   80b9c:	28029a16 	blt	r5,zero,81608 <___vfprintf_internal_r+0xdc0>
   80ba0:	00bfdfc4 	movi	r2,-129
   80ba4:	90a4703a 	and	r18,r18,r2
   80ba8:	d8c02d15 	stw	r3,180(sp)
   80bac:	94800094 	ori	r18,r18,2
   80bb0:	9802871e 	bne	r19,zero,815d0 <___vfprintf_internal_r+0xd88>
   80bb4:	00800274 	movhi	r2,9
   80bb8:	10be4804 	addi	r2,r2,-1760
   80bbc:	d8803915 	stw	r2,228(sp)
   80bc0:	04401e04 	movi	r17,120
   80bc4:	d8802917 	ldw	r2,164(sp)
   80bc8:	0039883a 	mov	fp,zero
   80bcc:	1001e926 	beq	r2,zero,81374 <___vfprintf_internal_r+0xb2c>
   80bd0:	0027883a 	mov	r19,zero
   80bd4:	002d883a 	mov	r22,zero
   80bd8:	00020506 	br	813f0 <___vfprintf_internal_r+0xba8>
   80bdc:	d9002c17 	ldw	r4,176(sp)
   80be0:	b80b883a 	mov	r5,r23
   80be4:	0082b180 	call	82b18 <__swsetup_r>
   80be8:	1005ac1e 	bne	r2,zero,8229c <___vfprintf_internal_r+0x1a54>
   80bec:	b880030b 	ldhu	r2,12(r23)
   80bf0:	00c00284 	movi	r3,10
   80bf4:	1080068c 	andi	r2,r2,26
   80bf8:	10ff3c1e 	bne	r2,r3,808ec <__alt_data_end+0xfffb4dfc>
   80bfc:	b880038f 	ldh	r2,14(r23)
   80c00:	103f3a16 	blt	r2,zero,808ec <__alt_data_end+0xfffb4dfc>
   80c04:	d9c02d17 	ldw	r7,180(sp)
   80c08:	d9002c17 	ldw	r4,176(sp)
   80c0c:	a80d883a 	mov	r6,r21
   80c10:	b80b883a 	mov	r5,r23
   80c14:	0082a5c0 	call	82a5c <__sbprintf>
   80c18:	00001106 	br	80c60 <___vfprintf_internal_r+0x418>
   80c1c:	d9002c17 	ldw	r4,176(sp)
   80c20:	d9801e04 	addi	r6,sp,120
   80c24:	b80b883a 	mov	r5,r23
   80c28:	0087e440 	call	87e44 <__sprint_r>
   80c2c:	1000081e 	bne	r2,zero,80c50 <___vfprintf_internal_r+0x408>
   80c30:	da000404 	addi	r8,sp,16
   80c34:	003f5306 	br	80984 <__alt_data_end+0xfffb4e94>
   80c38:	d8802017 	ldw	r2,128(sp)
   80c3c:	10000426 	beq	r2,zero,80c50 <___vfprintf_internal_r+0x408>
   80c40:	d9002c17 	ldw	r4,176(sp)
   80c44:	d9801e04 	addi	r6,sp,120
   80c48:	b80b883a 	mov	r5,r23
   80c4c:	0087e440 	call	87e44 <__sprint_r>
   80c50:	b880030b 	ldhu	r2,12(r23)
   80c54:	1080100c 	andi	r2,r2,64
   80c58:	1005901e 	bne	r2,zero,8229c <___vfprintf_internal_r+0x1a54>
   80c5c:	d8802f17 	ldw	r2,188(sp)
   80c60:	dfc04717 	ldw	ra,284(sp)
   80c64:	df004617 	ldw	fp,280(sp)
   80c68:	ddc04517 	ldw	r23,276(sp)
   80c6c:	dd804417 	ldw	r22,272(sp)
   80c70:	dd404317 	ldw	r21,268(sp)
   80c74:	dd004217 	ldw	r20,264(sp)
   80c78:	dcc04117 	ldw	r19,260(sp)
   80c7c:	dc804017 	ldw	r18,256(sp)
   80c80:	dc403f17 	ldw	r17,252(sp)
   80c84:	dc003e17 	ldw	r16,248(sp)
   80c88:	dec04804 	addi	sp,sp,288
   80c8c:	f800283a 	ret
   80c90:	d9002c17 	ldw	r4,176(sp)
   80c94:	0084aec0 	call	84aec <__sinit>
   80c98:	003f0406 	br	808ac <__alt_data_end+0xfffb4dbc>
   80c9c:	d8802d17 	ldw	r2,180(sp)
   80ca0:	d9002d17 	ldw	r4,180(sp)
   80ca4:	10800017 	ldw	r2,0(r2)
   80ca8:	d8803115 	stw	r2,196(sp)
   80cac:	20800104 	addi	r2,r4,4
   80cb0:	d9003117 	ldw	r4,196(sp)
   80cb4:	203fa716 	blt	r4,zero,80b54 <__alt_data_end+0xfffb5064>
   80cb8:	d8802d15 	stw	r2,180(sp)
   80cbc:	ac400007 	ldb	r17,0(r21)
   80cc0:	003f4206 	br	809cc <__alt_data_end+0xfffb4edc>
   80cc4:	ac400007 	ldb	r17,0(r21)
   80cc8:	aac00044 	addi	r11,r21,1
   80ccc:	8a872826 	beq	r17,r10,82970 <___vfprintf_internal_r+0x2128>
   80cd0:	88bff404 	addi	r2,r17,-48
   80cd4:	0009883a 	mov	r4,zero
   80cd8:	30867d36 	bltu	r6,r2,826d0 <___vfprintf_internal_r+0x1e88>
   80cdc:	5c400007 	ldb	r17,0(r11)
   80ce0:	210002a4 	muli	r4,r4,10
   80ce4:	5d400044 	addi	r21,r11,1
   80ce8:	a817883a 	mov	r11,r21
   80cec:	2089883a 	add	r4,r4,r2
   80cf0:	88bff404 	addi	r2,r17,-48
   80cf4:	30bff92e 	bgeu	r6,r2,80cdc <__alt_data_end+0xfffb51ec>
   80cf8:	2005c916 	blt	r4,zero,82420 <___vfprintf_internal_r+0x1bd8>
   80cfc:	d9002915 	stw	r4,164(sp)
   80d00:	003f3306 	br	809d0 <__alt_data_end+0xfffb4ee0>
   80d04:	94802014 	ori	r18,r18,128
   80d08:	ac400007 	ldb	r17,0(r21)
   80d0c:	003f2f06 	br	809cc <__alt_data_end+0xfffb4edc>
   80d10:	a809883a 	mov	r4,r21
   80d14:	d8003115 	stw	zero,196(sp)
   80d18:	88bff404 	addi	r2,r17,-48
   80d1c:	0017883a 	mov	r11,zero
   80d20:	24400007 	ldb	r17,0(r4)
   80d24:	5ac002a4 	muli	r11,r11,10
   80d28:	ad400044 	addi	r21,r21,1
   80d2c:	a809883a 	mov	r4,r21
   80d30:	12d7883a 	add	r11,r2,r11
   80d34:	88bff404 	addi	r2,r17,-48
   80d38:	30bff92e 	bgeu	r6,r2,80d20 <__alt_data_end+0xfffb5230>
   80d3c:	dac03115 	stw	r11,196(sp)
   80d40:	003f2306 	br	809d0 <__alt_data_end+0xfffb4ee0>
   80d44:	18c03fcc 	andi	r3,r3,255
   80d48:	18072b1e 	bne	r3,zero,829f8 <___vfprintf_internal_r+0x21b0>
   80d4c:	94800414 	ori	r18,r18,16
   80d50:	9080080c 	andi	r2,r18,32
   80d54:	10037b26 	beq	r2,zero,81b44 <___vfprintf_internal_r+0x12fc>
   80d58:	d9402d17 	ldw	r5,180(sp)
   80d5c:	28800117 	ldw	r2,4(r5)
   80d60:	2cc00017 	ldw	r19,0(r5)
   80d64:	29400204 	addi	r5,r5,8
   80d68:	d9402d15 	stw	r5,180(sp)
   80d6c:	102d883a 	mov	r22,r2
   80d70:	10044b16 	blt	r2,zero,81ea0 <___vfprintf_internal_r+0x1658>
   80d74:	d9402917 	ldw	r5,164(sp)
   80d78:	df002783 	ldbu	fp,158(sp)
   80d7c:	2803bc16 	blt	r5,zero,81c70 <___vfprintf_internal_r+0x1428>
   80d80:	00ffdfc4 	movi	r3,-129
   80d84:	9d84b03a 	or	r2,r19,r22
   80d88:	90e4703a 	and	r18,r18,r3
   80d8c:	10017726 	beq	r2,zero,8136c <___vfprintf_internal_r+0xb24>
   80d90:	b0038326 	beq	r22,zero,81ba0 <___vfprintf_internal_r+0x1358>
   80d94:	dc402a15 	stw	r17,168(sp)
   80d98:	dc001e04 	addi	r16,sp,120
   80d9c:	b023883a 	mov	r17,r22
   80da0:	402d883a 	mov	r22,r8
   80da4:	9809883a 	mov	r4,r19
   80da8:	880b883a 	mov	r5,r17
   80dac:	01800284 	movi	r6,10
   80db0:	000f883a 	mov	r7,zero
   80db4:	008a23c0 	call	8a23c <__umoddi3>
   80db8:	10800c04 	addi	r2,r2,48
   80dbc:	843fffc4 	addi	r16,r16,-1
   80dc0:	9809883a 	mov	r4,r19
   80dc4:	880b883a 	mov	r5,r17
   80dc8:	80800005 	stb	r2,0(r16)
   80dcc:	01800284 	movi	r6,10
   80dd0:	000f883a 	mov	r7,zero
   80dd4:	0089cc40 	call	89cc4 <__udivdi3>
   80dd8:	1027883a 	mov	r19,r2
   80ddc:	10c4b03a 	or	r2,r2,r3
   80de0:	1823883a 	mov	r17,r3
   80de4:	103fef1e 	bne	r2,zero,80da4 <__alt_data_end+0xfffb52b4>
   80de8:	d8c02817 	ldw	r3,160(sp)
   80dec:	dc402a17 	ldw	r17,168(sp)
   80df0:	b011883a 	mov	r8,r22
   80df4:	1c07c83a 	sub	r3,r3,r16
   80df8:	d8c02e15 	stw	r3,184(sp)
   80dfc:	00005906 	br	80f64 <___vfprintf_internal_r+0x71c>
   80e00:	18c03fcc 	andi	r3,r3,255
   80e04:	1806fa1e 	bne	r3,zero,829f0 <___vfprintf_internal_r+0x21a8>
   80e08:	9080020c 	andi	r2,r18,8
   80e0c:	10048a26 	beq	r2,zero,82038 <___vfprintf_internal_r+0x17f0>
   80e10:	d8c02d17 	ldw	r3,180(sp)
   80e14:	d9002d17 	ldw	r4,180(sp)
   80e18:	d9402d17 	ldw	r5,180(sp)
   80e1c:	18c00017 	ldw	r3,0(r3)
   80e20:	21000117 	ldw	r4,4(r4)
   80e24:	29400204 	addi	r5,r5,8
   80e28:	d8c03615 	stw	r3,216(sp)
   80e2c:	d9003815 	stw	r4,224(sp)
   80e30:	d9402d15 	stw	r5,180(sp)
   80e34:	d9003617 	ldw	r4,216(sp)
   80e38:	d9403817 	ldw	r5,224(sp)
   80e3c:	da003d15 	stw	r8,244(sp)
   80e40:	04000044 	movi	r16,1
   80e44:	0087a680 	call	87a68 <__fpclassifyd>
   80e48:	da003d17 	ldw	r8,244(sp)
   80e4c:	14041f1e 	bne	r2,r16,81ecc <___vfprintf_internal_r+0x1684>
   80e50:	d9003617 	ldw	r4,216(sp)
   80e54:	d9403817 	ldw	r5,224(sp)
   80e58:	000d883a 	mov	r6,zero
   80e5c:	000f883a 	mov	r7,zero
   80e60:	008bc200 	call	8bc20 <__ledf2>
   80e64:	da003d17 	ldw	r8,244(sp)
   80e68:	1005be16 	blt	r2,zero,82564 <___vfprintf_internal_r+0x1d1c>
   80e6c:	df002783 	ldbu	fp,158(sp)
   80e70:	008011c4 	movi	r2,71
   80e74:	1445330e 	bge	r2,r17,82344 <___vfprintf_internal_r+0x1afc>
   80e78:	04000274 	movhi	r16,9
   80e7c:	843e4004 	addi	r16,r16,-1792
   80e80:	00c000c4 	movi	r3,3
   80e84:	00bfdfc4 	movi	r2,-129
   80e88:	d8c02a15 	stw	r3,168(sp)
   80e8c:	90a4703a 	and	r18,r18,r2
   80e90:	d8c02e15 	stw	r3,184(sp)
   80e94:	d8002915 	stw	zero,164(sp)
   80e98:	d8003215 	stw	zero,200(sp)
   80e9c:	00003706 	br	80f7c <___vfprintf_internal_r+0x734>
   80ea0:	94800214 	ori	r18,r18,8
   80ea4:	ac400007 	ldb	r17,0(r21)
   80ea8:	003ec806 	br	809cc <__alt_data_end+0xfffb4edc>
   80eac:	18c03fcc 	andi	r3,r3,255
   80eb0:	1806db1e 	bne	r3,zero,82a20 <___vfprintf_internal_r+0x21d8>
   80eb4:	94800414 	ori	r18,r18,16
   80eb8:	9080080c 	andi	r2,r18,32
   80ebc:	1002d826 	beq	r2,zero,81a20 <___vfprintf_internal_r+0x11d8>
   80ec0:	d9402d17 	ldw	r5,180(sp)
   80ec4:	d8c02917 	ldw	r3,164(sp)
   80ec8:	d8002785 	stb	zero,158(sp)
   80ecc:	28800204 	addi	r2,r5,8
   80ed0:	2cc00017 	ldw	r19,0(r5)
   80ed4:	2d800117 	ldw	r22,4(r5)
   80ed8:	18048f16 	blt	r3,zero,82118 <___vfprintf_internal_r+0x18d0>
   80edc:	013fdfc4 	movi	r4,-129
   80ee0:	9d86b03a 	or	r3,r19,r22
   80ee4:	d8802d15 	stw	r2,180(sp)
   80ee8:	9124703a 	and	r18,r18,r4
   80eec:	1802d91e 	bne	r3,zero,81a54 <___vfprintf_internal_r+0x120c>
   80ef0:	d8c02917 	ldw	r3,164(sp)
   80ef4:	0039883a 	mov	fp,zero
   80ef8:	1805c326 	beq	r3,zero,82608 <___vfprintf_internal_r+0x1dc0>
   80efc:	0027883a 	mov	r19,zero
   80f00:	002d883a 	mov	r22,zero
   80f04:	dc001e04 	addi	r16,sp,120
   80f08:	9806d0fa 	srli	r3,r19,3
   80f0c:	b008977a 	slli	r4,r22,29
   80f10:	b02cd0fa 	srli	r22,r22,3
   80f14:	9cc001cc 	andi	r19,r19,7
   80f18:	98800c04 	addi	r2,r19,48
   80f1c:	843fffc4 	addi	r16,r16,-1
   80f20:	20e6b03a 	or	r19,r4,r3
   80f24:	80800005 	stb	r2,0(r16)
   80f28:	9d86b03a 	or	r3,r19,r22
   80f2c:	183ff61e 	bne	r3,zero,80f08 <__alt_data_end+0xfffb5418>
   80f30:	90c0004c 	andi	r3,r18,1
   80f34:	18013b26 	beq	r3,zero,81424 <___vfprintf_internal_r+0xbdc>
   80f38:	10803fcc 	andi	r2,r2,255
   80f3c:	1080201c 	xori	r2,r2,128
   80f40:	10bfe004 	addi	r2,r2,-128
   80f44:	00c00c04 	movi	r3,48
   80f48:	10c13626 	beq	r2,r3,81424 <___vfprintf_internal_r+0xbdc>
   80f4c:	80ffffc5 	stb	r3,-1(r16)
   80f50:	d8c02817 	ldw	r3,160(sp)
   80f54:	80bfffc4 	addi	r2,r16,-1
   80f58:	1021883a 	mov	r16,r2
   80f5c:	1887c83a 	sub	r3,r3,r2
   80f60:	d8c02e15 	stw	r3,184(sp)
   80f64:	d8802e17 	ldw	r2,184(sp)
   80f68:	d9002917 	ldw	r4,164(sp)
   80f6c:	1100010e 	bge	r2,r4,80f74 <___vfprintf_internal_r+0x72c>
   80f70:	2005883a 	mov	r2,r4
   80f74:	d8802a15 	stw	r2,168(sp)
   80f78:	d8003215 	stw	zero,200(sp)
   80f7c:	e7003fcc 	andi	fp,fp,255
   80f80:	e700201c 	xori	fp,fp,128
   80f84:	e73fe004 	addi	fp,fp,-128
   80f88:	e0000326 	beq	fp,zero,80f98 <___vfprintf_internal_r+0x750>
   80f8c:	d8c02a17 	ldw	r3,168(sp)
   80f90:	18c00044 	addi	r3,r3,1
   80f94:	d8c02a15 	stw	r3,168(sp)
   80f98:	90c0008c 	andi	r3,r18,2
   80f9c:	d8c02b15 	stw	r3,172(sp)
   80fa0:	18000326 	beq	r3,zero,80fb0 <___vfprintf_internal_r+0x768>
   80fa4:	d8c02a17 	ldw	r3,168(sp)
   80fa8:	18c00084 	addi	r3,r3,2
   80fac:	d8c02a15 	stw	r3,168(sp)
   80fb0:	90c0210c 	andi	r3,r18,132
   80fb4:	d8c03015 	stw	r3,192(sp)
   80fb8:	1801a31e 	bne	r3,zero,81648 <___vfprintf_internal_r+0xe00>
   80fbc:	d9003117 	ldw	r4,196(sp)
   80fc0:	d8c02a17 	ldw	r3,168(sp)
   80fc4:	20e7c83a 	sub	r19,r4,r3
   80fc8:	04c19f0e 	bge	zero,r19,81648 <___vfprintf_internal_r+0xe00>
   80fcc:	02400404 	movi	r9,16
   80fd0:	d8c02017 	ldw	r3,128(sp)
   80fd4:	d8801f17 	ldw	r2,124(sp)
   80fd8:	4cc50d0e 	bge	r9,r19,82410 <___vfprintf_internal_r+0x1bc8>
   80fdc:	01400274 	movhi	r5,9
   80fe0:	297e5384 	addi	r5,r5,-1714
   80fe4:	dc403b15 	stw	r17,236(sp)
   80fe8:	d9403515 	stw	r5,212(sp)
   80fec:	9823883a 	mov	r17,r19
   80ff0:	482d883a 	mov	r22,r9
   80ff4:	9027883a 	mov	r19,r18
   80ff8:	070001c4 	movi	fp,7
   80ffc:	8025883a 	mov	r18,r16
   81000:	dc002c17 	ldw	r16,176(sp)
   81004:	00000306 	br	81014 <___vfprintf_internal_r+0x7cc>
   81008:	8c7ffc04 	addi	r17,r17,-16
   8100c:	42000204 	addi	r8,r8,8
   81010:	b440130e 	bge	r22,r17,81060 <___vfprintf_internal_r+0x818>
   81014:	01000274 	movhi	r4,9
   81018:	18c00404 	addi	r3,r3,16
   8101c:	10800044 	addi	r2,r2,1
   81020:	213e5384 	addi	r4,r4,-1714
   81024:	41000015 	stw	r4,0(r8)
   81028:	45800115 	stw	r22,4(r8)
   8102c:	d8c02015 	stw	r3,128(sp)
   81030:	d8801f15 	stw	r2,124(sp)
   81034:	e0bff40e 	bge	fp,r2,81008 <__alt_data_end+0xfffb5518>
   81038:	d9801e04 	addi	r6,sp,120
   8103c:	b80b883a 	mov	r5,r23
   81040:	8009883a 	mov	r4,r16
   81044:	0087e440 	call	87e44 <__sprint_r>
   81048:	103f011e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   8104c:	8c7ffc04 	addi	r17,r17,-16
   81050:	d8c02017 	ldw	r3,128(sp)
   81054:	d8801f17 	ldw	r2,124(sp)
   81058:	da000404 	addi	r8,sp,16
   8105c:	b47fed16 	blt	r22,r17,81014 <__alt_data_end+0xfffb5524>
   81060:	9021883a 	mov	r16,r18
   81064:	9825883a 	mov	r18,r19
   81068:	8827883a 	mov	r19,r17
   8106c:	dc403b17 	ldw	r17,236(sp)
   81070:	d9403517 	ldw	r5,212(sp)
   81074:	98c7883a 	add	r3,r19,r3
   81078:	10800044 	addi	r2,r2,1
   8107c:	41400015 	stw	r5,0(r8)
   81080:	44c00115 	stw	r19,4(r8)
   81084:	d8c02015 	stw	r3,128(sp)
   81088:	d8801f15 	stw	r2,124(sp)
   8108c:	010001c4 	movi	r4,7
   81090:	2082a316 	blt	r4,r2,81b20 <___vfprintf_internal_r+0x12d8>
   81094:	df002787 	ldb	fp,158(sp)
   81098:	42000204 	addi	r8,r8,8
   8109c:	e0000c26 	beq	fp,zero,810d0 <___vfprintf_internal_r+0x888>
   810a0:	d8801f17 	ldw	r2,124(sp)
   810a4:	d9002784 	addi	r4,sp,158
   810a8:	18c00044 	addi	r3,r3,1
   810ac:	10800044 	addi	r2,r2,1
   810b0:	41000015 	stw	r4,0(r8)
   810b4:	01000044 	movi	r4,1
   810b8:	41000115 	stw	r4,4(r8)
   810bc:	d8c02015 	stw	r3,128(sp)
   810c0:	d8801f15 	stw	r2,124(sp)
   810c4:	010001c4 	movi	r4,7
   810c8:	20823c16 	blt	r4,r2,819bc <___vfprintf_internal_r+0x1174>
   810cc:	42000204 	addi	r8,r8,8
   810d0:	d8802b17 	ldw	r2,172(sp)
   810d4:	10000c26 	beq	r2,zero,81108 <___vfprintf_internal_r+0x8c0>
   810d8:	d8801f17 	ldw	r2,124(sp)
   810dc:	d9002704 	addi	r4,sp,156
   810e0:	18c00084 	addi	r3,r3,2
   810e4:	10800044 	addi	r2,r2,1
   810e8:	41000015 	stw	r4,0(r8)
   810ec:	01000084 	movi	r4,2
   810f0:	41000115 	stw	r4,4(r8)
   810f4:	d8c02015 	stw	r3,128(sp)
   810f8:	d8801f15 	stw	r2,124(sp)
   810fc:	010001c4 	movi	r4,7
   81100:	20823616 	blt	r4,r2,819dc <___vfprintf_internal_r+0x1194>
   81104:	42000204 	addi	r8,r8,8
   81108:	d9003017 	ldw	r4,192(sp)
   8110c:	00802004 	movi	r2,128
   81110:	20819926 	beq	r4,r2,81778 <___vfprintf_internal_r+0xf30>
   81114:	d9402917 	ldw	r5,164(sp)
   81118:	d8802e17 	ldw	r2,184(sp)
   8111c:	28adc83a 	sub	r22,r5,r2
   81120:	0580310e 	bge	zero,r22,811e8 <___vfprintf_internal_r+0x9a0>
   81124:	07000404 	movi	fp,16
   81128:	d8801f17 	ldw	r2,124(sp)
   8112c:	e584140e 	bge	fp,r22,82180 <___vfprintf_internal_r+0x1938>
   81130:	01400274 	movhi	r5,9
   81134:	297e4f84 	addi	r5,r5,-1730
   81138:	dc402915 	stw	r17,164(sp)
   8113c:	d9402b15 	stw	r5,172(sp)
   81140:	b023883a 	mov	r17,r22
   81144:	04c001c4 	movi	r19,7
   81148:	a82d883a 	mov	r22,r21
   8114c:	902b883a 	mov	r21,r18
   81150:	8025883a 	mov	r18,r16
   81154:	dc002c17 	ldw	r16,176(sp)
   81158:	00000306 	br	81168 <___vfprintf_internal_r+0x920>
   8115c:	8c7ffc04 	addi	r17,r17,-16
   81160:	42000204 	addi	r8,r8,8
   81164:	e440110e 	bge	fp,r17,811ac <___vfprintf_internal_r+0x964>
   81168:	18c00404 	addi	r3,r3,16
   8116c:	10800044 	addi	r2,r2,1
   81170:	45000015 	stw	r20,0(r8)
   81174:	47000115 	stw	fp,4(r8)
   81178:	d8c02015 	stw	r3,128(sp)
   8117c:	d8801f15 	stw	r2,124(sp)
   81180:	98bff60e 	bge	r19,r2,8115c <__alt_data_end+0xfffb566c>
   81184:	d9801e04 	addi	r6,sp,120
   81188:	b80b883a 	mov	r5,r23
   8118c:	8009883a 	mov	r4,r16
   81190:	0087e440 	call	87e44 <__sprint_r>
   81194:	103eae1e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   81198:	8c7ffc04 	addi	r17,r17,-16
   8119c:	d8c02017 	ldw	r3,128(sp)
   811a0:	d8801f17 	ldw	r2,124(sp)
   811a4:	da000404 	addi	r8,sp,16
   811a8:	e47fef16 	blt	fp,r17,81168 <__alt_data_end+0xfffb5678>
   811ac:	9021883a 	mov	r16,r18
   811b0:	a825883a 	mov	r18,r21
   811b4:	b02b883a 	mov	r21,r22
   811b8:	882d883a 	mov	r22,r17
   811bc:	dc402917 	ldw	r17,164(sp)
   811c0:	d9002b17 	ldw	r4,172(sp)
   811c4:	1d87883a 	add	r3,r3,r22
   811c8:	10800044 	addi	r2,r2,1
   811cc:	41000015 	stw	r4,0(r8)
   811d0:	45800115 	stw	r22,4(r8)
   811d4:	d8c02015 	stw	r3,128(sp)
   811d8:	d8801f15 	stw	r2,124(sp)
   811dc:	010001c4 	movi	r4,7
   811e0:	2081ee16 	blt	r4,r2,8199c <___vfprintf_internal_r+0x1154>
   811e4:	42000204 	addi	r8,r8,8
   811e8:	9080400c 	andi	r2,r18,256
   811ec:	1001181e 	bne	r2,zero,81650 <___vfprintf_internal_r+0xe08>
   811f0:	d9402e17 	ldw	r5,184(sp)
   811f4:	d8801f17 	ldw	r2,124(sp)
   811f8:	44000015 	stw	r16,0(r8)
   811fc:	1947883a 	add	r3,r3,r5
   81200:	10800044 	addi	r2,r2,1
   81204:	41400115 	stw	r5,4(r8)
   81208:	d8c02015 	stw	r3,128(sp)
   8120c:	d8801f15 	stw	r2,124(sp)
   81210:	010001c4 	movi	r4,7
   81214:	2081d316 	blt	r4,r2,81964 <___vfprintf_internal_r+0x111c>
   81218:	42000204 	addi	r8,r8,8
   8121c:	9480010c 	andi	r18,r18,4
   81220:	90003226 	beq	r18,zero,812ec <___vfprintf_internal_r+0xaa4>
   81224:	d9403117 	ldw	r5,196(sp)
   81228:	d8802a17 	ldw	r2,168(sp)
   8122c:	28a1c83a 	sub	r16,r5,r2
   81230:	04002e0e 	bge	zero,r16,812ec <___vfprintf_internal_r+0xaa4>
   81234:	04400404 	movi	r17,16
   81238:	d8801f17 	ldw	r2,124(sp)
   8123c:	8c04a20e 	bge	r17,r16,824c8 <___vfprintf_internal_r+0x1c80>
   81240:	01400274 	movhi	r5,9
   81244:	297e5384 	addi	r5,r5,-1714
   81248:	d9403515 	stw	r5,212(sp)
   8124c:	048001c4 	movi	r18,7
   81250:	dcc02c17 	ldw	r19,176(sp)
   81254:	00000306 	br	81264 <___vfprintf_internal_r+0xa1c>
   81258:	843ffc04 	addi	r16,r16,-16
   8125c:	42000204 	addi	r8,r8,8
   81260:	8c00130e 	bge	r17,r16,812b0 <___vfprintf_internal_r+0xa68>
   81264:	01000274 	movhi	r4,9
   81268:	18c00404 	addi	r3,r3,16
   8126c:	10800044 	addi	r2,r2,1
   81270:	213e5384 	addi	r4,r4,-1714
   81274:	41000015 	stw	r4,0(r8)
   81278:	44400115 	stw	r17,4(r8)
   8127c:	d8c02015 	stw	r3,128(sp)
   81280:	d8801f15 	stw	r2,124(sp)
   81284:	90bff40e 	bge	r18,r2,81258 <__alt_data_end+0xfffb5768>
   81288:	d9801e04 	addi	r6,sp,120
   8128c:	b80b883a 	mov	r5,r23
   81290:	9809883a 	mov	r4,r19
   81294:	0087e440 	call	87e44 <__sprint_r>
   81298:	103e6d1e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   8129c:	843ffc04 	addi	r16,r16,-16
   812a0:	d8c02017 	ldw	r3,128(sp)
   812a4:	d8801f17 	ldw	r2,124(sp)
   812a8:	da000404 	addi	r8,sp,16
   812ac:	8c3fed16 	blt	r17,r16,81264 <__alt_data_end+0xfffb5774>
   812b0:	d9403517 	ldw	r5,212(sp)
   812b4:	1c07883a 	add	r3,r3,r16
   812b8:	10800044 	addi	r2,r2,1
   812bc:	41400015 	stw	r5,0(r8)
   812c0:	44000115 	stw	r16,4(r8)
   812c4:	d8c02015 	stw	r3,128(sp)
   812c8:	d8801f15 	stw	r2,124(sp)
   812cc:	010001c4 	movi	r4,7
   812d0:	2080060e 	bge	r4,r2,812ec <___vfprintf_internal_r+0xaa4>
   812d4:	d9002c17 	ldw	r4,176(sp)
   812d8:	d9801e04 	addi	r6,sp,120
   812dc:	b80b883a 	mov	r5,r23
   812e0:	0087e440 	call	87e44 <__sprint_r>
   812e4:	103e5a1e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   812e8:	d8c02017 	ldw	r3,128(sp)
   812ec:	d8803117 	ldw	r2,196(sp)
   812f0:	d9002a17 	ldw	r4,168(sp)
   812f4:	1100010e 	bge	r2,r4,812fc <___vfprintf_internal_r+0xab4>
   812f8:	2005883a 	mov	r2,r4
   812fc:	d9402f17 	ldw	r5,188(sp)
   81300:	288b883a 	add	r5,r5,r2
   81304:	d9402f15 	stw	r5,188(sp)
   81308:	18019e1e 	bne	r3,zero,81984 <___vfprintf_internal_r+0x113c>
   8130c:	a8800007 	ldb	r2,0(r21)
   81310:	d8001f15 	stw	zero,124(sp)
   81314:	da000404 	addi	r8,sp,16
   81318:	103d851e 	bne	r2,zero,80930 <__alt_data_end+0xfffb4e40>
   8131c:	a821883a 	mov	r16,r21
   81320:	003d9b06 	br	80990 <__alt_data_end+0xfffb4ea0>
   81324:	18c03fcc 	andi	r3,r3,255
   81328:	1805c11e 	bne	r3,zero,82a30 <___vfprintf_internal_r+0x21e8>
   8132c:	94800414 	ori	r18,r18,16
   81330:	9080080c 	andi	r2,r18,32
   81334:	10020c26 	beq	r2,zero,81b68 <___vfprintf_internal_r+0x1320>
   81338:	d8802d17 	ldw	r2,180(sp)
   8133c:	d9002917 	ldw	r4,164(sp)
   81340:	d8002785 	stb	zero,158(sp)
   81344:	10c00204 	addi	r3,r2,8
   81348:	14c00017 	ldw	r19,0(r2)
   8134c:	15800117 	ldw	r22,4(r2)
   81350:	20040f16 	blt	r4,zero,82390 <___vfprintf_internal_r+0x1b48>
   81354:	013fdfc4 	movi	r4,-129
   81358:	9d84b03a 	or	r2,r19,r22
   8135c:	d8c02d15 	stw	r3,180(sp)
   81360:	9124703a 	and	r18,r18,r4
   81364:	0039883a 	mov	fp,zero
   81368:	103e891e 	bne	r2,zero,80d90 <__alt_data_end+0xfffb52a0>
   8136c:	d9002917 	ldw	r4,164(sp)
   81370:	2002c11e 	bne	r4,zero,81e78 <___vfprintf_internal_r+0x1630>
   81374:	d8002915 	stw	zero,164(sp)
   81378:	d8002e15 	stw	zero,184(sp)
   8137c:	dc001e04 	addi	r16,sp,120
   81380:	003ef806 	br	80f64 <__alt_data_end+0xfffb5474>
   81384:	18c03fcc 	andi	r3,r3,255
   81388:	18059d1e 	bne	r3,zero,82a00 <___vfprintf_internal_r+0x21b8>
   8138c:	01400274 	movhi	r5,9
   81390:	297e4304 	addi	r5,r5,-1780
   81394:	d9403915 	stw	r5,228(sp)
   81398:	9080080c 	andi	r2,r18,32
   8139c:	10005226 	beq	r2,zero,814e8 <___vfprintf_internal_r+0xca0>
   813a0:	d8802d17 	ldw	r2,180(sp)
   813a4:	14c00017 	ldw	r19,0(r2)
   813a8:	15800117 	ldw	r22,4(r2)
   813ac:	10800204 	addi	r2,r2,8
   813b0:	d8802d15 	stw	r2,180(sp)
   813b4:	9080004c 	andi	r2,r18,1
   813b8:	10019026 	beq	r2,zero,819fc <___vfprintf_internal_r+0x11b4>
   813bc:	9d84b03a 	or	r2,r19,r22
   813c0:	10036926 	beq	r2,zero,82168 <___vfprintf_internal_r+0x1920>
   813c4:	d8c02917 	ldw	r3,164(sp)
   813c8:	00800c04 	movi	r2,48
   813cc:	d8802705 	stb	r2,156(sp)
   813d0:	dc402745 	stb	r17,157(sp)
   813d4:	d8002785 	stb	zero,158(sp)
   813d8:	90800094 	ori	r2,r18,2
   813dc:	18045d16 	blt	r3,zero,82554 <___vfprintf_internal_r+0x1d0c>
   813e0:	00bfdfc4 	movi	r2,-129
   813e4:	90a4703a 	and	r18,r18,r2
   813e8:	94800094 	ori	r18,r18,2
   813ec:	0039883a 	mov	fp,zero
   813f0:	d9003917 	ldw	r4,228(sp)
   813f4:	dc001e04 	addi	r16,sp,120
   813f8:	988003cc 	andi	r2,r19,15
   813fc:	b006973a 	slli	r3,r22,28
   81400:	2085883a 	add	r2,r4,r2
   81404:	9826d13a 	srli	r19,r19,4
   81408:	10800003 	ldbu	r2,0(r2)
   8140c:	b02cd13a 	srli	r22,r22,4
   81410:	843fffc4 	addi	r16,r16,-1
   81414:	1ce6b03a 	or	r19,r3,r19
   81418:	80800005 	stb	r2,0(r16)
   8141c:	9d84b03a 	or	r2,r19,r22
   81420:	103ff51e 	bne	r2,zero,813f8 <__alt_data_end+0xfffb5908>
   81424:	d8c02817 	ldw	r3,160(sp)
   81428:	1c07c83a 	sub	r3,r3,r16
   8142c:	d8c02e15 	stw	r3,184(sp)
   81430:	003ecc06 	br	80f64 <__alt_data_end+0xfffb5474>
   81434:	18c03fcc 	andi	r3,r3,255
   81438:	183e9f26 	beq	r3,zero,80eb8 <__alt_data_end+0xfffb53c8>
   8143c:	d9c02785 	stb	r7,158(sp)
   81440:	003e9d06 	br	80eb8 <__alt_data_end+0xfffb53c8>
   81444:	00c00044 	movi	r3,1
   81448:	01c00ac4 	movi	r7,43
   8144c:	ac400007 	ldb	r17,0(r21)
   81450:	003d5e06 	br	809cc <__alt_data_end+0xfffb4edc>
   81454:	94800814 	ori	r18,r18,32
   81458:	ac400007 	ldb	r17,0(r21)
   8145c:	003d5b06 	br	809cc <__alt_data_end+0xfffb4edc>
   81460:	d8c02d17 	ldw	r3,180(sp)
   81464:	d8002785 	stb	zero,158(sp)
   81468:	1c000017 	ldw	r16,0(r3)
   8146c:	1cc00104 	addi	r19,r3,4
   81470:	80041926 	beq	r16,zero,824d8 <___vfprintf_internal_r+0x1c90>
   81474:	d9002917 	ldw	r4,164(sp)
   81478:	2003d016 	blt	r4,zero,823bc <___vfprintf_internal_r+0x1b74>
   8147c:	200d883a 	mov	r6,r4
   81480:	000b883a 	mov	r5,zero
   81484:	8009883a 	mov	r4,r16
   81488:	da003d15 	stw	r8,244(sp)
   8148c:	00860580 	call	86058 <memchr>
   81490:	da003d17 	ldw	r8,244(sp)
   81494:	10045426 	beq	r2,zero,825e8 <___vfprintf_internal_r+0x1da0>
   81498:	1405c83a 	sub	r2,r2,r16
   8149c:	d8802e15 	stw	r2,184(sp)
   814a0:	1003cc16 	blt	r2,zero,823d4 <___vfprintf_internal_r+0x1b8c>
   814a4:	df002783 	ldbu	fp,158(sp)
   814a8:	d8802a15 	stw	r2,168(sp)
   814ac:	dcc02d15 	stw	r19,180(sp)
   814b0:	d8002915 	stw	zero,164(sp)
   814b4:	d8003215 	stw	zero,200(sp)
   814b8:	003eb006 	br	80f7c <__alt_data_end+0xfffb548c>
   814bc:	18c03fcc 	andi	r3,r3,255
   814c0:	183f9b26 	beq	r3,zero,81330 <__alt_data_end+0xfffb5840>
   814c4:	d9c02785 	stb	r7,158(sp)
   814c8:	003f9906 	br	81330 <__alt_data_end+0xfffb5840>
   814cc:	18c03fcc 	andi	r3,r3,255
   814d0:	1805551e 	bne	r3,zero,82a28 <___vfprintf_internal_r+0x21e0>
   814d4:	01400274 	movhi	r5,9
   814d8:	297e4804 	addi	r5,r5,-1760
   814dc:	d9403915 	stw	r5,228(sp)
   814e0:	9080080c 	andi	r2,r18,32
   814e4:	103fae1e 	bne	r2,zero,813a0 <__alt_data_end+0xfffb58b0>
   814e8:	9080040c 	andi	r2,r18,16
   814ec:	1002de26 	beq	r2,zero,82068 <___vfprintf_internal_r+0x1820>
   814f0:	d8c02d17 	ldw	r3,180(sp)
   814f4:	002d883a 	mov	r22,zero
   814f8:	1cc00017 	ldw	r19,0(r3)
   814fc:	18c00104 	addi	r3,r3,4
   81500:	d8c02d15 	stw	r3,180(sp)
   81504:	003fab06 	br	813b4 <__alt_data_end+0xfffb58c4>
   81508:	38803fcc 	andi	r2,r7,255
   8150c:	1080201c 	xori	r2,r2,128
   81510:	10bfe004 	addi	r2,r2,-128
   81514:	1002d21e 	bne	r2,zero,82060 <___vfprintf_internal_r+0x1818>
   81518:	00c00044 	movi	r3,1
   8151c:	01c00804 	movi	r7,32
   81520:	ac400007 	ldb	r17,0(r21)
   81524:	003d2906 	br	809cc <__alt_data_end+0xfffb4edc>
   81528:	94800054 	ori	r18,r18,1
   8152c:	ac400007 	ldb	r17,0(r21)
   81530:	003d2606 	br	809cc <__alt_data_end+0xfffb4edc>
   81534:	18c03fcc 	andi	r3,r3,255
   81538:	183e0526 	beq	r3,zero,80d50 <__alt_data_end+0xfffb5260>
   8153c:	d9c02785 	stb	r7,158(sp)
   81540:	003e0306 	br	80d50 <__alt_data_end+0xfffb5260>
   81544:	94801014 	ori	r18,r18,64
   81548:	ac400007 	ldb	r17,0(r21)
   8154c:	003d1f06 	br	809cc <__alt_data_end+0xfffb4edc>
   81550:	ac400007 	ldb	r17,0(r21)
   81554:	8a438726 	beq	r17,r9,82374 <___vfprintf_internal_r+0x1b2c>
   81558:	94800414 	ori	r18,r18,16
   8155c:	003d1b06 	br	809cc <__alt_data_end+0xfffb4edc>
   81560:	18c03fcc 	andi	r3,r3,255
   81564:	1805341e 	bne	r3,zero,82a38 <___vfprintf_internal_r+0x21f0>
   81568:	9080080c 	andi	r2,r18,32
   8156c:	1002cd26 	beq	r2,zero,820a4 <___vfprintf_internal_r+0x185c>
   81570:	d9402d17 	ldw	r5,180(sp)
   81574:	d9002f17 	ldw	r4,188(sp)
   81578:	28800017 	ldw	r2,0(r5)
   8157c:	2007d7fa 	srai	r3,r4,31
   81580:	29400104 	addi	r5,r5,4
   81584:	d9402d15 	stw	r5,180(sp)
   81588:	11000015 	stw	r4,0(r2)
   8158c:	10c00115 	stw	r3,4(r2)
   81590:	003ce506 	br	80928 <__alt_data_end+0xfffb4e38>
   81594:	d8c02d17 	ldw	r3,180(sp)
   81598:	d9002d17 	ldw	r4,180(sp)
   8159c:	d8002785 	stb	zero,158(sp)
   815a0:	18800017 	ldw	r2,0(r3)
   815a4:	21000104 	addi	r4,r4,4
   815a8:	00c00044 	movi	r3,1
   815ac:	d8c02a15 	stw	r3,168(sp)
   815b0:	d8801405 	stb	r2,80(sp)
   815b4:	d9002d15 	stw	r4,180(sp)
   815b8:	d8c02e15 	stw	r3,184(sp)
   815bc:	d8002915 	stw	zero,164(sp)
   815c0:	d8003215 	stw	zero,200(sp)
   815c4:	dc001404 	addi	r16,sp,80
   815c8:	0039883a 	mov	fp,zero
   815cc:	003e7206 	br	80f98 <__alt_data_end+0xfffb54a8>
   815d0:	01000274 	movhi	r4,9
   815d4:	213e4804 	addi	r4,r4,-1760
   815d8:	0039883a 	mov	fp,zero
   815dc:	d9003915 	stw	r4,228(sp)
   815e0:	04401e04 	movi	r17,120
   815e4:	003f8206 	br	813f0 <__alt_data_end+0xfffb5900>
   815e8:	18c03fcc 	andi	r3,r3,255
   815ec:	1805061e 	bne	r3,zero,82a08 <___vfprintf_internal_r+0x21c0>
   815f0:	883d9126 	beq	r17,zero,80c38 <__alt_data_end+0xfffb5148>
   815f4:	00c00044 	movi	r3,1
   815f8:	d8c02a15 	stw	r3,168(sp)
   815fc:	dc401405 	stb	r17,80(sp)
   81600:	d8002785 	stb	zero,158(sp)
   81604:	003fec06 	br	815b8 <__alt_data_end+0xfffb5ac8>
   81608:	01400274 	movhi	r5,9
   8160c:	297e4804 	addi	r5,r5,-1760
   81610:	d9403915 	stw	r5,228(sp)
   81614:	d8c02d15 	stw	r3,180(sp)
   81618:	1025883a 	mov	r18,r2
   8161c:	04401e04 	movi	r17,120
   81620:	9d84b03a 	or	r2,r19,r22
   81624:	1000fc1e 	bne	r2,zero,81a18 <___vfprintf_internal_r+0x11d0>
   81628:	0039883a 	mov	fp,zero
   8162c:	00800084 	movi	r2,2
   81630:	10803fcc 	andi	r2,r2,255
   81634:	00c00044 	movi	r3,1
   81638:	10c20f26 	beq	r2,r3,81e78 <___vfprintf_internal_r+0x1630>
   8163c:	00c00084 	movi	r3,2
   81640:	10fd6326 	beq	r2,r3,80bd0 <__alt_data_end+0xfffb50e0>
   81644:	003e2d06 	br	80efc <__alt_data_end+0xfffb540c>
   81648:	d8c02017 	ldw	r3,128(sp)
   8164c:	003e9306 	br	8109c <__alt_data_end+0xfffb55ac>
   81650:	00801944 	movi	r2,101
   81654:	14407e0e 	bge	r2,r17,81850 <___vfprintf_internal_r+0x1008>
   81658:	d9003617 	ldw	r4,216(sp)
   8165c:	d9403817 	ldw	r5,224(sp)
   81660:	000d883a 	mov	r6,zero
   81664:	000f883a 	mov	r7,zero
   81668:	d8c03c15 	stw	r3,240(sp)
   8166c:	da003d15 	stw	r8,244(sp)
   81670:	008babc0 	call	8babc <__eqdf2>
   81674:	d8c03c17 	ldw	r3,240(sp)
   81678:	da003d17 	ldw	r8,244(sp)
   8167c:	1000f71e 	bne	r2,zero,81a5c <___vfprintf_internal_r+0x1214>
   81680:	d8801f17 	ldw	r2,124(sp)
   81684:	01000274 	movhi	r4,9
   81688:	213e4f04 	addi	r4,r4,-1732
   8168c:	18c00044 	addi	r3,r3,1
   81690:	10800044 	addi	r2,r2,1
   81694:	41000015 	stw	r4,0(r8)
   81698:	01000044 	movi	r4,1
   8169c:	41000115 	stw	r4,4(r8)
   816a0:	d8c02015 	stw	r3,128(sp)
   816a4:	d8801f15 	stw	r2,124(sp)
   816a8:	010001c4 	movi	r4,7
   816ac:	2082b816 	blt	r4,r2,82190 <___vfprintf_internal_r+0x1948>
   816b0:	42000204 	addi	r8,r8,8
   816b4:	d8802617 	ldw	r2,152(sp)
   816b8:	d9403317 	ldw	r5,204(sp)
   816bc:	11400216 	blt	r2,r5,816c8 <___vfprintf_internal_r+0xe80>
   816c0:	9080004c 	andi	r2,r18,1
   816c4:	103ed526 	beq	r2,zero,8121c <__alt_data_end+0xfffb572c>
   816c8:	d8803717 	ldw	r2,220(sp)
   816cc:	d9003417 	ldw	r4,208(sp)
   816d0:	d9403717 	ldw	r5,220(sp)
   816d4:	1887883a 	add	r3,r3,r2
   816d8:	d8801f17 	ldw	r2,124(sp)
   816dc:	41000015 	stw	r4,0(r8)
   816e0:	41400115 	stw	r5,4(r8)
   816e4:	10800044 	addi	r2,r2,1
   816e8:	d8c02015 	stw	r3,128(sp)
   816ec:	d8801f15 	stw	r2,124(sp)
   816f0:	010001c4 	movi	r4,7
   816f4:	20832916 	blt	r4,r2,8239c <___vfprintf_internal_r+0x1b54>
   816f8:	42000204 	addi	r8,r8,8
   816fc:	d8803317 	ldw	r2,204(sp)
   81700:	143fffc4 	addi	r16,r2,-1
   81704:	043ec50e 	bge	zero,r16,8121c <__alt_data_end+0xfffb572c>
   81708:	04400404 	movi	r17,16
   8170c:	d8801f17 	ldw	r2,124(sp)
   81710:	8c00880e 	bge	r17,r16,81934 <___vfprintf_internal_r+0x10ec>
   81714:	01400274 	movhi	r5,9
   81718:	297e4f84 	addi	r5,r5,-1730
   8171c:	d9402b15 	stw	r5,172(sp)
   81720:	058001c4 	movi	r22,7
   81724:	dcc02c17 	ldw	r19,176(sp)
   81728:	00000306 	br	81738 <___vfprintf_internal_r+0xef0>
   8172c:	42000204 	addi	r8,r8,8
   81730:	843ffc04 	addi	r16,r16,-16
   81734:	8c00820e 	bge	r17,r16,81940 <___vfprintf_internal_r+0x10f8>
   81738:	18c00404 	addi	r3,r3,16
   8173c:	10800044 	addi	r2,r2,1
   81740:	45000015 	stw	r20,0(r8)
   81744:	44400115 	stw	r17,4(r8)
   81748:	d8c02015 	stw	r3,128(sp)
   8174c:	d8801f15 	stw	r2,124(sp)
   81750:	b0bff60e 	bge	r22,r2,8172c <__alt_data_end+0xfffb5c3c>
   81754:	d9801e04 	addi	r6,sp,120
   81758:	b80b883a 	mov	r5,r23
   8175c:	9809883a 	mov	r4,r19
   81760:	0087e440 	call	87e44 <__sprint_r>
   81764:	103d3a1e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   81768:	d8c02017 	ldw	r3,128(sp)
   8176c:	d8801f17 	ldw	r2,124(sp)
   81770:	da000404 	addi	r8,sp,16
   81774:	003fee06 	br	81730 <__alt_data_end+0xfffb5c40>
   81778:	d9403117 	ldw	r5,196(sp)
   8177c:	d8802a17 	ldw	r2,168(sp)
   81780:	28adc83a 	sub	r22,r5,r2
   81784:	05be630e 	bge	zero,r22,81114 <__alt_data_end+0xfffb5624>
   81788:	07000404 	movi	fp,16
   8178c:	d8801f17 	ldw	r2,124(sp)
   81790:	e5838f0e 	bge	fp,r22,825d0 <___vfprintf_internal_r+0x1d88>
   81794:	01400274 	movhi	r5,9
   81798:	297e4f84 	addi	r5,r5,-1730
   8179c:	dc403015 	stw	r17,192(sp)
   817a0:	d9402b15 	stw	r5,172(sp)
   817a4:	b023883a 	mov	r17,r22
   817a8:	04c001c4 	movi	r19,7
   817ac:	a82d883a 	mov	r22,r21
   817b0:	902b883a 	mov	r21,r18
   817b4:	8025883a 	mov	r18,r16
   817b8:	dc002c17 	ldw	r16,176(sp)
   817bc:	00000306 	br	817cc <___vfprintf_internal_r+0xf84>
   817c0:	8c7ffc04 	addi	r17,r17,-16
   817c4:	42000204 	addi	r8,r8,8
   817c8:	e440110e 	bge	fp,r17,81810 <___vfprintf_internal_r+0xfc8>
   817cc:	18c00404 	addi	r3,r3,16
   817d0:	10800044 	addi	r2,r2,1
   817d4:	45000015 	stw	r20,0(r8)
   817d8:	47000115 	stw	fp,4(r8)
   817dc:	d8c02015 	stw	r3,128(sp)
   817e0:	d8801f15 	stw	r2,124(sp)
   817e4:	98bff60e 	bge	r19,r2,817c0 <__alt_data_end+0xfffb5cd0>
   817e8:	d9801e04 	addi	r6,sp,120
   817ec:	b80b883a 	mov	r5,r23
   817f0:	8009883a 	mov	r4,r16
   817f4:	0087e440 	call	87e44 <__sprint_r>
   817f8:	103d151e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   817fc:	8c7ffc04 	addi	r17,r17,-16
   81800:	d8c02017 	ldw	r3,128(sp)
   81804:	d8801f17 	ldw	r2,124(sp)
   81808:	da000404 	addi	r8,sp,16
   8180c:	e47fef16 	blt	fp,r17,817cc <__alt_data_end+0xfffb5cdc>
   81810:	9021883a 	mov	r16,r18
   81814:	a825883a 	mov	r18,r21
   81818:	b02b883a 	mov	r21,r22
   8181c:	882d883a 	mov	r22,r17
   81820:	dc403017 	ldw	r17,192(sp)
   81824:	d9002b17 	ldw	r4,172(sp)
   81828:	1d87883a 	add	r3,r3,r22
   8182c:	10800044 	addi	r2,r2,1
   81830:	41000015 	stw	r4,0(r8)
   81834:	45800115 	stw	r22,4(r8)
   81838:	d8c02015 	stw	r3,128(sp)
   8183c:	d8801f15 	stw	r2,124(sp)
   81840:	010001c4 	movi	r4,7
   81844:	20818e16 	blt	r4,r2,81e80 <___vfprintf_internal_r+0x1638>
   81848:	42000204 	addi	r8,r8,8
   8184c:	003e3106 	br	81114 <__alt_data_end+0xfffb5624>
   81850:	d9403317 	ldw	r5,204(sp)
   81854:	00800044 	movi	r2,1
   81858:	18c00044 	addi	r3,r3,1
   8185c:	1141530e 	bge	r2,r5,81dac <___vfprintf_internal_r+0x1564>
   81860:	dc401f17 	ldw	r17,124(sp)
   81864:	00800044 	movi	r2,1
   81868:	40800115 	stw	r2,4(r8)
   8186c:	8c400044 	addi	r17,r17,1
   81870:	44000015 	stw	r16,0(r8)
   81874:	d8c02015 	stw	r3,128(sp)
   81878:	dc401f15 	stw	r17,124(sp)
   8187c:	008001c4 	movi	r2,7
   81880:	14416b16 	blt	r2,r17,81e30 <___vfprintf_internal_r+0x15e8>
   81884:	42000204 	addi	r8,r8,8
   81888:	d8803717 	ldw	r2,220(sp)
   8188c:	d9003417 	ldw	r4,208(sp)
   81890:	8c400044 	addi	r17,r17,1
   81894:	10c7883a 	add	r3,r2,r3
   81898:	40800115 	stw	r2,4(r8)
   8189c:	41000015 	stw	r4,0(r8)
   818a0:	d8c02015 	stw	r3,128(sp)
   818a4:	dc401f15 	stw	r17,124(sp)
   818a8:	008001c4 	movi	r2,7
   818ac:	14416916 	blt	r2,r17,81e54 <___vfprintf_internal_r+0x160c>
   818b0:	45800204 	addi	r22,r8,8
   818b4:	d9003617 	ldw	r4,216(sp)
   818b8:	d9403817 	ldw	r5,224(sp)
   818bc:	000d883a 	mov	r6,zero
   818c0:	000f883a 	mov	r7,zero
   818c4:	d8c03c15 	stw	r3,240(sp)
   818c8:	008babc0 	call	8babc <__eqdf2>
   818cc:	d8c03c17 	ldw	r3,240(sp)
   818d0:	1000bc26 	beq	r2,zero,81bc4 <___vfprintf_internal_r+0x137c>
   818d4:	d9403317 	ldw	r5,204(sp)
   818d8:	84000044 	addi	r16,r16,1
   818dc:	8c400044 	addi	r17,r17,1
   818e0:	28bfffc4 	addi	r2,r5,-1
   818e4:	1887883a 	add	r3,r3,r2
   818e8:	b0800115 	stw	r2,4(r22)
   818ec:	b4000015 	stw	r16,0(r22)
   818f0:	d8c02015 	stw	r3,128(sp)
   818f4:	dc401f15 	stw	r17,124(sp)
   818f8:	008001c4 	movi	r2,7
   818fc:	14414316 	blt	r2,r17,81e0c <___vfprintf_internal_r+0x15c4>
   81900:	b5800204 	addi	r22,r22,8
   81904:	d9003a17 	ldw	r4,232(sp)
   81908:	df0022c4 	addi	fp,sp,139
   8190c:	8c400044 	addi	r17,r17,1
   81910:	20c7883a 	add	r3,r4,r3
   81914:	b7000015 	stw	fp,0(r22)
   81918:	b1000115 	stw	r4,4(r22)
   8191c:	d8c02015 	stw	r3,128(sp)
   81920:	dc401f15 	stw	r17,124(sp)
   81924:	008001c4 	movi	r2,7
   81928:	14400e16 	blt	r2,r17,81964 <___vfprintf_internal_r+0x111c>
   8192c:	b2000204 	addi	r8,r22,8
   81930:	003e3a06 	br	8121c <__alt_data_end+0xfffb572c>
   81934:	01000274 	movhi	r4,9
   81938:	213e4f84 	addi	r4,r4,-1730
   8193c:	d9002b15 	stw	r4,172(sp)
   81940:	d9002b17 	ldw	r4,172(sp)
   81944:	1c07883a 	add	r3,r3,r16
   81948:	44000115 	stw	r16,4(r8)
   8194c:	41000015 	stw	r4,0(r8)
   81950:	10800044 	addi	r2,r2,1
   81954:	d8c02015 	stw	r3,128(sp)
   81958:	d8801f15 	stw	r2,124(sp)
   8195c:	010001c4 	movi	r4,7
   81960:	20be2d0e 	bge	r4,r2,81218 <__alt_data_end+0xfffb5728>
   81964:	d9002c17 	ldw	r4,176(sp)
   81968:	d9801e04 	addi	r6,sp,120
   8196c:	b80b883a 	mov	r5,r23
   81970:	0087e440 	call	87e44 <__sprint_r>
   81974:	103cb61e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   81978:	d8c02017 	ldw	r3,128(sp)
   8197c:	da000404 	addi	r8,sp,16
   81980:	003e2606 	br	8121c <__alt_data_end+0xfffb572c>
   81984:	d9002c17 	ldw	r4,176(sp)
   81988:	d9801e04 	addi	r6,sp,120
   8198c:	b80b883a 	mov	r5,r23
   81990:	0087e440 	call	87e44 <__sprint_r>
   81994:	103e5d26 	beq	r2,zero,8130c <__alt_data_end+0xfffb581c>
   81998:	003cad06 	br	80c50 <__alt_data_end+0xfffb5160>
   8199c:	d9002c17 	ldw	r4,176(sp)
   819a0:	d9801e04 	addi	r6,sp,120
   819a4:	b80b883a 	mov	r5,r23
   819a8:	0087e440 	call	87e44 <__sprint_r>
   819ac:	103ca81e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   819b0:	d8c02017 	ldw	r3,128(sp)
   819b4:	da000404 	addi	r8,sp,16
   819b8:	003e0b06 	br	811e8 <__alt_data_end+0xfffb56f8>
   819bc:	d9002c17 	ldw	r4,176(sp)
   819c0:	d9801e04 	addi	r6,sp,120
   819c4:	b80b883a 	mov	r5,r23
   819c8:	0087e440 	call	87e44 <__sprint_r>
   819cc:	103ca01e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   819d0:	d8c02017 	ldw	r3,128(sp)
   819d4:	da000404 	addi	r8,sp,16
   819d8:	003dbd06 	br	810d0 <__alt_data_end+0xfffb55e0>
   819dc:	d9002c17 	ldw	r4,176(sp)
   819e0:	d9801e04 	addi	r6,sp,120
   819e4:	b80b883a 	mov	r5,r23
   819e8:	0087e440 	call	87e44 <__sprint_r>
   819ec:	103c981e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   819f0:	d8c02017 	ldw	r3,128(sp)
   819f4:	da000404 	addi	r8,sp,16
   819f8:	003dc306 	br	81108 <__alt_data_end+0xfffb5618>
   819fc:	d8802917 	ldw	r2,164(sp)
   81a00:	d8002785 	stb	zero,158(sp)
   81a04:	103f0616 	blt	r2,zero,81620 <__alt_data_end+0xfffb5b30>
   81a08:	00ffdfc4 	movi	r3,-129
   81a0c:	9d84b03a 	or	r2,r19,r22
   81a10:	90e4703a 	and	r18,r18,r3
   81a14:	103c6b26 	beq	r2,zero,80bc4 <__alt_data_end+0xfffb50d4>
   81a18:	0039883a 	mov	fp,zero
   81a1c:	003e7406 	br	813f0 <__alt_data_end+0xfffb5900>
   81a20:	9080040c 	andi	r2,r18,16
   81a24:	1001b326 	beq	r2,zero,820f4 <___vfprintf_internal_r+0x18ac>
   81a28:	d9002d17 	ldw	r4,180(sp)
   81a2c:	d9402917 	ldw	r5,164(sp)
   81a30:	d8002785 	stb	zero,158(sp)
   81a34:	20800104 	addi	r2,r4,4
   81a38:	24c00017 	ldw	r19,0(r4)
   81a3c:	002d883a 	mov	r22,zero
   81a40:	2801b516 	blt	r5,zero,82118 <___vfprintf_internal_r+0x18d0>
   81a44:	00ffdfc4 	movi	r3,-129
   81a48:	d8802d15 	stw	r2,180(sp)
   81a4c:	90e4703a 	and	r18,r18,r3
   81a50:	983d2726 	beq	r19,zero,80ef0 <__alt_data_end+0xfffb5400>
   81a54:	0039883a 	mov	fp,zero
   81a58:	003d2a06 	br	80f04 <__alt_data_end+0xfffb5414>
   81a5c:	dc402617 	ldw	r17,152(sp)
   81a60:	0441d30e 	bge	zero,r17,821b0 <___vfprintf_internal_r+0x1968>
   81a64:	dc403217 	ldw	r17,200(sp)
   81a68:	d8803317 	ldw	r2,204(sp)
   81a6c:	1440010e 	bge	r2,r17,81a74 <___vfprintf_internal_r+0x122c>
   81a70:	1023883a 	mov	r17,r2
   81a74:	04400a0e 	bge	zero,r17,81aa0 <___vfprintf_internal_r+0x1258>
   81a78:	d8801f17 	ldw	r2,124(sp)
   81a7c:	1c47883a 	add	r3,r3,r17
   81a80:	44000015 	stw	r16,0(r8)
   81a84:	10800044 	addi	r2,r2,1
   81a88:	44400115 	stw	r17,4(r8)
   81a8c:	d8c02015 	stw	r3,128(sp)
   81a90:	d8801f15 	stw	r2,124(sp)
   81a94:	010001c4 	movi	r4,7
   81a98:	20826516 	blt	r4,r2,82430 <___vfprintf_internal_r+0x1be8>
   81a9c:	42000204 	addi	r8,r8,8
   81aa0:	88026116 	blt	r17,zero,82428 <___vfprintf_internal_r+0x1be0>
   81aa4:	d9003217 	ldw	r4,200(sp)
   81aa8:	2463c83a 	sub	r17,r4,r17
   81aac:	04407b0e 	bge	zero,r17,81c9c <___vfprintf_internal_r+0x1454>
   81ab0:	05800404 	movi	r22,16
   81ab4:	d8801f17 	ldw	r2,124(sp)
   81ab8:	b4419d0e 	bge	r22,r17,82130 <___vfprintf_internal_r+0x18e8>
   81abc:	01000274 	movhi	r4,9
   81ac0:	213e4f84 	addi	r4,r4,-1730
   81ac4:	d9002b15 	stw	r4,172(sp)
   81ac8:	070001c4 	movi	fp,7
   81acc:	dcc02c17 	ldw	r19,176(sp)
   81ad0:	00000306 	br	81ae0 <___vfprintf_internal_r+0x1298>
   81ad4:	42000204 	addi	r8,r8,8
   81ad8:	8c7ffc04 	addi	r17,r17,-16
   81adc:	b441970e 	bge	r22,r17,8213c <___vfprintf_internal_r+0x18f4>
   81ae0:	18c00404 	addi	r3,r3,16
   81ae4:	10800044 	addi	r2,r2,1
   81ae8:	45000015 	stw	r20,0(r8)
   81aec:	45800115 	stw	r22,4(r8)
   81af0:	d8c02015 	stw	r3,128(sp)
   81af4:	d8801f15 	stw	r2,124(sp)
   81af8:	e0bff60e 	bge	fp,r2,81ad4 <__alt_data_end+0xfffb5fe4>
   81afc:	d9801e04 	addi	r6,sp,120
   81b00:	b80b883a 	mov	r5,r23
   81b04:	9809883a 	mov	r4,r19
   81b08:	0087e440 	call	87e44 <__sprint_r>
   81b0c:	103c501e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   81b10:	d8c02017 	ldw	r3,128(sp)
   81b14:	d8801f17 	ldw	r2,124(sp)
   81b18:	da000404 	addi	r8,sp,16
   81b1c:	003fee06 	br	81ad8 <__alt_data_end+0xfffb5fe8>
   81b20:	d9002c17 	ldw	r4,176(sp)
   81b24:	d9801e04 	addi	r6,sp,120
   81b28:	b80b883a 	mov	r5,r23
   81b2c:	0087e440 	call	87e44 <__sprint_r>
   81b30:	103c471e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   81b34:	d8c02017 	ldw	r3,128(sp)
   81b38:	df002787 	ldb	fp,158(sp)
   81b3c:	da000404 	addi	r8,sp,16
   81b40:	003d5606 	br	8109c <__alt_data_end+0xfffb55ac>
   81b44:	9080040c 	andi	r2,r18,16
   81b48:	10016126 	beq	r2,zero,820d0 <___vfprintf_internal_r+0x1888>
   81b4c:	d8802d17 	ldw	r2,180(sp)
   81b50:	14c00017 	ldw	r19,0(r2)
   81b54:	10800104 	addi	r2,r2,4
   81b58:	d8802d15 	stw	r2,180(sp)
   81b5c:	982dd7fa 	srai	r22,r19,31
   81b60:	b005883a 	mov	r2,r22
   81b64:	003c8206 	br	80d70 <__alt_data_end+0xfffb5280>
   81b68:	9080040c 	andi	r2,r18,16
   81b6c:	10003526 	beq	r2,zero,81c44 <___vfprintf_internal_r+0x13fc>
   81b70:	d9402d17 	ldw	r5,180(sp)
   81b74:	d8c02917 	ldw	r3,164(sp)
   81b78:	d8002785 	stb	zero,158(sp)
   81b7c:	28800104 	addi	r2,r5,4
   81b80:	2cc00017 	ldw	r19,0(r5)
   81b84:	002d883a 	mov	r22,zero
   81b88:	18003716 	blt	r3,zero,81c68 <___vfprintf_internal_r+0x1420>
   81b8c:	00ffdfc4 	movi	r3,-129
   81b90:	d8802d15 	stw	r2,180(sp)
   81b94:	90e4703a 	and	r18,r18,r3
   81b98:	0039883a 	mov	fp,zero
   81b9c:	983df326 	beq	r19,zero,8136c <__alt_data_end+0xfffb587c>
   81ba0:	00800244 	movi	r2,9
   81ba4:	14fc7b36 	bltu	r2,r19,80d94 <__alt_data_end+0xfffb52a4>
   81ba8:	d8c02817 	ldw	r3,160(sp)
   81bac:	dc001dc4 	addi	r16,sp,119
   81bb0:	9cc00c04 	addi	r19,r19,48
   81bb4:	1c07c83a 	sub	r3,r3,r16
   81bb8:	dcc01dc5 	stb	r19,119(sp)
   81bbc:	d8c02e15 	stw	r3,184(sp)
   81bc0:	003ce806 	br	80f64 <__alt_data_end+0xfffb5474>
   81bc4:	d8803317 	ldw	r2,204(sp)
   81bc8:	143fffc4 	addi	r16,r2,-1
   81bcc:	043f4d0e 	bge	zero,r16,81904 <__alt_data_end+0xfffb5e14>
   81bd0:	07000404 	movi	fp,16
   81bd4:	e400810e 	bge	fp,r16,81ddc <___vfprintf_internal_r+0x1594>
   81bd8:	01400274 	movhi	r5,9
   81bdc:	297e4f84 	addi	r5,r5,-1730
   81be0:	d9402b15 	stw	r5,172(sp)
   81be4:	01c001c4 	movi	r7,7
   81be8:	dcc02c17 	ldw	r19,176(sp)
   81bec:	00000306 	br	81bfc <___vfprintf_internal_r+0x13b4>
   81bf0:	b5800204 	addi	r22,r22,8
   81bf4:	843ffc04 	addi	r16,r16,-16
   81bf8:	e4007b0e 	bge	fp,r16,81de8 <___vfprintf_internal_r+0x15a0>
   81bfc:	18c00404 	addi	r3,r3,16
   81c00:	8c400044 	addi	r17,r17,1
   81c04:	b5000015 	stw	r20,0(r22)
   81c08:	b7000115 	stw	fp,4(r22)
   81c0c:	d8c02015 	stw	r3,128(sp)
   81c10:	dc401f15 	stw	r17,124(sp)
   81c14:	3c7ff60e 	bge	r7,r17,81bf0 <__alt_data_end+0xfffb6100>
   81c18:	d9801e04 	addi	r6,sp,120
   81c1c:	b80b883a 	mov	r5,r23
   81c20:	9809883a 	mov	r4,r19
   81c24:	d9c03c15 	stw	r7,240(sp)
   81c28:	0087e440 	call	87e44 <__sprint_r>
   81c2c:	d9c03c17 	ldw	r7,240(sp)
   81c30:	103c071e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   81c34:	d8c02017 	ldw	r3,128(sp)
   81c38:	dc401f17 	ldw	r17,124(sp)
   81c3c:	dd800404 	addi	r22,sp,16
   81c40:	003fec06 	br	81bf4 <__alt_data_end+0xfffb6104>
   81c44:	9080100c 	andi	r2,r18,64
   81c48:	d8002785 	stb	zero,158(sp)
   81c4c:	10010e26 	beq	r2,zero,82088 <___vfprintf_internal_r+0x1840>
   81c50:	d9002d17 	ldw	r4,180(sp)
   81c54:	d9402917 	ldw	r5,164(sp)
   81c58:	002d883a 	mov	r22,zero
   81c5c:	20800104 	addi	r2,r4,4
   81c60:	24c0000b 	ldhu	r19,0(r4)
   81c64:	283fc90e 	bge	r5,zero,81b8c <__alt_data_end+0xfffb609c>
   81c68:	d8802d15 	stw	r2,180(sp)
   81c6c:	0039883a 	mov	fp,zero
   81c70:	9d84b03a 	or	r2,r19,r22
   81c74:	103c461e 	bne	r2,zero,80d90 <__alt_data_end+0xfffb52a0>
   81c78:	00800044 	movi	r2,1
   81c7c:	003e6c06 	br	81630 <__alt_data_end+0xfffb5b40>
   81c80:	d9002c17 	ldw	r4,176(sp)
   81c84:	d9801e04 	addi	r6,sp,120
   81c88:	b80b883a 	mov	r5,r23
   81c8c:	0087e440 	call	87e44 <__sprint_r>
   81c90:	103bef1e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   81c94:	d8c02017 	ldw	r3,128(sp)
   81c98:	da000404 	addi	r8,sp,16
   81c9c:	d9003217 	ldw	r4,200(sp)
   81ca0:	d8802617 	ldw	r2,152(sp)
   81ca4:	d9403317 	ldw	r5,204(sp)
   81ca8:	8123883a 	add	r17,r16,r4
   81cac:	11400216 	blt	r2,r5,81cb8 <___vfprintf_internal_r+0x1470>
   81cb0:	9100004c 	andi	r4,r18,1
   81cb4:	20000d26 	beq	r4,zero,81cec <___vfprintf_internal_r+0x14a4>
   81cb8:	d9003717 	ldw	r4,220(sp)
   81cbc:	d9403417 	ldw	r5,208(sp)
   81cc0:	1907883a 	add	r3,r3,r4
   81cc4:	d9001f17 	ldw	r4,124(sp)
   81cc8:	41400015 	stw	r5,0(r8)
   81ccc:	d9403717 	ldw	r5,220(sp)
   81cd0:	21000044 	addi	r4,r4,1
   81cd4:	d8c02015 	stw	r3,128(sp)
   81cd8:	41400115 	stw	r5,4(r8)
   81cdc:	d9001f15 	stw	r4,124(sp)
   81ce0:	014001c4 	movi	r5,7
   81ce4:	2901e816 	blt	r5,r4,82488 <___vfprintf_internal_r+0x1c40>
   81ce8:	42000204 	addi	r8,r8,8
   81cec:	d9003317 	ldw	r4,204(sp)
   81cf0:	8121883a 	add	r16,r16,r4
   81cf4:	2085c83a 	sub	r2,r4,r2
   81cf8:	8461c83a 	sub	r16,r16,r17
   81cfc:	1400010e 	bge	r2,r16,81d04 <___vfprintf_internal_r+0x14bc>
   81d00:	1021883a 	mov	r16,r2
   81d04:	04000a0e 	bge	zero,r16,81d30 <___vfprintf_internal_r+0x14e8>
   81d08:	d9001f17 	ldw	r4,124(sp)
   81d0c:	1c07883a 	add	r3,r3,r16
   81d10:	44400015 	stw	r17,0(r8)
   81d14:	21000044 	addi	r4,r4,1
   81d18:	44000115 	stw	r16,4(r8)
   81d1c:	d8c02015 	stw	r3,128(sp)
   81d20:	d9001f15 	stw	r4,124(sp)
   81d24:	014001c4 	movi	r5,7
   81d28:	2901fb16 	blt	r5,r4,82518 <___vfprintf_internal_r+0x1cd0>
   81d2c:	42000204 	addi	r8,r8,8
   81d30:	8001f716 	blt	r16,zero,82510 <___vfprintf_internal_r+0x1cc8>
   81d34:	1421c83a 	sub	r16,r2,r16
   81d38:	043d380e 	bge	zero,r16,8121c <__alt_data_end+0xfffb572c>
   81d3c:	04400404 	movi	r17,16
   81d40:	d8801f17 	ldw	r2,124(sp)
   81d44:	8c3efb0e 	bge	r17,r16,81934 <__alt_data_end+0xfffb5e44>
   81d48:	01400274 	movhi	r5,9
   81d4c:	297e4f84 	addi	r5,r5,-1730
   81d50:	d9402b15 	stw	r5,172(sp)
   81d54:	058001c4 	movi	r22,7
   81d58:	dcc02c17 	ldw	r19,176(sp)
   81d5c:	00000306 	br	81d6c <___vfprintf_internal_r+0x1524>
   81d60:	42000204 	addi	r8,r8,8
   81d64:	843ffc04 	addi	r16,r16,-16
   81d68:	8c3ef50e 	bge	r17,r16,81940 <__alt_data_end+0xfffb5e50>
   81d6c:	18c00404 	addi	r3,r3,16
   81d70:	10800044 	addi	r2,r2,1
   81d74:	45000015 	stw	r20,0(r8)
   81d78:	44400115 	stw	r17,4(r8)
   81d7c:	d8c02015 	stw	r3,128(sp)
   81d80:	d8801f15 	stw	r2,124(sp)
   81d84:	b0bff60e 	bge	r22,r2,81d60 <__alt_data_end+0xfffb6270>
   81d88:	d9801e04 	addi	r6,sp,120
   81d8c:	b80b883a 	mov	r5,r23
   81d90:	9809883a 	mov	r4,r19
   81d94:	0087e440 	call	87e44 <__sprint_r>
   81d98:	103bad1e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   81d9c:	d8c02017 	ldw	r3,128(sp)
   81da0:	d8801f17 	ldw	r2,124(sp)
   81da4:	da000404 	addi	r8,sp,16
   81da8:	003fee06 	br	81d64 <__alt_data_end+0xfffb6274>
   81dac:	9088703a 	and	r4,r18,r2
   81db0:	203eab1e 	bne	r4,zero,81860 <__alt_data_end+0xfffb5d70>
   81db4:	dc401f17 	ldw	r17,124(sp)
   81db8:	40800115 	stw	r2,4(r8)
   81dbc:	44000015 	stw	r16,0(r8)
   81dc0:	8c400044 	addi	r17,r17,1
   81dc4:	d8c02015 	stw	r3,128(sp)
   81dc8:	dc401f15 	stw	r17,124(sp)
   81dcc:	008001c4 	movi	r2,7
   81dd0:	14400e16 	blt	r2,r17,81e0c <___vfprintf_internal_r+0x15c4>
   81dd4:	45800204 	addi	r22,r8,8
   81dd8:	003eca06 	br	81904 <__alt_data_end+0xfffb5e14>
   81ddc:	01000274 	movhi	r4,9
   81de0:	213e4f84 	addi	r4,r4,-1730
   81de4:	d9002b15 	stw	r4,172(sp)
   81de8:	d8802b17 	ldw	r2,172(sp)
   81dec:	1c07883a 	add	r3,r3,r16
   81df0:	8c400044 	addi	r17,r17,1
   81df4:	b0800015 	stw	r2,0(r22)
   81df8:	b4000115 	stw	r16,4(r22)
   81dfc:	d8c02015 	stw	r3,128(sp)
   81e00:	dc401f15 	stw	r17,124(sp)
   81e04:	008001c4 	movi	r2,7
   81e08:	147ebd0e 	bge	r2,r17,81900 <__alt_data_end+0xfffb5e10>
   81e0c:	d9002c17 	ldw	r4,176(sp)
   81e10:	d9801e04 	addi	r6,sp,120
   81e14:	b80b883a 	mov	r5,r23
   81e18:	0087e440 	call	87e44 <__sprint_r>
   81e1c:	103b8c1e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   81e20:	d8c02017 	ldw	r3,128(sp)
   81e24:	dc401f17 	ldw	r17,124(sp)
   81e28:	dd800404 	addi	r22,sp,16
   81e2c:	003eb506 	br	81904 <__alt_data_end+0xfffb5e14>
   81e30:	d9002c17 	ldw	r4,176(sp)
   81e34:	d9801e04 	addi	r6,sp,120
   81e38:	b80b883a 	mov	r5,r23
   81e3c:	0087e440 	call	87e44 <__sprint_r>
   81e40:	103b831e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   81e44:	d8c02017 	ldw	r3,128(sp)
   81e48:	dc401f17 	ldw	r17,124(sp)
   81e4c:	da000404 	addi	r8,sp,16
   81e50:	003e8d06 	br	81888 <__alt_data_end+0xfffb5d98>
   81e54:	d9002c17 	ldw	r4,176(sp)
   81e58:	d9801e04 	addi	r6,sp,120
   81e5c:	b80b883a 	mov	r5,r23
   81e60:	0087e440 	call	87e44 <__sprint_r>
   81e64:	103b7a1e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   81e68:	d8c02017 	ldw	r3,128(sp)
   81e6c:	dc401f17 	ldw	r17,124(sp)
   81e70:	dd800404 	addi	r22,sp,16
   81e74:	003e8f06 	br	818b4 <__alt_data_end+0xfffb5dc4>
   81e78:	0027883a 	mov	r19,zero
   81e7c:	003f4a06 	br	81ba8 <__alt_data_end+0xfffb60b8>
   81e80:	d9002c17 	ldw	r4,176(sp)
   81e84:	d9801e04 	addi	r6,sp,120
   81e88:	b80b883a 	mov	r5,r23
   81e8c:	0087e440 	call	87e44 <__sprint_r>
   81e90:	103b6f1e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   81e94:	d8c02017 	ldw	r3,128(sp)
   81e98:	da000404 	addi	r8,sp,16
   81e9c:	003c9d06 	br	81114 <__alt_data_end+0xfffb5624>
   81ea0:	04e7c83a 	sub	r19,zero,r19
   81ea4:	9804c03a 	cmpne	r2,r19,zero
   81ea8:	05adc83a 	sub	r22,zero,r22
   81eac:	b0adc83a 	sub	r22,r22,r2
   81eb0:	d8802917 	ldw	r2,164(sp)
   81eb4:	07000b44 	movi	fp,45
   81eb8:	df002785 	stb	fp,158(sp)
   81ebc:	10017b16 	blt	r2,zero,824ac <___vfprintf_internal_r+0x1c64>
   81ec0:	00bfdfc4 	movi	r2,-129
   81ec4:	90a4703a 	and	r18,r18,r2
   81ec8:	003bb106 	br	80d90 <__alt_data_end+0xfffb52a0>
   81ecc:	d9003617 	ldw	r4,216(sp)
   81ed0:	d9403817 	ldw	r5,224(sp)
   81ed4:	da003d15 	stw	r8,244(sp)
   81ed8:	0087a680 	call	87a68 <__fpclassifyd>
   81edc:	da003d17 	ldw	r8,244(sp)
   81ee0:	1000f026 	beq	r2,zero,822a4 <___vfprintf_internal_r+0x1a5c>
   81ee4:	d9002917 	ldw	r4,164(sp)
   81ee8:	05bff7c4 	movi	r22,-33
   81eec:	00bfffc4 	movi	r2,-1
   81ef0:	8dac703a 	and	r22,r17,r22
   81ef4:	20820026 	beq	r4,r2,826f8 <___vfprintf_internal_r+0x1eb0>
   81ef8:	008011c4 	movi	r2,71
   81efc:	b081f726 	beq	r22,r2,826dc <___vfprintf_internal_r+0x1e94>
   81f00:	d9003817 	ldw	r4,224(sp)
   81f04:	90c04014 	ori	r3,r18,256
   81f08:	d8c02b15 	stw	r3,172(sp)
   81f0c:	20021516 	blt	r4,zero,82764 <___vfprintf_internal_r+0x1f1c>
   81f10:	dcc03817 	ldw	r19,224(sp)
   81f14:	d8002a05 	stb	zero,168(sp)
   81f18:	00801984 	movi	r2,102
   81f1c:	8881f926 	beq	r17,r2,82704 <___vfprintf_internal_r+0x1ebc>
   81f20:	00801184 	movi	r2,70
   81f24:	88821c26 	beq	r17,r2,82798 <___vfprintf_internal_r+0x1f50>
   81f28:	00801144 	movi	r2,69
   81f2c:	b081ef26 	beq	r22,r2,826ec <___vfprintf_internal_r+0x1ea4>
   81f30:	d8c02917 	ldw	r3,164(sp)
   81f34:	d8802104 	addi	r2,sp,132
   81f38:	d8800315 	stw	r2,12(sp)
   81f3c:	d9403617 	ldw	r5,216(sp)
   81f40:	d8802504 	addi	r2,sp,148
   81f44:	d9002c17 	ldw	r4,176(sp)
   81f48:	d8800215 	stw	r2,8(sp)
   81f4c:	d8802604 	addi	r2,sp,152
   81f50:	d8c00015 	stw	r3,0(sp)
   81f54:	d8800115 	stw	r2,4(sp)
   81f58:	01c00084 	movi	r7,2
   81f5c:	980d883a 	mov	r6,r19
   81f60:	d8c03c15 	stw	r3,240(sp)
   81f64:	da003d15 	stw	r8,244(sp)
   81f68:	0082e6c0 	call	82e6c <_dtoa_r>
   81f6c:	1021883a 	mov	r16,r2
   81f70:	008019c4 	movi	r2,103
   81f74:	d8c03c17 	ldw	r3,240(sp)
   81f78:	da003d17 	ldw	r8,244(sp)
   81f7c:	88817126 	beq	r17,r2,82544 <___vfprintf_internal_r+0x1cfc>
   81f80:	008011c4 	movi	r2,71
   81f84:	88829226 	beq	r17,r2,829d0 <___vfprintf_internal_r+0x2188>
   81f88:	80f9883a 	add	fp,r16,r3
   81f8c:	d9003617 	ldw	r4,216(sp)
   81f90:	000d883a 	mov	r6,zero
   81f94:	000f883a 	mov	r7,zero
   81f98:	980b883a 	mov	r5,r19
   81f9c:	da003d15 	stw	r8,244(sp)
   81fa0:	008babc0 	call	8babc <__eqdf2>
   81fa4:	da003d17 	ldw	r8,244(sp)
   81fa8:	10018d26 	beq	r2,zero,825e0 <___vfprintf_internal_r+0x1d98>
   81fac:	d8802117 	ldw	r2,132(sp)
   81fb0:	1700062e 	bgeu	r2,fp,81fcc <___vfprintf_internal_r+0x1784>
   81fb4:	01000c04 	movi	r4,48
   81fb8:	10c00044 	addi	r3,r2,1
   81fbc:	d8c02115 	stw	r3,132(sp)
   81fc0:	11000005 	stb	r4,0(r2)
   81fc4:	d8802117 	ldw	r2,132(sp)
   81fc8:	173ffb36 	bltu	r2,fp,81fb8 <__alt_data_end+0xfffb64c8>
   81fcc:	1405c83a 	sub	r2,r2,r16
   81fd0:	d8803315 	stw	r2,204(sp)
   81fd4:	008011c4 	movi	r2,71
   81fd8:	b0817626 	beq	r22,r2,825b4 <___vfprintf_internal_r+0x1d6c>
   81fdc:	00801944 	movi	r2,101
   81fe0:	1442810e 	bge	r2,r17,829e8 <___vfprintf_internal_r+0x21a0>
   81fe4:	d8c02617 	ldw	r3,152(sp)
   81fe8:	00801984 	movi	r2,102
   81fec:	d8c03215 	stw	r3,200(sp)
   81ff0:	8881fe26 	beq	r17,r2,827ec <___vfprintf_internal_r+0x1fa4>
   81ff4:	d8c03217 	ldw	r3,200(sp)
   81ff8:	d9003317 	ldw	r4,204(sp)
   81ffc:	1901dd16 	blt	r3,r4,82774 <___vfprintf_internal_r+0x1f2c>
   82000:	9480004c 	andi	r18,r18,1
   82004:	90022b1e 	bne	r18,zero,828b4 <___vfprintf_internal_r+0x206c>
   82008:	1805883a 	mov	r2,r3
   8200c:	18028016 	blt	r3,zero,82a10 <___vfprintf_internal_r+0x21c8>
   82010:	d8c03217 	ldw	r3,200(sp)
   82014:	044019c4 	movi	r17,103
   82018:	d8c02e15 	stw	r3,184(sp)
   8201c:	df002a07 	ldb	fp,168(sp)
   82020:	e001531e 	bne	fp,zero,82570 <___vfprintf_internal_r+0x1d28>
   82024:	df002783 	ldbu	fp,158(sp)
   82028:	d8802a15 	stw	r2,168(sp)
   8202c:	dc802b17 	ldw	r18,172(sp)
   82030:	d8002915 	stw	zero,164(sp)
   82034:	003bd106 	br	80f7c <__alt_data_end+0xfffb548c>
   82038:	d8802d17 	ldw	r2,180(sp)
   8203c:	d8c02d17 	ldw	r3,180(sp)
   82040:	d9002d17 	ldw	r4,180(sp)
   82044:	10800017 	ldw	r2,0(r2)
   82048:	18c00117 	ldw	r3,4(r3)
   8204c:	21000204 	addi	r4,r4,8
   82050:	d8803615 	stw	r2,216(sp)
   82054:	d8c03815 	stw	r3,224(sp)
   82058:	d9002d15 	stw	r4,180(sp)
   8205c:	003b7506 	br	80e34 <__alt_data_end+0xfffb5344>
   82060:	ac400007 	ldb	r17,0(r21)
   82064:	003a5906 	br	809cc <__alt_data_end+0xfffb4edc>
   82068:	9080100c 	andi	r2,r18,64
   8206c:	1000a826 	beq	r2,zero,82310 <___vfprintf_internal_r+0x1ac8>
   82070:	d9002d17 	ldw	r4,180(sp)
   82074:	002d883a 	mov	r22,zero
   82078:	24c0000b 	ldhu	r19,0(r4)
   8207c:	21000104 	addi	r4,r4,4
   82080:	d9002d15 	stw	r4,180(sp)
   82084:	003ccb06 	br	813b4 <__alt_data_end+0xfffb58c4>
   82088:	d8c02d17 	ldw	r3,180(sp)
   8208c:	d9002917 	ldw	r4,164(sp)
   82090:	002d883a 	mov	r22,zero
   82094:	18800104 	addi	r2,r3,4
   82098:	1cc00017 	ldw	r19,0(r3)
   8209c:	203ebb0e 	bge	r4,zero,81b8c <__alt_data_end+0xfffb609c>
   820a0:	003ef106 	br	81c68 <__alt_data_end+0xfffb6178>
   820a4:	9080040c 	andi	r2,r18,16
   820a8:	1000921e 	bne	r2,zero,822f4 <___vfprintf_internal_r+0x1aac>
   820ac:	9480100c 	andi	r18,r18,64
   820b0:	90013926 	beq	r18,zero,82598 <___vfprintf_internal_r+0x1d50>
   820b4:	d9002d17 	ldw	r4,180(sp)
   820b8:	d9402f17 	ldw	r5,188(sp)
   820bc:	20800017 	ldw	r2,0(r4)
   820c0:	21000104 	addi	r4,r4,4
   820c4:	d9002d15 	stw	r4,180(sp)
   820c8:	1140000d 	sth	r5,0(r2)
   820cc:	003a1606 	br	80928 <__alt_data_end+0xfffb4e38>
   820d0:	9080100c 	andi	r2,r18,64
   820d4:	10008026 	beq	r2,zero,822d8 <___vfprintf_internal_r+0x1a90>
   820d8:	d8c02d17 	ldw	r3,180(sp)
   820dc:	1cc0000f 	ldh	r19,0(r3)
   820e0:	18c00104 	addi	r3,r3,4
   820e4:	d8c02d15 	stw	r3,180(sp)
   820e8:	982dd7fa 	srai	r22,r19,31
   820ec:	b005883a 	mov	r2,r22
   820f0:	003b1f06 	br	80d70 <__alt_data_end+0xfffb5280>
   820f4:	9080100c 	andi	r2,r18,64
   820f8:	d8002785 	stb	zero,158(sp)
   820fc:	10008a1e 	bne	r2,zero,82328 <___vfprintf_internal_r+0x1ae0>
   82100:	d9402d17 	ldw	r5,180(sp)
   82104:	d8c02917 	ldw	r3,164(sp)
   82108:	002d883a 	mov	r22,zero
   8210c:	28800104 	addi	r2,r5,4
   82110:	2cc00017 	ldw	r19,0(r5)
   82114:	183e4b0e 	bge	r3,zero,81a44 <__alt_data_end+0xfffb5f54>
   82118:	9d86b03a 	or	r3,r19,r22
   8211c:	d8802d15 	stw	r2,180(sp)
   82120:	183e4c1e 	bne	r3,zero,81a54 <__alt_data_end+0xfffb5f64>
   82124:	0039883a 	mov	fp,zero
   82128:	0005883a 	mov	r2,zero
   8212c:	003d4006 	br	81630 <__alt_data_end+0xfffb5b40>
   82130:	01400274 	movhi	r5,9
   82134:	297e4f84 	addi	r5,r5,-1730
   82138:	d9402b15 	stw	r5,172(sp)
   8213c:	d9402b17 	ldw	r5,172(sp)
   82140:	1c47883a 	add	r3,r3,r17
   82144:	10800044 	addi	r2,r2,1
   82148:	41400015 	stw	r5,0(r8)
   8214c:	44400115 	stw	r17,4(r8)
   82150:	d8c02015 	stw	r3,128(sp)
   82154:	d8801f15 	stw	r2,124(sp)
   82158:	010001c4 	movi	r4,7
   8215c:	20bec816 	blt	r4,r2,81c80 <__alt_data_end+0xfffb6190>
   82160:	42000204 	addi	r8,r8,8
   82164:	003ecd06 	br	81c9c <__alt_data_end+0xfffb61ac>
   82168:	d9002917 	ldw	r4,164(sp)
   8216c:	d8002785 	stb	zero,158(sp)
   82170:	203d2d16 	blt	r4,zero,81628 <__alt_data_end+0xfffb5b38>
   82174:	00bfdfc4 	movi	r2,-129
   82178:	90a4703a 	and	r18,r18,r2
   8217c:	003a9106 	br	80bc4 <__alt_data_end+0xfffb50d4>
   82180:	01000274 	movhi	r4,9
   82184:	213e4f84 	addi	r4,r4,-1730
   82188:	d9002b15 	stw	r4,172(sp)
   8218c:	003c0c06 	br	811c0 <__alt_data_end+0xfffb56d0>
   82190:	d9002c17 	ldw	r4,176(sp)
   82194:	d9801e04 	addi	r6,sp,120
   82198:	b80b883a 	mov	r5,r23
   8219c:	0087e440 	call	87e44 <__sprint_r>
   821a0:	103aab1e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   821a4:	d8c02017 	ldw	r3,128(sp)
   821a8:	da000404 	addi	r8,sp,16
   821ac:	003d4106 	br	816b4 <__alt_data_end+0xfffb5bc4>
   821b0:	d8801f17 	ldw	r2,124(sp)
   821b4:	01400274 	movhi	r5,9
   821b8:	01000044 	movi	r4,1
   821bc:	18c00044 	addi	r3,r3,1
   821c0:	10800044 	addi	r2,r2,1
   821c4:	297e4f04 	addi	r5,r5,-1732
   821c8:	41000115 	stw	r4,4(r8)
   821cc:	41400015 	stw	r5,0(r8)
   821d0:	d8c02015 	stw	r3,128(sp)
   821d4:	d8801f15 	stw	r2,124(sp)
   821d8:	010001c4 	movi	r4,7
   821dc:	20805c16 	blt	r4,r2,82350 <___vfprintf_internal_r+0x1b08>
   821e0:	42000204 	addi	r8,r8,8
   821e4:	8800041e 	bne	r17,zero,821f8 <___vfprintf_internal_r+0x19b0>
   821e8:	d8803317 	ldw	r2,204(sp)
   821ec:	1000021e 	bne	r2,zero,821f8 <___vfprintf_internal_r+0x19b0>
   821f0:	9080004c 	andi	r2,r18,1
   821f4:	103c0926 	beq	r2,zero,8121c <__alt_data_end+0xfffb572c>
   821f8:	d9003717 	ldw	r4,220(sp)
   821fc:	d8801f17 	ldw	r2,124(sp)
   82200:	d9403417 	ldw	r5,208(sp)
   82204:	20c7883a 	add	r3,r4,r3
   82208:	10800044 	addi	r2,r2,1
   8220c:	41000115 	stw	r4,4(r8)
   82210:	41400015 	stw	r5,0(r8)
   82214:	d8c02015 	stw	r3,128(sp)
   82218:	d8801f15 	stw	r2,124(sp)
   8221c:	010001c4 	movi	r4,7
   82220:	20812116 	blt	r4,r2,826a8 <___vfprintf_internal_r+0x1e60>
   82224:	42000204 	addi	r8,r8,8
   82228:	0463c83a 	sub	r17,zero,r17
   8222c:	0440730e 	bge	zero,r17,823fc <___vfprintf_internal_r+0x1bb4>
   82230:	05800404 	movi	r22,16
   82234:	b440860e 	bge	r22,r17,82450 <___vfprintf_internal_r+0x1c08>
   82238:	01400274 	movhi	r5,9
   8223c:	297e4f84 	addi	r5,r5,-1730
   82240:	d9402b15 	stw	r5,172(sp)
   82244:	070001c4 	movi	fp,7
   82248:	dcc02c17 	ldw	r19,176(sp)
   8224c:	00000306 	br	8225c <___vfprintf_internal_r+0x1a14>
   82250:	42000204 	addi	r8,r8,8
   82254:	8c7ffc04 	addi	r17,r17,-16
   82258:	b440800e 	bge	r22,r17,8245c <___vfprintf_internal_r+0x1c14>
   8225c:	18c00404 	addi	r3,r3,16
   82260:	10800044 	addi	r2,r2,1
   82264:	45000015 	stw	r20,0(r8)
   82268:	45800115 	stw	r22,4(r8)
   8226c:	d8c02015 	stw	r3,128(sp)
   82270:	d8801f15 	stw	r2,124(sp)
   82274:	e0bff60e 	bge	fp,r2,82250 <__alt_data_end+0xfffb6760>
   82278:	d9801e04 	addi	r6,sp,120
   8227c:	b80b883a 	mov	r5,r23
   82280:	9809883a 	mov	r4,r19
   82284:	0087e440 	call	87e44 <__sprint_r>
   82288:	103a711e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   8228c:	d8c02017 	ldw	r3,128(sp)
   82290:	d8801f17 	ldw	r2,124(sp)
   82294:	da000404 	addi	r8,sp,16
   82298:	003fee06 	br	82254 <__alt_data_end+0xfffb6764>
   8229c:	00bfffc4 	movi	r2,-1
   822a0:	003a6f06 	br	80c60 <__alt_data_end+0xfffb5170>
   822a4:	008011c4 	movi	r2,71
   822a8:	1440b816 	blt	r2,r17,8258c <___vfprintf_internal_r+0x1d44>
   822ac:	04000274 	movhi	r16,9
   822b0:	843e4104 	addi	r16,r16,-1788
   822b4:	00c000c4 	movi	r3,3
   822b8:	00bfdfc4 	movi	r2,-129
   822bc:	d8c02a15 	stw	r3,168(sp)
   822c0:	90a4703a 	and	r18,r18,r2
   822c4:	df002783 	ldbu	fp,158(sp)
   822c8:	d8c02e15 	stw	r3,184(sp)
   822cc:	d8002915 	stw	zero,164(sp)
   822d0:	d8003215 	stw	zero,200(sp)
   822d4:	003b2906 	br	80f7c <__alt_data_end+0xfffb548c>
   822d8:	d9002d17 	ldw	r4,180(sp)
   822dc:	24c00017 	ldw	r19,0(r4)
   822e0:	21000104 	addi	r4,r4,4
   822e4:	d9002d15 	stw	r4,180(sp)
   822e8:	982dd7fa 	srai	r22,r19,31
   822ec:	b005883a 	mov	r2,r22
   822f0:	003a9f06 	br	80d70 <__alt_data_end+0xfffb5280>
   822f4:	d9402d17 	ldw	r5,180(sp)
   822f8:	d8c02f17 	ldw	r3,188(sp)
   822fc:	28800017 	ldw	r2,0(r5)
   82300:	29400104 	addi	r5,r5,4
   82304:	d9402d15 	stw	r5,180(sp)
   82308:	10c00015 	stw	r3,0(r2)
   8230c:	00398606 	br	80928 <__alt_data_end+0xfffb4e38>
   82310:	d9402d17 	ldw	r5,180(sp)
   82314:	002d883a 	mov	r22,zero
   82318:	2cc00017 	ldw	r19,0(r5)
   8231c:	29400104 	addi	r5,r5,4
   82320:	d9402d15 	stw	r5,180(sp)
   82324:	003c2306 	br	813b4 <__alt_data_end+0xfffb58c4>
   82328:	d8c02d17 	ldw	r3,180(sp)
   8232c:	d9002917 	ldw	r4,164(sp)
   82330:	002d883a 	mov	r22,zero
   82334:	18800104 	addi	r2,r3,4
   82338:	1cc0000b 	ldhu	r19,0(r3)
   8233c:	203dc10e 	bge	r4,zero,81a44 <__alt_data_end+0xfffb5f54>
   82340:	003f7506 	br	82118 <__alt_data_end+0xfffb6628>
   82344:	04000274 	movhi	r16,9
   82348:	843e3f04 	addi	r16,r16,-1796
   8234c:	003acc06 	br	80e80 <__alt_data_end+0xfffb5390>
   82350:	d9002c17 	ldw	r4,176(sp)
   82354:	d9801e04 	addi	r6,sp,120
   82358:	b80b883a 	mov	r5,r23
   8235c:	0087e440 	call	87e44 <__sprint_r>
   82360:	103a3b1e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   82364:	dc402617 	ldw	r17,152(sp)
   82368:	d8c02017 	ldw	r3,128(sp)
   8236c:	da000404 	addi	r8,sp,16
   82370:	003f9c06 	br	821e4 <__alt_data_end+0xfffb66f4>
   82374:	ac400043 	ldbu	r17,1(r21)
   82378:	94800814 	ori	r18,r18,32
   8237c:	ad400044 	addi	r21,r21,1
   82380:	8c403fcc 	andi	r17,r17,255
   82384:	8c40201c 	xori	r17,r17,128
   82388:	8c7fe004 	addi	r17,r17,-128
   8238c:	00398f06 	br	809cc <__alt_data_end+0xfffb4edc>
   82390:	d8c02d15 	stw	r3,180(sp)
   82394:	0039883a 	mov	fp,zero
   82398:	003e3506 	br	81c70 <__alt_data_end+0xfffb6180>
   8239c:	d9002c17 	ldw	r4,176(sp)
   823a0:	d9801e04 	addi	r6,sp,120
   823a4:	b80b883a 	mov	r5,r23
   823a8:	0087e440 	call	87e44 <__sprint_r>
   823ac:	103a281e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   823b0:	d8c02017 	ldw	r3,128(sp)
   823b4:	da000404 	addi	r8,sp,16
   823b8:	003cd006 	br	816fc <__alt_data_end+0xfffb5c0c>
   823bc:	8009883a 	mov	r4,r16
   823c0:	da003d15 	stw	r8,244(sp)
   823c4:	00807b00 	call	807b0 <strlen>
   823c8:	d8802e15 	stw	r2,184(sp)
   823cc:	da003d17 	ldw	r8,244(sp)
   823d0:	103c340e 	bge	r2,zero,814a4 <__alt_data_end+0xfffb59b4>
   823d4:	0005883a 	mov	r2,zero
   823d8:	003c3206 	br	814a4 <__alt_data_end+0xfffb59b4>
   823dc:	d9002c17 	ldw	r4,176(sp)
   823e0:	d9801e04 	addi	r6,sp,120
   823e4:	b80b883a 	mov	r5,r23
   823e8:	0087e440 	call	87e44 <__sprint_r>
   823ec:	103a181e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   823f0:	d8c02017 	ldw	r3,128(sp)
   823f4:	d8801f17 	ldw	r2,124(sp)
   823f8:	da000404 	addi	r8,sp,16
   823fc:	d9403317 	ldw	r5,204(sp)
   82400:	10800044 	addi	r2,r2,1
   82404:	44000015 	stw	r16,0(r8)
   82408:	28c7883a 	add	r3,r5,r3
   8240c:	003b7d06 	br	81204 <__alt_data_end+0xfffb5714>
   82410:	01000274 	movhi	r4,9
   82414:	213e5384 	addi	r4,r4,-1714
   82418:	d9003515 	stw	r4,212(sp)
   8241c:	003b1406 	br	81070 <__alt_data_end+0xfffb5580>
   82420:	013fffc4 	movi	r4,-1
   82424:	003a3506 	br	80cfc <__alt_data_end+0xfffb520c>
   82428:	0023883a 	mov	r17,zero
   8242c:	003d9d06 	br	81aa4 <__alt_data_end+0xfffb5fb4>
   82430:	d9002c17 	ldw	r4,176(sp)
   82434:	d9801e04 	addi	r6,sp,120
   82438:	b80b883a 	mov	r5,r23
   8243c:	0087e440 	call	87e44 <__sprint_r>
   82440:	103a031e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   82444:	d8c02017 	ldw	r3,128(sp)
   82448:	da000404 	addi	r8,sp,16
   8244c:	003d9406 	br	81aa0 <__alt_data_end+0xfffb5fb0>
   82450:	01000274 	movhi	r4,9
   82454:	213e4f84 	addi	r4,r4,-1730
   82458:	d9002b15 	stw	r4,172(sp)
   8245c:	d9002b17 	ldw	r4,172(sp)
   82460:	1c47883a 	add	r3,r3,r17
   82464:	10800044 	addi	r2,r2,1
   82468:	41000015 	stw	r4,0(r8)
   8246c:	44400115 	stw	r17,4(r8)
   82470:	d8c02015 	stw	r3,128(sp)
   82474:	d8801f15 	stw	r2,124(sp)
   82478:	010001c4 	movi	r4,7
   8247c:	20bfd716 	blt	r4,r2,823dc <__alt_data_end+0xfffb68ec>
   82480:	42000204 	addi	r8,r8,8
   82484:	003fdd06 	br	823fc <__alt_data_end+0xfffb690c>
   82488:	d9002c17 	ldw	r4,176(sp)
   8248c:	d9801e04 	addi	r6,sp,120
   82490:	b80b883a 	mov	r5,r23
   82494:	0087e440 	call	87e44 <__sprint_r>
   82498:	1039ed1e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   8249c:	d8802617 	ldw	r2,152(sp)
   824a0:	d8c02017 	ldw	r3,128(sp)
   824a4:	da000404 	addi	r8,sp,16
   824a8:	003e1006 	br	81cec <__alt_data_end+0xfffb61fc>
   824ac:	00800044 	movi	r2,1
   824b0:	10803fcc 	andi	r2,r2,255
   824b4:	00c00044 	movi	r3,1
   824b8:	10fa3526 	beq	r2,r3,80d90 <__alt_data_end+0xfffb52a0>
   824bc:	00c00084 	movi	r3,2
   824c0:	10fbcb26 	beq	r2,r3,813f0 <__alt_data_end+0xfffb5900>
   824c4:	003a8f06 	br	80f04 <__alt_data_end+0xfffb5414>
   824c8:	01000274 	movhi	r4,9
   824cc:	213e5384 	addi	r4,r4,-1714
   824d0:	d9003515 	stw	r4,212(sp)
   824d4:	003b7606 	br	812b0 <__alt_data_end+0xfffb57c0>
   824d8:	d8802917 	ldw	r2,164(sp)
   824dc:	00c00184 	movi	r3,6
   824e0:	1880012e 	bgeu	r3,r2,824e8 <___vfprintf_internal_r+0x1ca0>
   824e4:	1805883a 	mov	r2,r3
   824e8:	d8802e15 	stw	r2,184(sp)
   824ec:	1000ef16 	blt	r2,zero,828ac <___vfprintf_internal_r+0x2064>
   824f0:	04000274 	movhi	r16,9
   824f4:	d8802a15 	stw	r2,168(sp)
   824f8:	dcc02d15 	stw	r19,180(sp)
   824fc:	d8002915 	stw	zero,164(sp)
   82500:	d8003215 	stw	zero,200(sp)
   82504:	843e4d04 	addi	r16,r16,-1740
   82508:	0039883a 	mov	fp,zero
   8250c:	003aa206 	br	80f98 <__alt_data_end+0xfffb54a8>
   82510:	0021883a 	mov	r16,zero
   82514:	003e0706 	br	81d34 <__alt_data_end+0xfffb6244>
   82518:	d9002c17 	ldw	r4,176(sp)
   8251c:	d9801e04 	addi	r6,sp,120
   82520:	b80b883a 	mov	r5,r23
   82524:	0087e440 	call	87e44 <__sprint_r>
   82528:	1039c91e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   8252c:	d8802617 	ldw	r2,152(sp)
   82530:	d9403317 	ldw	r5,204(sp)
   82534:	d8c02017 	ldw	r3,128(sp)
   82538:	da000404 	addi	r8,sp,16
   8253c:	2885c83a 	sub	r2,r5,r2
   82540:	003dfb06 	br	81d30 <__alt_data_end+0xfffb6240>
   82544:	9080004c 	andi	r2,r18,1
   82548:	103e8f1e 	bne	r2,zero,81f88 <__alt_data_end+0xfffb6498>
   8254c:	d8802117 	ldw	r2,132(sp)
   82550:	003e9e06 	br	81fcc <__alt_data_end+0xfffb64dc>
   82554:	1025883a 	mov	r18,r2
   82558:	0039883a 	mov	fp,zero
   8255c:	00800084 	movi	r2,2
   82560:	003fd306 	br	824b0 <__alt_data_end+0xfffb69c0>
   82564:	07000b44 	movi	fp,45
   82568:	df002785 	stb	fp,158(sp)
   8256c:	003a4006 	br	80e70 <__alt_data_end+0xfffb5380>
   82570:	00c00b44 	movi	r3,45
   82574:	d8c02785 	stb	r3,158(sp)
   82578:	d8802a15 	stw	r2,168(sp)
   8257c:	dc802b17 	ldw	r18,172(sp)
   82580:	d8002915 	stw	zero,164(sp)
   82584:	07000b44 	movi	fp,45
   82588:	003a8006 	br	80f8c <__alt_data_end+0xfffb549c>
   8258c:	04000274 	movhi	r16,9
   82590:	843e4204 	addi	r16,r16,-1784
   82594:	003f4706 	br	822b4 <__alt_data_end+0xfffb67c4>
   82598:	d8c02d17 	ldw	r3,180(sp)
   8259c:	d9002f17 	ldw	r4,188(sp)
   825a0:	18800017 	ldw	r2,0(r3)
   825a4:	18c00104 	addi	r3,r3,4
   825a8:	d8c02d15 	stw	r3,180(sp)
   825ac:	11000015 	stw	r4,0(r2)
   825b0:	0038dd06 	br	80928 <__alt_data_end+0xfffb4e38>
   825b4:	dd802617 	ldw	r22,152(sp)
   825b8:	00bfff44 	movi	r2,-3
   825bc:	b0801c16 	blt	r22,r2,82630 <___vfprintf_internal_r+0x1de8>
   825c0:	d9402917 	ldw	r5,164(sp)
   825c4:	2d801a16 	blt	r5,r22,82630 <___vfprintf_internal_r+0x1de8>
   825c8:	dd803215 	stw	r22,200(sp)
   825cc:	003e8906 	br	81ff4 <__alt_data_end+0xfffb6504>
   825d0:	01000274 	movhi	r4,9
   825d4:	213e4f84 	addi	r4,r4,-1730
   825d8:	d9002b15 	stw	r4,172(sp)
   825dc:	003c9106 	br	81824 <__alt_data_end+0xfffb5d34>
   825e0:	e005883a 	mov	r2,fp
   825e4:	003e7906 	br	81fcc <__alt_data_end+0xfffb64dc>
   825e8:	d9402917 	ldw	r5,164(sp)
   825ec:	df002783 	ldbu	fp,158(sp)
   825f0:	dcc02d15 	stw	r19,180(sp)
   825f4:	d9402a15 	stw	r5,168(sp)
   825f8:	d9402e15 	stw	r5,184(sp)
   825fc:	d8002915 	stw	zero,164(sp)
   82600:	d8003215 	stw	zero,200(sp)
   82604:	003a5d06 	br	80f7c <__alt_data_end+0xfffb548c>
   82608:	9080004c 	andi	r2,r18,1
   8260c:	0039883a 	mov	fp,zero
   82610:	10000426 	beq	r2,zero,82624 <___vfprintf_internal_r+0x1ddc>
   82614:	00800c04 	movi	r2,48
   82618:	dc001dc4 	addi	r16,sp,119
   8261c:	d8801dc5 	stb	r2,119(sp)
   82620:	003b8006 	br	81424 <__alt_data_end+0xfffb5934>
   82624:	d8002e15 	stw	zero,184(sp)
   82628:	dc001e04 	addi	r16,sp,120
   8262c:	003a4d06 	br	80f64 <__alt_data_end+0xfffb5474>
   82630:	8c7fff84 	addi	r17,r17,-2
   82634:	b5bfffc4 	addi	r22,r22,-1
   82638:	dd802615 	stw	r22,152(sp)
   8263c:	dc4022c5 	stb	r17,139(sp)
   82640:	b000bf16 	blt	r22,zero,82940 <___vfprintf_internal_r+0x20f8>
   82644:	00800ac4 	movi	r2,43
   82648:	d8802305 	stb	r2,140(sp)
   8264c:	00800244 	movi	r2,9
   82650:	15807016 	blt	r2,r22,82814 <___vfprintf_internal_r+0x1fcc>
   82654:	00800c04 	movi	r2,48
   82658:	b5800c04 	addi	r22,r22,48
   8265c:	d8802345 	stb	r2,141(sp)
   82660:	dd802385 	stb	r22,142(sp)
   82664:	d88023c4 	addi	r2,sp,143
   82668:	df0022c4 	addi	fp,sp,139
   8266c:	d8c03317 	ldw	r3,204(sp)
   82670:	1739c83a 	sub	fp,r2,fp
   82674:	d9003317 	ldw	r4,204(sp)
   82678:	e0c7883a 	add	r3,fp,r3
   8267c:	df003a15 	stw	fp,232(sp)
   82680:	d8c02e15 	stw	r3,184(sp)
   82684:	00800044 	movi	r2,1
   82688:	1100b30e 	bge	r2,r4,82958 <___vfprintf_internal_r+0x2110>
   8268c:	d8c02e17 	ldw	r3,184(sp)
   82690:	18c00044 	addi	r3,r3,1
   82694:	d8c02e15 	stw	r3,184(sp)
   82698:	1805883a 	mov	r2,r3
   8269c:	1800ac16 	blt	r3,zero,82950 <___vfprintf_internal_r+0x2108>
   826a0:	d8003215 	stw	zero,200(sp)
   826a4:	003e5d06 	br	8201c <__alt_data_end+0xfffb652c>
   826a8:	d9002c17 	ldw	r4,176(sp)
   826ac:	d9801e04 	addi	r6,sp,120
   826b0:	b80b883a 	mov	r5,r23
   826b4:	0087e440 	call	87e44 <__sprint_r>
   826b8:	1039651e 	bne	r2,zero,80c50 <__alt_data_end+0xfffb5160>
   826bc:	dc402617 	ldw	r17,152(sp)
   826c0:	d8c02017 	ldw	r3,128(sp)
   826c4:	d8801f17 	ldw	r2,124(sp)
   826c8:	da000404 	addi	r8,sp,16
   826cc:	003ed606 	br	82228 <__alt_data_end+0xfffb6738>
   826d0:	582b883a 	mov	r21,r11
   826d4:	d8002915 	stw	zero,164(sp)
   826d8:	0038bd06 	br	809d0 <__alt_data_end+0xfffb4ee0>
   826dc:	d8802917 	ldw	r2,164(sp)
   826e0:	103e071e 	bne	r2,zero,81f00 <__alt_data_end+0xfffb6410>
   826e4:	dc002915 	stw	r16,164(sp)
   826e8:	003e0506 	br	81f00 <__alt_data_end+0xfffb6410>
   826ec:	d9002917 	ldw	r4,164(sp)
   826f0:	20c00044 	addi	r3,r4,1
   826f4:	003e0f06 	br	81f34 <__alt_data_end+0xfffb6444>
   826f8:	01400184 	movi	r5,6
   826fc:	d9402915 	stw	r5,164(sp)
   82700:	003dff06 	br	81f00 <__alt_data_end+0xfffb6410>
   82704:	d8802104 	addi	r2,sp,132
   82708:	d8800315 	stw	r2,12(sp)
   8270c:	d8802504 	addi	r2,sp,148
   82710:	d8800215 	stw	r2,8(sp)
   82714:	d8802604 	addi	r2,sp,152
   82718:	d8800115 	stw	r2,4(sp)
   8271c:	d8802917 	ldw	r2,164(sp)
   82720:	d9403617 	ldw	r5,216(sp)
   82724:	d9002c17 	ldw	r4,176(sp)
   82728:	d8800015 	stw	r2,0(sp)
   8272c:	01c000c4 	movi	r7,3
   82730:	980d883a 	mov	r6,r19
   82734:	da003d15 	stw	r8,244(sp)
   82738:	0082e6c0 	call	82e6c <_dtoa_r>
   8273c:	d8c02917 	ldw	r3,164(sp)
   82740:	da003d17 	ldw	r8,244(sp)
   82744:	1021883a 	mov	r16,r2
   82748:	10f9883a 	add	fp,r2,r3
   8274c:	81000007 	ldb	r4,0(r16)
   82750:	00800c04 	movi	r2,48
   82754:	20805e26 	beq	r4,r2,828d0 <___vfprintf_internal_r+0x2088>
   82758:	d8c02617 	ldw	r3,152(sp)
   8275c:	e0f9883a 	add	fp,fp,r3
   82760:	003e0a06 	br	81f8c <__alt_data_end+0xfffb649c>
   82764:	00c00b44 	movi	r3,45
   82768:	24e0003c 	xorhi	r19,r4,32768
   8276c:	d8c02a05 	stb	r3,168(sp)
   82770:	003de906 	br	81f18 <__alt_data_end+0xfffb6428>
   82774:	d8c03217 	ldw	r3,200(sp)
   82778:	00c07a0e 	bge	zero,r3,82964 <___vfprintf_internal_r+0x211c>
   8277c:	00800044 	movi	r2,1
   82780:	d9003317 	ldw	r4,204(sp)
   82784:	1105883a 	add	r2,r2,r4
   82788:	d8802e15 	stw	r2,184(sp)
   8278c:	10004e16 	blt	r2,zero,828c8 <___vfprintf_internal_r+0x2080>
   82790:	044019c4 	movi	r17,103
   82794:	003e2106 	br	8201c <__alt_data_end+0xfffb652c>
   82798:	d9002917 	ldw	r4,164(sp)
   8279c:	d8802104 	addi	r2,sp,132
   827a0:	d8800315 	stw	r2,12(sp)
   827a4:	d9000015 	stw	r4,0(sp)
   827a8:	d8802504 	addi	r2,sp,148
   827ac:	d9403617 	ldw	r5,216(sp)
   827b0:	d9002c17 	ldw	r4,176(sp)
   827b4:	d8800215 	stw	r2,8(sp)
   827b8:	d8802604 	addi	r2,sp,152
   827bc:	d8800115 	stw	r2,4(sp)
   827c0:	01c000c4 	movi	r7,3
   827c4:	980d883a 	mov	r6,r19
   827c8:	da003d15 	stw	r8,244(sp)
   827cc:	0082e6c0 	call	82e6c <_dtoa_r>
   827d0:	d8c02917 	ldw	r3,164(sp)
   827d4:	da003d17 	ldw	r8,244(sp)
   827d8:	1021883a 	mov	r16,r2
   827dc:	00801184 	movi	r2,70
   827e0:	80f9883a 	add	fp,r16,r3
   827e4:	88bfd926 	beq	r17,r2,8274c <__alt_data_end+0xfffb6c5c>
   827e8:	003de806 	br	81f8c <__alt_data_end+0xfffb649c>
   827ec:	d9002917 	ldw	r4,164(sp)
   827f0:	00c04d0e 	bge	zero,r3,82928 <___vfprintf_internal_r+0x20e0>
   827f4:	2000441e 	bne	r4,zero,82908 <___vfprintf_internal_r+0x20c0>
   827f8:	9480004c 	andi	r18,r18,1
   827fc:	9000421e 	bne	r18,zero,82908 <___vfprintf_internal_r+0x20c0>
   82800:	1805883a 	mov	r2,r3
   82804:	18007016 	blt	r3,zero,829c8 <___vfprintf_internal_r+0x2180>
   82808:	d8c03217 	ldw	r3,200(sp)
   8280c:	d8c02e15 	stw	r3,184(sp)
   82810:	003e0206 	br	8201c <__alt_data_end+0xfffb652c>
   82814:	df0022c4 	addi	fp,sp,139
   82818:	dc002915 	stw	r16,164(sp)
   8281c:	4027883a 	mov	r19,r8
   82820:	e021883a 	mov	r16,fp
   82824:	b009883a 	mov	r4,r22
   82828:	01400284 	movi	r5,10
   8282c:	008a7f80 	call	8a7f8 <__modsi3>
   82830:	10800c04 	addi	r2,r2,48
   82834:	843fffc4 	addi	r16,r16,-1
   82838:	b009883a 	mov	r4,r22
   8283c:	01400284 	movi	r5,10
   82840:	80800005 	stb	r2,0(r16)
   82844:	008a7740 	call	8a774 <__divsi3>
   82848:	102d883a 	mov	r22,r2
   8284c:	00800244 	movi	r2,9
   82850:	15bff416 	blt	r2,r22,82824 <__alt_data_end+0xfffb6d34>
   82854:	9811883a 	mov	r8,r19
   82858:	b0800c04 	addi	r2,r22,48
   8285c:	8027883a 	mov	r19,r16
   82860:	997fffc4 	addi	r5,r19,-1
   82864:	98bfffc5 	stb	r2,-1(r19)
   82868:	dc002917 	ldw	r16,164(sp)
   8286c:	2f006a2e 	bgeu	r5,fp,82a18 <___vfprintf_internal_r+0x21d0>
   82870:	d9c02384 	addi	r7,sp,142
   82874:	3ccfc83a 	sub	r7,r7,r19
   82878:	d9002344 	addi	r4,sp,141
   8287c:	e1cf883a 	add	r7,fp,r7
   82880:	00000106 	br	82888 <___vfprintf_internal_r+0x2040>
   82884:	28800003 	ldbu	r2,0(r5)
   82888:	20800005 	stb	r2,0(r4)
   8288c:	21000044 	addi	r4,r4,1
   82890:	29400044 	addi	r5,r5,1
   82894:	393ffb1e 	bne	r7,r4,82884 <__alt_data_end+0xfffb6d94>
   82898:	d8802304 	addi	r2,sp,140
   8289c:	14c5c83a 	sub	r2,r2,r19
   828a0:	d8c02344 	addi	r3,sp,141
   828a4:	1885883a 	add	r2,r3,r2
   828a8:	003f7006 	br	8266c <__alt_data_end+0xfffb6b7c>
   828ac:	0005883a 	mov	r2,zero
   828b0:	003f0f06 	br	824f0 <__alt_data_end+0xfffb6a00>
   828b4:	d8c03217 	ldw	r3,200(sp)
   828b8:	18c00044 	addi	r3,r3,1
   828bc:	d8c02e15 	stw	r3,184(sp)
   828c0:	1805883a 	mov	r2,r3
   828c4:	183fb20e 	bge	r3,zero,82790 <__alt_data_end+0xfffb6ca0>
   828c8:	0005883a 	mov	r2,zero
   828cc:	003fb006 	br	82790 <__alt_data_end+0xfffb6ca0>
   828d0:	d9003617 	ldw	r4,216(sp)
   828d4:	000d883a 	mov	r6,zero
   828d8:	000f883a 	mov	r7,zero
   828dc:	980b883a 	mov	r5,r19
   828e0:	d8c03c15 	stw	r3,240(sp)
   828e4:	da003d15 	stw	r8,244(sp)
   828e8:	008babc0 	call	8babc <__eqdf2>
   828ec:	d8c03c17 	ldw	r3,240(sp)
   828f0:	da003d17 	ldw	r8,244(sp)
   828f4:	103f9826 	beq	r2,zero,82758 <__alt_data_end+0xfffb6c68>
   828f8:	00800044 	movi	r2,1
   828fc:	10c7c83a 	sub	r3,r2,r3
   82900:	d8c02615 	stw	r3,152(sp)
   82904:	003f9506 	br	8275c <__alt_data_end+0xfffb6c6c>
   82908:	d9002917 	ldw	r4,164(sp)
   8290c:	d8c03217 	ldw	r3,200(sp)
   82910:	20800044 	addi	r2,r4,1
   82914:	1885883a 	add	r2,r3,r2
   82918:	d8802e15 	stw	r2,184(sp)
   8291c:	103dbf0e 	bge	r2,zero,8201c <__alt_data_end+0xfffb652c>
   82920:	0005883a 	mov	r2,zero
   82924:	003dbd06 	br	8201c <__alt_data_end+0xfffb652c>
   82928:	2000211e 	bne	r4,zero,829b0 <___vfprintf_internal_r+0x2168>
   8292c:	9480004c 	andi	r18,r18,1
   82930:	90001f1e 	bne	r18,zero,829b0 <___vfprintf_internal_r+0x2168>
   82934:	00800044 	movi	r2,1
   82938:	d8802e15 	stw	r2,184(sp)
   8293c:	003db706 	br	8201c <__alt_data_end+0xfffb652c>
   82940:	00800b44 	movi	r2,45
   82944:	05adc83a 	sub	r22,zero,r22
   82948:	d8802305 	stb	r2,140(sp)
   8294c:	003f3f06 	br	8264c <__alt_data_end+0xfffb6b5c>
   82950:	0005883a 	mov	r2,zero
   82954:	003f5206 	br	826a0 <__alt_data_end+0xfffb6bb0>
   82958:	90a4703a 	and	r18,r18,r2
   8295c:	903f4e26 	beq	r18,zero,82698 <__alt_data_end+0xfffb6ba8>
   82960:	003f4a06 	br	8268c <__alt_data_end+0xfffb6b9c>
   82964:	00800084 	movi	r2,2
   82968:	10c5c83a 	sub	r2,r2,r3
   8296c:	003f8406 	br	82780 <__alt_data_end+0xfffb6c90>
   82970:	d8802d17 	ldw	r2,180(sp)
   82974:	d9002d17 	ldw	r4,180(sp)
   82978:	ac400043 	ldbu	r17,1(r21)
   8297c:	10800017 	ldw	r2,0(r2)
   82980:	582b883a 	mov	r21,r11
   82984:	d8802915 	stw	r2,164(sp)
   82988:	20800104 	addi	r2,r4,4
   8298c:	d9002917 	ldw	r4,164(sp)
   82990:	d8802d15 	stw	r2,180(sp)
   82994:	203e7a0e 	bge	r4,zero,82380 <__alt_data_end+0xfffb6890>
   82998:	8c403fcc 	andi	r17,r17,255
   8299c:	00bfffc4 	movi	r2,-1
   829a0:	8c40201c 	xori	r17,r17,128
   829a4:	d8802915 	stw	r2,164(sp)
   829a8:	8c7fe004 	addi	r17,r17,-128
   829ac:	00380706 	br	809cc <__alt_data_end+0xfffb4edc>
   829b0:	d8c02917 	ldw	r3,164(sp)
   829b4:	18c00084 	addi	r3,r3,2
   829b8:	d8c02e15 	stw	r3,184(sp)
   829bc:	1805883a 	mov	r2,r3
   829c0:	183d960e 	bge	r3,zero,8201c <__alt_data_end+0xfffb652c>
   829c4:	003fd606 	br	82920 <__alt_data_end+0xfffb6e30>
   829c8:	0005883a 	mov	r2,zero
   829cc:	003f8e06 	br	82808 <__alt_data_end+0xfffb6d18>
   829d0:	9080004c 	andi	r2,r18,1
   829d4:	103f811e 	bne	r2,zero,827dc <__alt_data_end+0xfffb6cec>
   829d8:	d8802117 	ldw	r2,132(sp)
   829dc:	1405c83a 	sub	r2,r2,r16
   829e0:	d8803315 	stw	r2,204(sp)
   829e4:	b47ef326 	beq	r22,r17,825b4 <__alt_data_end+0xfffb6ac4>
   829e8:	dd802617 	ldw	r22,152(sp)
   829ec:	003f1106 	br	82634 <__alt_data_end+0xfffb6b44>
   829f0:	d9c02785 	stb	r7,158(sp)
   829f4:	00390406 	br	80e08 <__alt_data_end+0xfffb5318>
   829f8:	d9c02785 	stb	r7,158(sp)
   829fc:	0038d306 	br	80d4c <__alt_data_end+0xfffb525c>
   82a00:	d9c02785 	stb	r7,158(sp)
   82a04:	003a6106 	br	8138c <__alt_data_end+0xfffb589c>
   82a08:	d9c02785 	stb	r7,158(sp)
   82a0c:	003af806 	br	815f0 <__alt_data_end+0xfffb5b00>
   82a10:	0005883a 	mov	r2,zero
   82a14:	003d7e06 	br	82010 <__alt_data_end+0xfffb6520>
   82a18:	d8802344 	addi	r2,sp,141
   82a1c:	003f1306 	br	8266c <__alt_data_end+0xfffb6b7c>
   82a20:	d9c02785 	stb	r7,158(sp)
   82a24:	00392306 	br	80eb4 <__alt_data_end+0xfffb53c4>
   82a28:	d9c02785 	stb	r7,158(sp)
   82a2c:	003aa906 	br	814d4 <__alt_data_end+0xfffb59e4>
   82a30:	d9c02785 	stb	r7,158(sp)
   82a34:	003a3d06 	br	8132c <__alt_data_end+0xfffb583c>
   82a38:	d9c02785 	stb	r7,158(sp)
   82a3c:	003aca06 	br	81568 <__alt_data_end+0xfffb5a78>

00082a40 <__vfprintf_internal>:
   82a40:	00800274 	movhi	r2,9
   82a44:	1085a904 	addi	r2,r2,5796
   82a48:	300f883a 	mov	r7,r6
   82a4c:	280d883a 	mov	r6,r5
   82a50:	200b883a 	mov	r5,r4
   82a54:	11000017 	ldw	r4,0(r2)
   82a58:	00808481 	jmpi	80848 <___vfprintf_internal_r>

00082a5c <__sbprintf>:
   82a5c:	2880030b 	ldhu	r2,12(r5)
   82a60:	2ac01917 	ldw	r11,100(r5)
   82a64:	2a80038b 	ldhu	r10,14(r5)
   82a68:	2a400717 	ldw	r9,28(r5)
   82a6c:	2a000917 	ldw	r8,36(r5)
   82a70:	defee204 	addi	sp,sp,-1144
   82a74:	00c10004 	movi	r3,1024
   82a78:	dc011a15 	stw	r16,1128(sp)
   82a7c:	10bfff4c 	andi	r2,r2,65533
   82a80:	2821883a 	mov	r16,r5
   82a84:	d8cb883a 	add	r5,sp,r3
   82a88:	dc811c15 	stw	r18,1136(sp)
   82a8c:	dc411b15 	stw	r17,1132(sp)
   82a90:	dfc11d15 	stw	ra,1140(sp)
   82a94:	2025883a 	mov	r18,r4
   82a98:	d881030d 	sth	r2,1036(sp)
   82a9c:	dac11915 	stw	r11,1124(sp)
   82aa0:	da81038d 	sth	r10,1038(sp)
   82aa4:	da410715 	stw	r9,1052(sp)
   82aa8:	da010915 	stw	r8,1060(sp)
   82aac:	dec10015 	stw	sp,1024(sp)
   82ab0:	dec10415 	stw	sp,1040(sp)
   82ab4:	d8c10215 	stw	r3,1032(sp)
   82ab8:	d8c10515 	stw	r3,1044(sp)
   82abc:	d8010615 	stw	zero,1048(sp)
   82ac0:	00808480 	call	80848 <___vfprintf_internal_r>
   82ac4:	1023883a 	mov	r17,r2
   82ac8:	10000416 	blt	r2,zero,82adc <__sbprintf+0x80>
   82acc:	d9410004 	addi	r5,sp,1024
   82ad0:	9009883a 	mov	r4,r18
   82ad4:	00847100 	call	84710 <_fflush_r>
   82ad8:	10000d1e 	bne	r2,zero,82b10 <__sbprintf+0xb4>
   82adc:	d881030b 	ldhu	r2,1036(sp)
   82ae0:	1080100c 	andi	r2,r2,64
   82ae4:	10000326 	beq	r2,zero,82af4 <__sbprintf+0x98>
   82ae8:	8080030b 	ldhu	r2,12(r16)
   82aec:	10801014 	ori	r2,r2,64
   82af0:	8080030d 	sth	r2,12(r16)
   82af4:	8805883a 	mov	r2,r17
   82af8:	dfc11d17 	ldw	ra,1140(sp)
   82afc:	dc811c17 	ldw	r18,1136(sp)
   82b00:	dc411b17 	ldw	r17,1132(sp)
   82b04:	dc011a17 	ldw	r16,1128(sp)
   82b08:	dec11e04 	addi	sp,sp,1144
   82b0c:	f800283a 	ret
   82b10:	047fffc4 	movi	r17,-1
   82b14:	003ff106 	br	82adc <__alt_data_end+0xfffb6fec>

00082b18 <__swsetup_r>:
   82b18:	00800274 	movhi	r2,9
   82b1c:	defffd04 	addi	sp,sp,-12
   82b20:	1085a904 	addi	r2,r2,5796
   82b24:	dc400115 	stw	r17,4(sp)
   82b28:	2023883a 	mov	r17,r4
   82b2c:	11000017 	ldw	r4,0(r2)
   82b30:	dc000015 	stw	r16,0(sp)
   82b34:	dfc00215 	stw	ra,8(sp)
   82b38:	2821883a 	mov	r16,r5
   82b3c:	20000226 	beq	r4,zero,82b48 <__swsetup_r+0x30>
   82b40:	20800e17 	ldw	r2,56(r4)
   82b44:	10003126 	beq	r2,zero,82c0c <__swsetup_r+0xf4>
   82b48:	8080030b 	ldhu	r2,12(r16)
   82b4c:	10c0020c 	andi	r3,r2,8
   82b50:	1009883a 	mov	r4,r2
   82b54:	18000f26 	beq	r3,zero,82b94 <__swsetup_r+0x7c>
   82b58:	80c00417 	ldw	r3,16(r16)
   82b5c:	18001526 	beq	r3,zero,82bb4 <__swsetup_r+0x9c>
   82b60:	1100004c 	andi	r4,r2,1
   82b64:	20001c1e 	bne	r4,zero,82bd8 <__swsetup_r+0xc0>
   82b68:	1080008c 	andi	r2,r2,2
   82b6c:	1000291e 	bne	r2,zero,82c14 <__swsetup_r+0xfc>
   82b70:	80800517 	ldw	r2,20(r16)
   82b74:	80800215 	stw	r2,8(r16)
   82b78:	18001c26 	beq	r3,zero,82bec <__swsetup_r+0xd4>
   82b7c:	0005883a 	mov	r2,zero
   82b80:	dfc00217 	ldw	ra,8(sp)
   82b84:	dc400117 	ldw	r17,4(sp)
   82b88:	dc000017 	ldw	r16,0(sp)
   82b8c:	dec00304 	addi	sp,sp,12
   82b90:	f800283a 	ret
   82b94:	2080040c 	andi	r2,r4,16
   82b98:	10002e26 	beq	r2,zero,82c54 <__swsetup_r+0x13c>
   82b9c:	2080010c 	andi	r2,r4,4
   82ba0:	10001e1e 	bne	r2,zero,82c1c <__swsetup_r+0x104>
   82ba4:	80c00417 	ldw	r3,16(r16)
   82ba8:	20800214 	ori	r2,r4,8
   82bac:	8080030d 	sth	r2,12(r16)
   82bb0:	183feb1e 	bne	r3,zero,82b60 <__alt_data_end+0xfffb7070>
   82bb4:	1100a00c 	andi	r4,r2,640
   82bb8:	01408004 	movi	r5,512
   82bbc:	217fe826 	beq	r4,r5,82b60 <__alt_data_end+0xfffb7070>
   82bc0:	800b883a 	mov	r5,r16
   82bc4:	8809883a 	mov	r4,r17
   82bc8:	00856900 	call	85690 <__smakebuf_r>
   82bcc:	8080030b 	ldhu	r2,12(r16)
   82bd0:	80c00417 	ldw	r3,16(r16)
   82bd4:	003fe206 	br	82b60 <__alt_data_end+0xfffb7070>
   82bd8:	80800517 	ldw	r2,20(r16)
   82bdc:	80000215 	stw	zero,8(r16)
   82be0:	0085c83a 	sub	r2,zero,r2
   82be4:	80800615 	stw	r2,24(r16)
   82be8:	183fe41e 	bne	r3,zero,82b7c <__alt_data_end+0xfffb708c>
   82bec:	80c0030b 	ldhu	r3,12(r16)
   82bf0:	0005883a 	mov	r2,zero
   82bf4:	1900200c 	andi	r4,r3,128
   82bf8:	203fe126 	beq	r4,zero,82b80 <__alt_data_end+0xfffb7090>
   82bfc:	18c01014 	ori	r3,r3,64
   82c00:	80c0030d 	sth	r3,12(r16)
   82c04:	00bfffc4 	movi	r2,-1
   82c08:	003fdd06 	br	82b80 <__alt_data_end+0xfffb7090>
   82c0c:	0084aec0 	call	84aec <__sinit>
   82c10:	003fcd06 	br	82b48 <__alt_data_end+0xfffb7058>
   82c14:	0005883a 	mov	r2,zero
   82c18:	003fd606 	br	82b74 <__alt_data_end+0xfffb7084>
   82c1c:	81400c17 	ldw	r5,48(r16)
   82c20:	28000626 	beq	r5,zero,82c3c <__swsetup_r+0x124>
   82c24:	80801004 	addi	r2,r16,64
   82c28:	28800326 	beq	r5,r2,82c38 <__swsetup_r+0x120>
   82c2c:	8809883a 	mov	r4,r17
   82c30:	0084c600 	call	84c60 <_free_r>
   82c34:	8100030b 	ldhu	r4,12(r16)
   82c38:	80000c15 	stw	zero,48(r16)
   82c3c:	80c00417 	ldw	r3,16(r16)
   82c40:	00bff6c4 	movi	r2,-37
   82c44:	1108703a 	and	r4,r2,r4
   82c48:	80000115 	stw	zero,4(r16)
   82c4c:	80c00015 	stw	r3,0(r16)
   82c50:	003fd506 	br	82ba8 <__alt_data_end+0xfffb70b8>
   82c54:	00800244 	movi	r2,9
   82c58:	88800015 	stw	r2,0(r17)
   82c5c:	20801014 	ori	r2,r4,64
   82c60:	8080030d 	sth	r2,12(r16)
   82c64:	00bfffc4 	movi	r2,-1
   82c68:	003fc506 	br	82b80 <__alt_data_end+0xfffb7090>

00082c6c <quorem>:
   82c6c:	defff704 	addi	sp,sp,-36
   82c70:	dc800215 	stw	r18,8(sp)
   82c74:	20800417 	ldw	r2,16(r4)
   82c78:	2c800417 	ldw	r18,16(r5)
   82c7c:	dfc00815 	stw	ra,32(sp)
   82c80:	ddc00715 	stw	r23,28(sp)
   82c84:	dd800615 	stw	r22,24(sp)
   82c88:	dd400515 	stw	r21,20(sp)
   82c8c:	dd000415 	stw	r20,16(sp)
   82c90:	dcc00315 	stw	r19,12(sp)
   82c94:	dc400115 	stw	r17,4(sp)
   82c98:	dc000015 	stw	r16,0(sp)
   82c9c:	14807116 	blt	r2,r18,82e64 <quorem+0x1f8>
   82ca0:	94bfffc4 	addi	r18,r18,-1
   82ca4:	94ad883a 	add	r22,r18,r18
   82ca8:	b5ad883a 	add	r22,r22,r22
   82cac:	2c400504 	addi	r17,r5,20
   82cb0:	8da9883a 	add	r20,r17,r22
   82cb4:	25400504 	addi	r21,r4,20
   82cb8:	282f883a 	mov	r23,r5
   82cbc:	adad883a 	add	r22,r21,r22
   82cc0:	a1400017 	ldw	r5,0(r20)
   82cc4:	2021883a 	mov	r16,r4
   82cc8:	b1000017 	ldw	r4,0(r22)
   82ccc:	29400044 	addi	r5,r5,1
   82cd0:	008a86c0 	call	8a86c <__udivsi3>
   82cd4:	1027883a 	mov	r19,r2
   82cd8:	10002c26 	beq	r2,zero,82d8c <quorem+0x120>
   82cdc:	a813883a 	mov	r9,r21
   82ce0:	880b883a 	mov	r5,r17
   82ce4:	0009883a 	mov	r4,zero
   82ce8:	000d883a 	mov	r6,zero
   82cec:	2a000017 	ldw	r8,0(r5)
   82cf0:	49c00017 	ldw	r7,0(r9)
   82cf4:	29400104 	addi	r5,r5,4
   82cf8:	40bfffcc 	andi	r2,r8,65535
   82cfc:	14c5383a 	mul	r2,r2,r19
   82d00:	4010d43a 	srli	r8,r8,16
   82d04:	38ffffcc 	andi	r3,r7,65535
   82d08:	1105883a 	add	r2,r2,r4
   82d0c:	1008d43a 	srli	r4,r2,16
   82d10:	44d1383a 	mul	r8,r8,r19
   82d14:	198d883a 	add	r6,r3,r6
   82d18:	10ffffcc 	andi	r3,r2,65535
   82d1c:	30c7c83a 	sub	r3,r6,r3
   82d20:	380ed43a 	srli	r7,r7,16
   82d24:	4105883a 	add	r2,r8,r4
   82d28:	180dd43a 	srai	r6,r3,16
   82d2c:	113fffcc 	andi	r4,r2,65535
   82d30:	390fc83a 	sub	r7,r7,r4
   82d34:	398d883a 	add	r6,r7,r6
   82d38:	300e943a 	slli	r7,r6,16
   82d3c:	18ffffcc 	andi	r3,r3,65535
   82d40:	1008d43a 	srli	r4,r2,16
   82d44:	38ceb03a 	or	r7,r7,r3
   82d48:	49c00015 	stw	r7,0(r9)
   82d4c:	300dd43a 	srai	r6,r6,16
   82d50:	4a400104 	addi	r9,r9,4
   82d54:	a17fe52e 	bgeu	r20,r5,82cec <__alt_data_end+0xfffb71fc>
   82d58:	b0800017 	ldw	r2,0(r22)
   82d5c:	10000b1e 	bne	r2,zero,82d8c <quorem+0x120>
   82d60:	b0bfff04 	addi	r2,r22,-4
   82d64:	a880082e 	bgeu	r21,r2,82d88 <quorem+0x11c>
   82d68:	b0ffff17 	ldw	r3,-4(r22)
   82d6c:	18000326 	beq	r3,zero,82d7c <quorem+0x110>
   82d70:	00000506 	br	82d88 <quorem+0x11c>
   82d74:	10c00017 	ldw	r3,0(r2)
   82d78:	1800031e 	bne	r3,zero,82d88 <quorem+0x11c>
   82d7c:	10bfff04 	addi	r2,r2,-4
   82d80:	94bfffc4 	addi	r18,r18,-1
   82d84:	a8bffb36 	bltu	r21,r2,82d74 <__alt_data_end+0xfffb7284>
   82d88:	84800415 	stw	r18,16(r16)
   82d8c:	b80b883a 	mov	r5,r23
   82d90:	8009883a 	mov	r4,r16
   82d94:	0086dd00 	call	86dd0 <__mcmp>
   82d98:	10002616 	blt	r2,zero,82e34 <quorem+0x1c8>
   82d9c:	9cc00044 	addi	r19,r19,1
   82da0:	a805883a 	mov	r2,r21
   82da4:	000b883a 	mov	r5,zero
   82da8:	11000017 	ldw	r4,0(r2)
   82dac:	89800017 	ldw	r6,0(r17)
   82db0:	10800104 	addi	r2,r2,4
   82db4:	20ffffcc 	andi	r3,r4,65535
   82db8:	194b883a 	add	r5,r3,r5
   82dbc:	30ffffcc 	andi	r3,r6,65535
   82dc0:	28c7c83a 	sub	r3,r5,r3
   82dc4:	300cd43a 	srli	r6,r6,16
   82dc8:	2008d43a 	srli	r4,r4,16
   82dcc:	180bd43a 	srai	r5,r3,16
   82dd0:	18ffffcc 	andi	r3,r3,65535
   82dd4:	2189c83a 	sub	r4,r4,r6
   82dd8:	2149883a 	add	r4,r4,r5
   82ddc:	200c943a 	slli	r6,r4,16
   82de0:	8c400104 	addi	r17,r17,4
   82de4:	200bd43a 	srai	r5,r4,16
   82de8:	30c6b03a 	or	r3,r6,r3
   82dec:	10ffff15 	stw	r3,-4(r2)
   82df0:	a47fed2e 	bgeu	r20,r17,82da8 <__alt_data_end+0xfffb72b8>
   82df4:	9485883a 	add	r2,r18,r18
   82df8:	1085883a 	add	r2,r2,r2
   82dfc:	a887883a 	add	r3,r21,r2
   82e00:	18800017 	ldw	r2,0(r3)
   82e04:	10000b1e 	bne	r2,zero,82e34 <quorem+0x1c8>
   82e08:	18bfff04 	addi	r2,r3,-4
   82e0c:	a880082e 	bgeu	r21,r2,82e30 <quorem+0x1c4>
   82e10:	18ffff17 	ldw	r3,-4(r3)
   82e14:	18000326 	beq	r3,zero,82e24 <quorem+0x1b8>
   82e18:	00000506 	br	82e30 <quorem+0x1c4>
   82e1c:	10c00017 	ldw	r3,0(r2)
   82e20:	1800031e 	bne	r3,zero,82e30 <quorem+0x1c4>
   82e24:	10bfff04 	addi	r2,r2,-4
   82e28:	94bfffc4 	addi	r18,r18,-1
   82e2c:	a8bffb36 	bltu	r21,r2,82e1c <__alt_data_end+0xfffb732c>
   82e30:	84800415 	stw	r18,16(r16)
   82e34:	9805883a 	mov	r2,r19
   82e38:	dfc00817 	ldw	ra,32(sp)
   82e3c:	ddc00717 	ldw	r23,28(sp)
   82e40:	dd800617 	ldw	r22,24(sp)
   82e44:	dd400517 	ldw	r21,20(sp)
   82e48:	dd000417 	ldw	r20,16(sp)
   82e4c:	dcc00317 	ldw	r19,12(sp)
   82e50:	dc800217 	ldw	r18,8(sp)
   82e54:	dc400117 	ldw	r17,4(sp)
   82e58:	dc000017 	ldw	r16,0(sp)
   82e5c:	dec00904 	addi	sp,sp,36
   82e60:	f800283a 	ret
   82e64:	0005883a 	mov	r2,zero
   82e68:	003ff306 	br	82e38 <__alt_data_end+0xfffb7348>

00082e6c <_dtoa_r>:
   82e6c:	20801017 	ldw	r2,64(r4)
   82e70:	deffde04 	addi	sp,sp,-136
   82e74:	df002015 	stw	fp,128(sp)
   82e78:	dcc01b15 	stw	r19,108(sp)
   82e7c:	dc801a15 	stw	r18,104(sp)
   82e80:	dc401915 	stw	r17,100(sp)
   82e84:	dc001815 	stw	r16,96(sp)
   82e88:	dfc02115 	stw	ra,132(sp)
   82e8c:	ddc01f15 	stw	r23,124(sp)
   82e90:	dd801e15 	stw	r22,120(sp)
   82e94:	dd401d15 	stw	r21,116(sp)
   82e98:	dd001c15 	stw	r20,112(sp)
   82e9c:	d9c00315 	stw	r7,12(sp)
   82ea0:	2039883a 	mov	fp,r4
   82ea4:	3023883a 	mov	r17,r6
   82ea8:	2825883a 	mov	r18,r5
   82eac:	dc002417 	ldw	r16,144(sp)
   82eb0:	3027883a 	mov	r19,r6
   82eb4:	10000826 	beq	r2,zero,82ed8 <_dtoa_r+0x6c>
   82eb8:	21801117 	ldw	r6,68(r4)
   82ebc:	00c00044 	movi	r3,1
   82ec0:	100b883a 	mov	r5,r2
   82ec4:	1986983a 	sll	r3,r3,r6
   82ec8:	11800115 	stw	r6,4(r2)
   82ecc:	10c00215 	stw	r3,8(r2)
   82ed0:	00865b00 	call	865b0 <_Bfree>
   82ed4:	e0001015 	stw	zero,64(fp)
   82ed8:	88002e16 	blt	r17,zero,82f94 <_dtoa_r+0x128>
   82edc:	80000015 	stw	zero,0(r16)
   82ee0:	889ffc2c 	andhi	r2,r17,32752
   82ee4:	00dffc34 	movhi	r3,32752
   82ee8:	10c01c26 	beq	r2,r3,82f5c <_dtoa_r+0xf0>
   82eec:	000d883a 	mov	r6,zero
   82ef0:	000f883a 	mov	r7,zero
   82ef4:	9009883a 	mov	r4,r18
   82ef8:	980b883a 	mov	r5,r19
   82efc:	008babc0 	call	8babc <__eqdf2>
   82f00:	10002b1e 	bne	r2,zero,82fb0 <_dtoa_r+0x144>
   82f04:	d9c02317 	ldw	r7,140(sp)
   82f08:	00800044 	movi	r2,1
   82f0c:	38800015 	stw	r2,0(r7)
   82f10:	d8802517 	ldw	r2,148(sp)
   82f14:	10019e26 	beq	r2,zero,83590 <_dtoa_r+0x724>
   82f18:	d8c02517 	ldw	r3,148(sp)
   82f1c:	00800274 	movhi	r2,9
   82f20:	10be4f44 	addi	r2,r2,-1731
   82f24:	18800015 	stw	r2,0(r3)
   82f28:	10bfffc4 	addi	r2,r2,-1
   82f2c:	dfc02117 	ldw	ra,132(sp)
   82f30:	df002017 	ldw	fp,128(sp)
   82f34:	ddc01f17 	ldw	r23,124(sp)
   82f38:	dd801e17 	ldw	r22,120(sp)
   82f3c:	dd401d17 	ldw	r21,116(sp)
   82f40:	dd001c17 	ldw	r20,112(sp)
   82f44:	dcc01b17 	ldw	r19,108(sp)
   82f48:	dc801a17 	ldw	r18,104(sp)
   82f4c:	dc401917 	ldw	r17,100(sp)
   82f50:	dc001817 	ldw	r16,96(sp)
   82f54:	dec02204 	addi	sp,sp,136
   82f58:	f800283a 	ret
   82f5c:	d8c02317 	ldw	r3,140(sp)
   82f60:	0089c3c4 	movi	r2,9999
   82f64:	18800015 	stw	r2,0(r3)
   82f68:	90017726 	beq	r18,zero,83548 <_dtoa_r+0x6dc>
   82f6c:	00800274 	movhi	r2,9
   82f70:	10be5b04 	addi	r2,r2,-1684
   82f74:	d9002517 	ldw	r4,148(sp)
   82f78:	203fec26 	beq	r4,zero,82f2c <__alt_data_end+0xfffb743c>
   82f7c:	10c000c7 	ldb	r3,3(r2)
   82f80:	1801781e 	bne	r3,zero,83564 <_dtoa_r+0x6f8>
   82f84:	10c000c4 	addi	r3,r2,3
   82f88:	d9802517 	ldw	r6,148(sp)
   82f8c:	30c00015 	stw	r3,0(r6)
   82f90:	003fe606 	br	82f2c <__alt_data_end+0xfffb743c>
   82f94:	04e00034 	movhi	r19,32768
   82f98:	9cffffc4 	addi	r19,r19,-1
   82f9c:	00800044 	movi	r2,1
   82fa0:	8ce6703a 	and	r19,r17,r19
   82fa4:	80800015 	stw	r2,0(r16)
   82fa8:	9823883a 	mov	r17,r19
   82fac:	003fcc06 	br	82ee0 <__alt_data_end+0xfffb73f0>
   82fb0:	d8800204 	addi	r2,sp,8
   82fb4:	d8800015 	stw	r2,0(sp)
   82fb8:	d9c00104 	addi	r7,sp,4
   82fbc:	900b883a 	mov	r5,r18
   82fc0:	980d883a 	mov	r6,r19
   82fc4:	e009883a 	mov	r4,fp
   82fc8:	8820d53a 	srli	r16,r17,20
   82fcc:	008719c0 	call	8719c <__d2b>
   82fd0:	d8800915 	stw	r2,36(sp)
   82fd4:	8001651e 	bne	r16,zero,8356c <_dtoa_r+0x700>
   82fd8:	dd800217 	ldw	r22,8(sp)
   82fdc:	dc000117 	ldw	r16,4(sp)
   82fe0:	00800804 	movi	r2,32
   82fe4:	b421883a 	add	r16,r22,r16
   82fe8:	80c10c84 	addi	r3,r16,1074
   82fec:	10c2d10e 	bge	r2,r3,83b34 <_dtoa_r+0xcc8>
   82ff0:	00801004 	movi	r2,64
   82ff4:	81010484 	addi	r4,r16,1042
   82ff8:	10c7c83a 	sub	r3,r2,r3
   82ffc:	9108d83a 	srl	r4,r18,r4
   83000:	88e2983a 	sll	r17,r17,r3
   83004:	2448b03a 	or	r4,r4,r17
   83008:	008ce840 	call	8ce84 <__floatunsidf>
   8300c:	017f8434 	movhi	r5,65040
   83010:	01800044 	movi	r6,1
   83014:	1009883a 	mov	r4,r2
   83018:	194b883a 	add	r5,r3,r5
   8301c:	843fffc4 	addi	r16,r16,-1
   83020:	d9801115 	stw	r6,68(sp)
   83024:	000d883a 	mov	r6,zero
   83028:	01cffe34 	movhi	r7,16376
   8302c:	008c42c0 	call	8c42c <__subdf3>
   83030:	0198dbf4 	movhi	r6,25455
   83034:	01cff4f4 	movhi	r7,16339
   83038:	3190d844 	addi	r6,r6,17249
   8303c:	39e1e9c4 	addi	r7,r7,-30809
   83040:	1009883a 	mov	r4,r2
   83044:	180b883a 	mov	r5,r3
   83048:	008bd140 	call	8bd14 <__muldf3>
   8304c:	01a2d874 	movhi	r6,35681
   83050:	01cff1f4 	movhi	r7,16327
   83054:	31b22cc4 	addi	r6,r6,-14157
   83058:	39e28a04 	addi	r7,r7,-30168
   8305c:	180b883a 	mov	r5,r3
   83060:	1009883a 	mov	r4,r2
   83064:	008a9280 	call	8a928 <__adddf3>
   83068:	8009883a 	mov	r4,r16
   8306c:	1029883a 	mov	r20,r2
   83070:	1823883a 	mov	r17,r3
   83074:	008cda80 	call	8cda8 <__floatsidf>
   83078:	019427f4 	movhi	r6,20639
   8307c:	01cff4f4 	movhi	r7,16339
   83080:	319e7ec4 	addi	r6,r6,31227
   83084:	39d104c4 	addi	r7,r7,17427
   83088:	1009883a 	mov	r4,r2
   8308c:	180b883a 	mov	r5,r3
   83090:	008bd140 	call	8bd14 <__muldf3>
   83094:	100d883a 	mov	r6,r2
   83098:	180f883a 	mov	r7,r3
   8309c:	a009883a 	mov	r4,r20
   830a0:	880b883a 	mov	r5,r17
   830a4:	008a9280 	call	8a928 <__adddf3>
   830a8:	1009883a 	mov	r4,r2
   830ac:	180b883a 	mov	r5,r3
   830b0:	1029883a 	mov	r20,r2
   830b4:	1823883a 	mov	r17,r3
   830b8:	008cd280 	call	8cd28 <__fixdfsi>
   830bc:	000d883a 	mov	r6,zero
   830c0:	000f883a 	mov	r7,zero
   830c4:	a009883a 	mov	r4,r20
   830c8:	880b883a 	mov	r5,r17
   830cc:	d8800515 	stw	r2,20(sp)
   830d0:	008bc200 	call	8bc20 <__ledf2>
   830d4:	10028716 	blt	r2,zero,83af4 <_dtoa_r+0xc88>
   830d8:	d8c00517 	ldw	r3,20(sp)
   830dc:	00800584 	movi	r2,22
   830e0:	10c27536 	bltu	r2,r3,83ab8 <_dtoa_r+0xc4c>
   830e4:	180490fa 	slli	r2,r3,3
   830e8:	00c00274 	movhi	r3,9
   830ec:	18fe7704 	addi	r3,r3,-1572
   830f0:	1885883a 	add	r2,r3,r2
   830f4:	11000017 	ldw	r4,0(r2)
   830f8:	11400117 	ldw	r5,4(r2)
   830fc:	900d883a 	mov	r6,r18
   83100:	980f883a 	mov	r7,r19
   83104:	008bb440 	call	8bb44 <__gedf2>
   83108:	00828d0e 	bge	zero,r2,83b40 <_dtoa_r+0xcd4>
   8310c:	d9000517 	ldw	r4,20(sp)
   83110:	d8000e15 	stw	zero,56(sp)
   83114:	213fffc4 	addi	r4,r4,-1
   83118:	d9000515 	stw	r4,20(sp)
   8311c:	b42dc83a 	sub	r22,r22,r16
   83120:	b5bfffc4 	addi	r22,r22,-1
   83124:	b0026f16 	blt	r22,zero,83ae4 <_dtoa_r+0xc78>
   83128:	d8000815 	stw	zero,32(sp)
   8312c:	d9c00517 	ldw	r7,20(sp)
   83130:	38026416 	blt	r7,zero,83ac4 <_dtoa_r+0xc58>
   83134:	b1ed883a 	add	r22,r22,r7
   83138:	d9c00d15 	stw	r7,52(sp)
   8313c:	d8000a15 	stw	zero,40(sp)
   83140:	d9800317 	ldw	r6,12(sp)
   83144:	00800244 	movi	r2,9
   83148:	11811436 	bltu	r2,r6,8359c <_dtoa_r+0x730>
   8314c:	00800144 	movi	r2,5
   83150:	1184e10e 	bge	r2,r6,844d8 <_dtoa_r+0x166c>
   83154:	31bfff04 	addi	r6,r6,-4
   83158:	d9800315 	stw	r6,12(sp)
   8315c:	0023883a 	mov	r17,zero
   83160:	d9800317 	ldw	r6,12(sp)
   83164:	008000c4 	movi	r2,3
   83168:	30836726 	beq	r6,r2,83f08 <_dtoa_r+0x109c>
   8316c:	1183410e 	bge	r2,r6,83e74 <_dtoa_r+0x1008>
   83170:	d9c00317 	ldw	r7,12(sp)
   83174:	00800104 	movi	r2,4
   83178:	38827c26 	beq	r7,r2,83b6c <_dtoa_r+0xd00>
   8317c:	00800144 	movi	r2,5
   83180:	3884c41e 	bne	r7,r2,84494 <_dtoa_r+0x1628>
   83184:	00800044 	movi	r2,1
   83188:	d8800b15 	stw	r2,44(sp)
   8318c:	d8c00517 	ldw	r3,20(sp)
   83190:	d9002217 	ldw	r4,136(sp)
   83194:	1907883a 	add	r3,r3,r4
   83198:	19800044 	addi	r6,r3,1
   8319c:	d8c00c15 	stw	r3,48(sp)
   831a0:	d9800615 	stw	r6,24(sp)
   831a4:	0183a40e 	bge	zero,r6,84038 <_dtoa_r+0x11cc>
   831a8:	d9800617 	ldw	r6,24(sp)
   831ac:	3021883a 	mov	r16,r6
   831b0:	e0001115 	stw	zero,68(fp)
   831b4:	008005c4 	movi	r2,23
   831b8:	1184c92e 	bgeu	r2,r6,844e0 <_dtoa_r+0x1674>
   831bc:	00c00044 	movi	r3,1
   831c0:	00800104 	movi	r2,4
   831c4:	1085883a 	add	r2,r2,r2
   831c8:	11000504 	addi	r4,r2,20
   831cc:	180b883a 	mov	r5,r3
   831d0:	18c00044 	addi	r3,r3,1
   831d4:	313ffb2e 	bgeu	r6,r4,831c4 <__alt_data_end+0xfffb76d4>
   831d8:	e1401115 	stw	r5,68(fp)
   831dc:	e009883a 	mov	r4,fp
   831e0:	00865080 	call	86508 <_Balloc>
   831e4:	d8800715 	stw	r2,28(sp)
   831e8:	e0801015 	stw	r2,64(fp)
   831ec:	00800384 	movi	r2,14
   831f0:	1400f736 	bltu	r2,r16,835d0 <_dtoa_r+0x764>
   831f4:	8800f626 	beq	r17,zero,835d0 <_dtoa_r+0x764>
   831f8:	d9c00517 	ldw	r7,20(sp)
   831fc:	01c39a0e 	bge	zero,r7,84068 <_dtoa_r+0x11fc>
   83200:	388003cc 	andi	r2,r7,15
   83204:	100490fa 	slli	r2,r2,3
   83208:	382bd13a 	srai	r21,r7,4
   8320c:	00c00274 	movhi	r3,9
   83210:	18fe7704 	addi	r3,r3,-1572
   83214:	1885883a 	add	r2,r3,r2
   83218:	a8c0040c 	andi	r3,r21,16
   8321c:	12400017 	ldw	r9,0(r2)
   83220:	12000117 	ldw	r8,4(r2)
   83224:	18037926 	beq	r3,zero,8400c <_dtoa_r+0x11a0>
   83228:	00800274 	movhi	r2,9
   8322c:	10be6d04 	addi	r2,r2,-1612
   83230:	11800817 	ldw	r6,32(r2)
   83234:	11c00917 	ldw	r7,36(r2)
   83238:	9009883a 	mov	r4,r18
   8323c:	980b883a 	mov	r5,r19
   83240:	da001715 	stw	r8,92(sp)
   83244:	da401615 	stw	r9,88(sp)
   83248:	008b1d40 	call	8b1d4 <__divdf3>
   8324c:	da001717 	ldw	r8,92(sp)
   83250:	da401617 	ldw	r9,88(sp)
   83254:	ad4003cc 	andi	r21,r21,15
   83258:	040000c4 	movi	r16,3
   8325c:	1023883a 	mov	r17,r2
   83260:	1829883a 	mov	r20,r3
   83264:	a8001126 	beq	r21,zero,832ac <_dtoa_r+0x440>
   83268:	05c00274 	movhi	r23,9
   8326c:	bdfe6d04 	addi	r23,r23,-1612
   83270:	4805883a 	mov	r2,r9
   83274:	4007883a 	mov	r3,r8
   83278:	a980004c 	andi	r6,r21,1
   8327c:	1009883a 	mov	r4,r2
   83280:	a82bd07a 	srai	r21,r21,1
   83284:	180b883a 	mov	r5,r3
   83288:	30000426 	beq	r6,zero,8329c <_dtoa_r+0x430>
   8328c:	b9800017 	ldw	r6,0(r23)
   83290:	b9c00117 	ldw	r7,4(r23)
   83294:	84000044 	addi	r16,r16,1
   83298:	008bd140 	call	8bd14 <__muldf3>
   8329c:	bdc00204 	addi	r23,r23,8
   832a0:	a83ff51e 	bne	r21,zero,83278 <__alt_data_end+0xfffb7788>
   832a4:	1013883a 	mov	r9,r2
   832a8:	1811883a 	mov	r8,r3
   832ac:	480d883a 	mov	r6,r9
   832b0:	400f883a 	mov	r7,r8
   832b4:	8809883a 	mov	r4,r17
   832b8:	a00b883a 	mov	r5,r20
   832bc:	008b1d40 	call	8b1d4 <__divdf3>
   832c0:	d8800f15 	stw	r2,60(sp)
   832c4:	d8c01015 	stw	r3,64(sp)
   832c8:	d8c00e17 	ldw	r3,56(sp)
   832cc:	18000626 	beq	r3,zero,832e8 <_dtoa_r+0x47c>
   832d0:	d9000f17 	ldw	r4,60(sp)
   832d4:	d9401017 	ldw	r5,64(sp)
   832d8:	000d883a 	mov	r6,zero
   832dc:	01cffc34 	movhi	r7,16368
   832e0:	008bc200 	call	8bc20 <__ledf2>
   832e4:	10040b16 	blt	r2,zero,84314 <_dtoa_r+0x14a8>
   832e8:	8009883a 	mov	r4,r16
   832ec:	008cda80 	call	8cda8 <__floatsidf>
   832f0:	d9800f17 	ldw	r6,60(sp)
   832f4:	d9c01017 	ldw	r7,64(sp)
   832f8:	1009883a 	mov	r4,r2
   832fc:	180b883a 	mov	r5,r3
   83300:	008bd140 	call	8bd14 <__muldf3>
   83304:	000d883a 	mov	r6,zero
   83308:	01d00734 	movhi	r7,16412
   8330c:	1009883a 	mov	r4,r2
   83310:	180b883a 	mov	r5,r3
   83314:	008a9280 	call	8a928 <__adddf3>
   83318:	1021883a 	mov	r16,r2
   8331c:	d8800617 	ldw	r2,24(sp)
   83320:	047f3034 	movhi	r17,64704
   83324:	1c63883a 	add	r17,r3,r17
   83328:	10031826 	beq	r2,zero,83f8c <_dtoa_r+0x1120>
   8332c:	d8c00517 	ldw	r3,20(sp)
   83330:	db000617 	ldw	r12,24(sp)
   83334:	d8c01315 	stw	r3,76(sp)
   83338:	d9000b17 	ldw	r4,44(sp)
   8333c:	20038f26 	beq	r4,zero,8417c <_dtoa_r+0x1310>
   83340:	60bfffc4 	addi	r2,r12,-1
   83344:	100490fa 	slli	r2,r2,3
   83348:	00c00274 	movhi	r3,9
   8334c:	18fe7704 	addi	r3,r3,-1572
   83350:	1885883a 	add	r2,r3,r2
   83354:	11800017 	ldw	r6,0(r2)
   83358:	11c00117 	ldw	r7,4(r2)
   8335c:	d8800717 	ldw	r2,28(sp)
   83360:	0009883a 	mov	r4,zero
   83364:	014ff834 	movhi	r5,16352
   83368:	db001615 	stw	r12,88(sp)
   8336c:	15c00044 	addi	r23,r2,1
   83370:	008b1d40 	call	8b1d4 <__divdf3>
   83374:	800d883a 	mov	r6,r16
   83378:	880f883a 	mov	r7,r17
   8337c:	1009883a 	mov	r4,r2
   83380:	180b883a 	mov	r5,r3
   83384:	008c42c0 	call	8c42c <__subdf3>
   83388:	d9401017 	ldw	r5,64(sp)
   8338c:	d9000f17 	ldw	r4,60(sp)
   83390:	102b883a 	mov	r21,r2
   83394:	d8c01215 	stw	r3,72(sp)
   83398:	008cd280 	call	8cd28 <__fixdfsi>
   8339c:	1009883a 	mov	r4,r2
   833a0:	1029883a 	mov	r20,r2
   833a4:	008cda80 	call	8cda8 <__floatsidf>
   833a8:	d9000f17 	ldw	r4,60(sp)
   833ac:	d9401017 	ldw	r5,64(sp)
   833b0:	100d883a 	mov	r6,r2
   833b4:	180f883a 	mov	r7,r3
   833b8:	008c42c0 	call	8c42c <__subdf3>
   833bc:	1823883a 	mov	r17,r3
   833c0:	d8c00717 	ldw	r3,28(sp)
   833c4:	d9401217 	ldw	r5,72(sp)
   833c8:	a2000c04 	addi	r8,r20,48
   833cc:	1021883a 	mov	r16,r2
   833d0:	1a000005 	stb	r8,0(r3)
   833d4:	800d883a 	mov	r6,r16
   833d8:	880f883a 	mov	r7,r17
   833dc:	a809883a 	mov	r4,r21
   833e0:	4029883a 	mov	r20,r8
   833e4:	008bb440 	call	8bb44 <__gedf2>
   833e8:	00841d16 	blt	zero,r2,84460 <_dtoa_r+0x15f4>
   833ec:	800d883a 	mov	r6,r16
   833f0:	880f883a 	mov	r7,r17
   833f4:	0009883a 	mov	r4,zero
   833f8:	014ffc34 	movhi	r5,16368
   833fc:	008c42c0 	call	8c42c <__subdf3>
   83400:	d9401217 	ldw	r5,72(sp)
   83404:	100d883a 	mov	r6,r2
   83408:	180f883a 	mov	r7,r3
   8340c:	a809883a 	mov	r4,r21
   83410:	008bb440 	call	8bb44 <__gedf2>
   83414:	db001617 	ldw	r12,88(sp)
   83418:	00840e16 	blt	zero,r2,84454 <_dtoa_r+0x15e8>
   8341c:	00800044 	movi	r2,1
   83420:	13006b0e 	bge	r2,r12,835d0 <_dtoa_r+0x764>
   83424:	d9000717 	ldw	r4,28(sp)
   83428:	dd800f15 	stw	r22,60(sp)
   8342c:	dcc01015 	stw	r19,64(sp)
   83430:	2319883a 	add	r12,r4,r12
   83434:	dcc01217 	ldw	r19,72(sp)
   83438:	602d883a 	mov	r22,r12
   8343c:	dc801215 	stw	r18,72(sp)
   83440:	b825883a 	mov	r18,r23
   83444:	00000906 	br	8346c <_dtoa_r+0x600>
   83448:	008c42c0 	call	8c42c <__subdf3>
   8344c:	a80d883a 	mov	r6,r21
   83450:	980f883a 	mov	r7,r19
   83454:	1009883a 	mov	r4,r2
   83458:	180b883a 	mov	r5,r3
   8345c:	008bc200 	call	8bc20 <__ledf2>
   83460:	1003e816 	blt	r2,zero,84404 <_dtoa_r+0x1598>
   83464:	b825883a 	mov	r18,r23
   83468:	bd83e926 	beq	r23,r22,84410 <_dtoa_r+0x15a4>
   8346c:	a809883a 	mov	r4,r21
   83470:	980b883a 	mov	r5,r19
   83474:	000d883a 	mov	r6,zero
   83478:	01d00934 	movhi	r7,16420
   8347c:	008bd140 	call	8bd14 <__muldf3>
   83480:	000d883a 	mov	r6,zero
   83484:	01d00934 	movhi	r7,16420
   83488:	8009883a 	mov	r4,r16
   8348c:	880b883a 	mov	r5,r17
   83490:	102b883a 	mov	r21,r2
   83494:	1827883a 	mov	r19,r3
   83498:	008bd140 	call	8bd14 <__muldf3>
   8349c:	180b883a 	mov	r5,r3
   834a0:	1009883a 	mov	r4,r2
   834a4:	1821883a 	mov	r16,r3
   834a8:	1023883a 	mov	r17,r2
   834ac:	008cd280 	call	8cd28 <__fixdfsi>
   834b0:	1009883a 	mov	r4,r2
   834b4:	1029883a 	mov	r20,r2
   834b8:	008cda80 	call	8cda8 <__floatsidf>
   834bc:	8809883a 	mov	r4,r17
   834c0:	800b883a 	mov	r5,r16
   834c4:	100d883a 	mov	r6,r2
   834c8:	180f883a 	mov	r7,r3
   834cc:	008c42c0 	call	8c42c <__subdf3>
   834d0:	a5000c04 	addi	r20,r20,48
   834d4:	a80d883a 	mov	r6,r21
   834d8:	980f883a 	mov	r7,r19
   834dc:	1009883a 	mov	r4,r2
   834e0:	180b883a 	mov	r5,r3
   834e4:	95000005 	stb	r20,0(r18)
   834e8:	1021883a 	mov	r16,r2
   834ec:	1823883a 	mov	r17,r3
   834f0:	008bc200 	call	8bc20 <__ledf2>
   834f4:	bdc00044 	addi	r23,r23,1
   834f8:	800d883a 	mov	r6,r16
   834fc:	880f883a 	mov	r7,r17
   83500:	0009883a 	mov	r4,zero
   83504:	014ffc34 	movhi	r5,16368
   83508:	103fcf0e 	bge	r2,zero,83448 <__alt_data_end+0xfffb7958>
   8350c:	d8c01317 	ldw	r3,76(sp)
   83510:	d8c00515 	stw	r3,20(sp)
   83514:	d9400917 	ldw	r5,36(sp)
   83518:	e009883a 	mov	r4,fp
   8351c:	00865b00 	call	865b0 <_Bfree>
   83520:	d9000517 	ldw	r4,20(sp)
   83524:	d9802317 	ldw	r6,140(sp)
   83528:	d9c02517 	ldw	r7,148(sp)
   8352c:	b8000005 	stb	zero,0(r23)
   83530:	20800044 	addi	r2,r4,1
   83534:	30800015 	stw	r2,0(r6)
   83538:	3802aa26 	beq	r7,zero,83fe4 <_dtoa_r+0x1178>
   8353c:	3dc00015 	stw	r23,0(r7)
   83540:	d8800717 	ldw	r2,28(sp)
   83544:	003e7906 	br	82f2c <__alt_data_end+0xfffb743c>
   83548:	00800434 	movhi	r2,16
   8354c:	10bfffc4 	addi	r2,r2,-1
   83550:	88a2703a 	and	r17,r17,r2
   83554:	883e851e 	bne	r17,zero,82f6c <__alt_data_end+0xfffb747c>
   83558:	00800274 	movhi	r2,9
   8355c:	10be5804 	addi	r2,r2,-1696
   83560:	003e8406 	br	82f74 <__alt_data_end+0xfffb7484>
   83564:	10c00204 	addi	r3,r2,8
   83568:	003e8706 	br	82f88 <__alt_data_end+0xfffb7498>
   8356c:	01400434 	movhi	r5,16
   83570:	297fffc4 	addi	r5,r5,-1
   83574:	994a703a 	and	r5,r19,r5
   83578:	9009883a 	mov	r4,r18
   8357c:	843f0044 	addi	r16,r16,-1023
   83580:	294ffc34 	orhi	r5,r5,16368
   83584:	dd800217 	ldw	r22,8(sp)
   83588:	d8001115 	stw	zero,68(sp)
   8358c:	003ea506 	br	83024 <__alt_data_end+0xfffb7534>
   83590:	00800274 	movhi	r2,9
   83594:	10be4f04 	addi	r2,r2,-1732
   83598:	003e6406 	br	82f2c <__alt_data_end+0xfffb743c>
   8359c:	e0001115 	stw	zero,68(fp)
   835a0:	000b883a 	mov	r5,zero
   835a4:	e009883a 	mov	r4,fp
   835a8:	00865080 	call	86508 <_Balloc>
   835ac:	01bfffc4 	movi	r6,-1
   835b0:	01c00044 	movi	r7,1
   835b4:	d8800715 	stw	r2,28(sp)
   835b8:	d9800c15 	stw	r6,48(sp)
   835bc:	e0801015 	stw	r2,64(fp)
   835c0:	d8000315 	stw	zero,12(sp)
   835c4:	d9c00b15 	stw	r7,44(sp)
   835c8:	d9800615 	stw	r6,24(sp)
   835cc:	d8002215 	stw	zero,136(sp)
   835d0:	d8800117 	ldw	r2,4(sp)
   835d4:	10008916 	blt	r2,zero,837fc <_dtoa_r+0x990>
   835d8:	d9000517 	ldw	r4,20(sp)
   835dc:	00c00384 	movi	r3,14
   835e0:	19008616 	blt	r3,r4,837fc <_dtoa_r+0x990>
   835e4:	200490fa 	slli	r2,r4,3
   835e8:	00c00274 	movhi	r3,9
   835ec:	d9802217 	ldw	r6,136(sp)
   835f0:	18fe7704 	addi	r3,r3,-1572
   835f4:	1885883a 	add	r2,r3,r2
   835f8:	14000017 	ldw	r16,0(r2)
   835fc:	14400117 	ldw	r17,4(r2)
   83600:	30016316 	blt	r6,zero,83b90 <_dtoa_r+0xd24>
   83604:	800d883a 	mov	r6,r16
   83608:	880f883a 	mov	r7,r17
   8360c:	9009883a 	mov	r4,r18
   83610:	980b883a 	mov	r5,r19
   83614:	008b1d40 	call	8b1d4 <__divdf3>
   83618:	180b883a 	mov	r5,r3
   8361c:	1009883a 	mov	r4,r2
   83620:	008cd280 	call	8cd28 <__fixdfsi>
   83624:	1009883a 	mov	r4,r2
   83628:	102b883a 	mov	r21,r2
   8362c:	008cda80 	call	8cda8 <__floatsidf>
   83630:	800d883a 	mov	r6,r16
   83634:	880f883a 	mov	r7,r17
   83638:	1009883a 	mov	r4,r2
   8363c:	180b883a 	mov	r5,r3
   83640:	008bd140 	call	8bd14 <__muldf3>
   83644:	100d883a 	mov	r6,r2
   83648:	180f883a 	mov	r7,r3
   8364c:	9009883a 	mov	r4,r18
   83650:	980b883a 	mov	r5,r19
   83654:	008c42c0 	call	8c42c <__subdf3>
   83658:	d9c00717 	ldw	r7,28(sp)
   8365c:	1009883a 	mov	r4,r2
   83660:	a8800c04 	addi	r2,r21,48
   83664:	38800005 	stb	r2,0(r7)
   83668:	3dc00044 	addi	r23,r7,1
   8366c:	d9c00617 	ldw	r7,24(sp)
   83670:	01800044 	movi	r6,1
   83674:	180b883a 	mov	r5,r3
   83678:	2005883a 	mov	r2,r4
   8367c:	39803826 	beq	r7,r6,83760 <_dtoa_r+0x8f4>
   83680:	000d883a 	mov	r6,zero
   83684:	01d00934 	movhi	r7,16420
   83688:	008bd140 	call	8bd14 <__muldf3>
   8368c:	000d883a 	mov	r6,zero
   83690:	000f883a 	mov	r7,zero
   83694:	1009883a 	mov	r4,r2
   83698:	180b883a 	mov	r5,r3
   8369c:	1025883a 	mov	r18,r2
   836a0:	1827883a 	mov	r19,r3
   836a4:	008babc0 	call	8babc <__eqdf2>
   836a8:	103f9a26 	beq	r2,zero,83514 <__alt_data_end+0xfffb7a24>
   836ac:	d9c00617 	ldw	r7,24(sp)
   836b0:	d8c00717 	ldw	r3,28(sp)
   836b4:	b829883a 	mov	r20,r23
   836b8:	38bfffc4 	addi	r2,r7,-1
   836bc:	18ad883a 	add	r22,r3,r2
   836c0:	00000a06 	br	836ec <_dtoa_r+0x880>
   836c4:	008bd140 	call	8bd14 <__muldf3>
   836c8:	000d883a 	mov	r6,zero
   836cc:	000f883a 	mov	r7,zero
   836d0:	1009883a 	mov	r4,r2
   836d4:	180b883a 	mov	r5,r3
   836d8:	1025883a 	mov	r18,r2
   836dc:	1827883a 	mov	r19,r3
   836e0:	b829883a 	mov	r20,r23
   836e4:	008babc0 	call	8babc <__eqdf2>
   836e8:	103f8a26 	beq	r2,zero,83514 <__alt_data_end+0xfffb7a24>
   836ec:	800d883a 	mov	r6,r16
   836f0:	880f883a 	mov	r7,r17
   836f4:	9009883a 	mov	r4,r18
   836f8:	980b883a 	mov	r5,r19
   836fc:	008b1d40 	call	8b1d4 <__divdf3>
   83700:	180b883a 	mov	r5,r3
   83704:	1009883a 	mov	r4,r2
   83708:	008cd280 	call	8cd28 <__fixdfsi>
   8370c:	1009883a 	mov	r4,r2
   83710:	102b883a 	mov	r21,r2
   83714:	008cda80 	call	8cda8 <__floatsidf>
   83718:	800d883a 	mov	r6,r16
   8371c:	880f883a 	mov	r7,r17
   83720:	1009883a 	mov	r4,r2
   83724:	180b883a 	mov	r5,r3
   83728:	008bd140 	call	8bd14 <__muldf3>
   8372c:	100d883a 	mov	r6,r2
   83730:	180f883a 	mov	r7,r3
   83734:	9009883a 	mov	r4,r18
   83738:	980b883a 	mov	r5,r19
   8373c:	008c42c0 	call	8c42c <__subdf3>
   83740:	aa000c04 	addi	r8,r21,48
   83744:	a2000005 	stb	r8,0(r20)
   83748:	000d883a 	mov	r6,zero
   8374c:	01d00934 	movhi	r7,16420
   83750:	1009883a 	mov	r4,r2
   83754:	180b883a 	mov	r5,r3
   83758:	a5c00044 	addi	r23,r20,1
   8375c:	b53fd91e 	bne	r22,r20,836c4 <__alt_data_end+0xfffb7bd4>
   83760:	100d883a 	mov	r6,r2
   83764:	180f883a 	mov	r7,r3
   83768:	1009883a 	mov	r4,r2
   8376c:	180b883a 	mov	r5,r3
   83770:	008a9280 	call	8a928 <__adddf3>
   83774:	100d883a 	mov	r6,r2
   83778:	180f883a 	mov	r7,r3
   8377c:	8009883a 	mov	r4,r16
   83780:	880b883a 	mov	r5,r17
   83784:	1027883a 	mov	r19,r2
   83788:	1825883a 	mov	r18,r3
   8378c:	008bc200 	call	8bc20 <__ledf2>
   83790:	10000816 	blt	r2,zero,837b4 <_dtoa_r+0x948>
   83794:	980d883a 	mov	r6,r19
   83798:	900f883a 	mov	r7,r18
   8379c:	8009883a 	mov	r4,r16
   837a0:	880b883a 	mov	r5,r17
   837a4:	008babc0 	call	8babc <__eqdf2>
   837a8:	103f5a1e 	bne	r2,zero,83514 <__alt_data_end+0xfffb7a24>
   837ac:	ad40004c 	andi	r21,r21,1
   837b0:	a83f5826 	beq	r21,zero,83514 <__alt_data_end+0xfffb7a24>
   837b4:	bd3fffc3 	ldbu	r20,-1(r23)
   837b8:	b8bfffc4 	addi	r2,r23,-1
   837bc:	1007883a 	mov	r3,r2
   837c0:	01400e44 	movi	r5,57
   837c4:	d9800717 	ldw	r6,28(sp)
   837c8:	00000506 	br	837e0 <_dtoa_r+0x974>
   837cc:	18ffffc4 	addi	r3,r3,-1
   837d0:	11824726 	beq	r2,r6,840f0 <_dtoa_r+0x1284>
   837d4:	1d000003 	ldbu	r20,0(r3)
   837d8:	102f883a 	mov	r23,r2
   837dc:	10bfffc4 	addi	r2,r2,-1
   837e0:	a1003fcc 	andi	r4,r20,255
   837e4:	2100201c 	xori	r4,r4,128
   837e8:	213fe004 	addi	r4,r4,-128
   837ec:	217ff726 	beq	r4,r5,837cc <__alt_data_end+0xfffb7cdc>
   837f0:	a2000044 	addi	r8,r20,1
   837f4:	12000005 	stb	r8,0(r2)
   837f8:	003f4606 	br	83514 <__alt_data_end+0xfffb7a24>
   837fc:	d9000b17 	ldw	r4,44(sp)
   83800:	2000c826 	beq	r4,zero,83b24 <_dtoa_r+0xcb8>
   83804:	d9800317 	ldw	r6,12(sp)
   83808:	00c00044 	movi	r3,1
   8380c:	1980f90e 	bge	r3,r6,83bf4 <_dtoa_r+0xd88>
   83810:	d8800617 	ldw	r2,24(sp)
   83814:	d8c00a17 	ldw	r3,40(sp)
   83818:	157fffc4 	addi	r21,r2,-1
   8381c:	1d41f316 	blt	r3,r21,83fec <_dtoa_r+0x1180>
   83820:	1d6bc83a 	sub	r21,r3,r21
   83824:	d9c00617 	ldw	r7,24(sp)
   83828:	3802aa16 	blt	r7,zero,842d4 <_dtoa_r+0x1468>
   8382c:	dd000817 	ldw	r20,32(sp)
   83830:	d8800617 	ldw	r2,24(sp)
   83834:	d8c00817 	ldw	r3,32(sp)
   83838:	01400044 	movi	r5,1
   8383c:	e009883a 	mov	r4,fp
   83840:	1887883a 	add	r3,r3,r2
   83844:	d8c00815 	stw	r3,32(sp)
   83848:	b0ad883a 	add	r22,r22,r2
   8384c:	00869140 	call	86914 <__i2b>
   83850:	1023883a 	mov	r17,r2
   83854:	a0000826 	beq	r20,zero,83878 <_dtoa_r+0xa0c>
   83858:	0580070e 	bge	zero,r22,83878 <_dtoa_r+0xa0c>
   8385c:	a005883a 	mov	r2,r20
   83860:	b500b916 	blt	r22,r20,83b48 <_dtoa_r+0xcdc>
   83864:	d9000817 	ldw	r4,32(sp)
   83868:	a0a9c83a 	sub	r20,r20,r2
   8386c:	b0adc83a 	sub	r22,r22,r2
   83870:	2089c83a 	sub	r4,r4,r2
   83874:	d9000815 	stw	r4,32(sp)
   83878:	d9800a17 	ldw	r6,40(sp)
   8387c:	0181810e 	bge	zero,r6,83e84 <_dtoa_r+0x1018>
   83880:	d9c00b17 	ldw	r7,44(sp)
   83884:	3800b326 	beq	r7,zero,83b54 <_dtoa_r+0xce8>
   83888:	a800b226 	beq	r21,zero,83b54 <_dtoa_r+0xce8>
   8388c:	880b883a 	mov	r5,r17
   83890:	a80d883a 	mov	r6,r21
   83894:	e009883a 	mov	r4,fp
   83898:	0086b480 	call	86b48 <__pow5mult>
   8389c:	d9800917 	ldw	r6,36(sp)
   838a0:	100b883a 	mov	r5,r2
   838a4:	e009883a 	mov	r4,fp
   838a8:	1023883a 	mov	r17,r2
   838ac:	00869500 	call	86950 <__multiply>
   838b0:	1021883a 	mov	r16,r2
   838b4:	d8800a17 	ldw	r2,40(sp)
   838b8:	d9400917 	ldw	r5,36(sp)
   838bc:	e009883a 	mov	r4,fp
   838c0:	1545c83a 	sub	r2,r2,r21
   838c4:	d8800a15 	stw	r2,40(sp)
   838c8:	00865b00 	call	865b0 <_Bfree>
   838cc:	d8c00a17 	ldw	r3,40(sp)
   838d0:	18009f1e 	bne	r3,zero,83b50 <_dtoa_r+0xce4>
   838d4:	05c00044 	movi	r23,1
   838d8:	e009883a 	mov	r4,fp
   838dc:	b80b883a 	mov	r5,r23
   838e0:	00869140 	call	86914 <__i2b>
   838e4:	d9000d17 	ldw	r4,52(sp)
   838e8:	102b883a 	mov	r21,r2
   838ec:	2000ce26 	beq	r4,zero,83c28 <_dtoa_r+0xdbc>
   838f0:	200d883a 	mov	r6,r4
   838f4:	100b883a 	mov	r5,r2
   838f8:	e009883a 	mov	r4,fp
   838fc:	0086b480 	call	86b48 <__pow5mult>
   83900:	d9800317 	ldw	r6,12(sp)
   83904:	102b883a 	mov	r21,r2
   83908:	b981810e 	bge	r23,r6,83f10 <_dtoa_r+0x10a4>
   8390c:	0027883a 	mov	r19,zero
   83910:	a8800417 	ldw	r2,16(r21)
   83914:	05c00804 	movi	r23,32
   83918:	10800104 	addi	r2,r2,4
   8391c:	1085883a 	add	r2,r2,r2
   83920:	1085883a 	add	r2,r2,r2
   83924:	a885883a 	add	r2,r21,r2
   83928:	11000017 	ldw	r4,0(r2)
   8392c:	00867fc0 	call	867fc <__hi0bits>
   83930:	b885c83a 	sub	r2,r23,r2
   83934:	1585883a 	add	r2,r2,r22
   83938:	108007cc 	andi	r2,r2,31
   8393c:	1000b326 	beq	r2,zero,83c0c <_dtoa_r+0xda0>
   83940:	00c00804 	movi	r3,32
   83944:	1887c83a 	sub	r3,r3,r2
   83948:	01000104 	movi	r4,4
   8394c:	20c2cd0e 	bge	r4,r3,84484 <_dtoa_r+0x1618>
   83950:	00c00704 	movi	r3,28
   83954:	1885c83a 	sub	r2,r3,r2
   83958:	d8c00817 	ldw	r3,32(sp)
   8395c:	a0a9883a 	add	r20,r20,r2
   83960:	b0ad883a 	add	r22,r22,r2
   83964:	1887883a 	add	r3,r3,r2
   83968:	d8c00815 	stw	r3,32(sp)
   8396c:	d9800817 	ldw	r6,32(sp)
   83970:	0180040e 	bge	zero,r6,83984 <_dtoa_r+0xb18>
   83974:	800b883a 	mov	r5,r16
   83978:	e009883a 	mov	r4,fp
   8397c:	0086c880 	call	86c88 <__lshift>
   83980:	1021883a 	mov	r16,r2
   83984:	0580050e 	bge	zero,r22,8399c <_dtoa_r+0xb30>
   83988:	a80b883a 	mov	r5,r21
   8398c:	b00d883a 	mov	r6,r22
   83990:	e009883a 	mov	r4,fp
   83994:	0086c880 	call	86c88 <__lshift>
   83998:	102b883a 	mov	r21,r2
   8399c:	d9c00e17 	ldw	r7,56(sp)
   839a0:	3801211e 	bne	r7,zero,83e28 <_dtoa_r+0xfbc>
   839a4:	d9800617 	ldw	r6,24(sp)
   839a8:	0181380e 	bge	zero,r6,83e8c <_dtoa_r+0x1020>
   839ac:	d8c00b17 	ldw	r3,44(sp)
   839b0:	1800ab1e 	bne	r3,zero,83c60 <_dtoa_r+0xdf4>
   839b4:	dc800717 	ldw	r18,28(sp)
   839b8:	dcc00617 	ldw	r19,24(sp)
   839bc:	9029883a 	mov	r20,r18
   839c0:	00000206 	br	839cc <_dtoa_r+0xb60>
   839c4:	00865d80 	call	865d8 <__multadd>
   839c8:	1021883a 	mov	r16,r2
   839cc:	a80b883a 	mov	r5,r21
   839d0:	8009883a 	mov	r4,r16
   839d4:	0082c6c0 	call	82c6c <quorem>
   839d8:	10800c04 	addi	r2,r2,48
   839dc:	90800005 	stb	r2,0(r18)
   839e0:	94800044 	addi	r18,r18,1
   839e4:	9507c83a 	sub	r3,r18,r20
   839e8:	000f883a 	mov	r7,zero
   839ec:	01800284 	movi	r6,10
   839f0:	800b883a 	mov	r5,r16
   839f4:	e009883a 	mov	r4,fp
   839f8:	1cfff216 	blt	r3,r19,839c4 <__alt_data_end+0xfffb7ed4>
   839fc:	1011883a 	mov	r8,r2
   83a00:	d8800617 	ldw	r2,24(sp)
   83a04:	0082370e 	bge	zero,r2,842e4 <_dtoa_r+0x1478>
   83a08:	d9000717 	ldw	r4,28(sp)
   83a0c:	0025883a 	mov	r18,zero
   83a10:	20af883a 	add	r23,r4,r2
   83a14:	01800044 	movi	r6,1
   83a18:	800b883a 	mov	r5,r16
   83a1c:	e009883a 	mov	r4,fp
   83a20:	da001715 	stw	r8,92(sp)
   83a24:	0086c880 	call	86c88 <__lshift>
   83a28:	a80b883a 	mov	r5,r21
   83a2c:	1009883a 	mov	r4,r2
   83a30:	d8800915 	stw	r2,36(sp)
   83a34:	0086dd00 	call	86dd0 <__mcmp>
   83a38:	da001717 	ldw	r8,92(sp)
   83a3c:	0081800e 	bge	zero,r2,84040 <_dtoa_r+0x11d4>
   83a40:	b93fffc3 	ldbu	r4,-1(r23)
   83a44:	b8bfffc4 	addi	r2,r23,-1
   83a48:	1007883a 	mov	r3,r2
   83a4c:	01800e44 	movi	r6,57
   83a50:	d9c00717 	ldw	r7,28(sp)
   83a54:	00000506 	br	83a6c <_dtoa_r+0xc00>
   83a58:	18ffffc4 	addi	r3,r3,-1
   83a5c:	11c12326 	beq	r2,r7,83eec <_dtoa_r+0x1080>
   83a60:	19000003 	ldbu	r4,0(r3)
   83a64:	102f883a 	mov	r23,r2
   83a68:	10bfffc4 	addi	r2,r2,-1
   83a6c:	21403fcc 	andi	r5,r4,255
   83a70:	2940201c 	xori	r5,r5,128
   83a74:	297fe004 	addi	r5,r5,-128
   83a78:	29bff726 	beq	r5,r6,83a58 <__alt_data_end+0xfffb7f68>
   83a7c:	21000044 	addi	r4,r4,1
   83a80:	11000005 	stb	r4,0(r2)
   83a84:	a80b883a 	mov	r5,r21
   83a88:	e009883a 	mov	r4,fp
   83a8c:	00865b00 	call	865b0 <_Bfree>
   83a90:	883ea026 	beq	r17,zero,83514 <__alt_data_end+0xfffb7a24>
   83a94:	90000426 	beq	r18,zero,83aa8 <_dtoa_r+0xc3c>
   83a98:	94400326 	beq	r18,r17,83aa8 <_dtoa_r+0xc3c>
   83a9c:	900b883a 	mov	r5,r18
   83aa0:	e009883a 	mov	r4,fp
   83aa4:	00865b00 	call	865b0 <_Bfree>
   83aa8:	880b883a 	mov	r5,r17
   83aac:	e009883a 	mov	r4,fp
   83ab0:	00865b00 	call	865b0 <_Bfree>
   83ab4:	003e9706 	br	83514 <__alt_data_end+0xfffb7a24>
   83ab8:	01800044 	movi	r6,1
   83abc:	d9800e15 	stw	r6,56(sp)
   83ac0:	003d9606 	br	8311c <__alt_data_end+0xfffb762c>
   83ac4:	d8800817 	ldw	r2,32(sp)
   83ac8:	d8c00517 	ldw	r3,20(sp)
   83acc:	d8000d15 	stw	zero,52(sp)
   83ad0:	10c5c83a 	sub	r2,r2,r3
   83ad4:	00c9c83a 	sub	r4,zero,r3
   83ad8:	d8800815 	stw	r2,32(sp)
   83adc:	d9000a15 	stw	r4,40(sp)
   83ae0:	003d9706 	br	83140 <__alt_data_end+0xfffb7650>
   83ae4:	05adc83a 	sub	r22,zero,r22
   83ae8:	dd800815 	stw	r22,32(sp)
   83aec:	002d883a 	mov	r22,zero
   83af0:	003d8e06 	br	8312c <__alt_data_end+0xfffb763c>
   83af4:	d9000517 	ldw	r4,20(sp)
   83af8:	008cda80 	call	8cda8 <__floatsidf>
   83afc:	100d883a 	mov	r6,r2
   83b00:	180f883a 	mov	r7,r3
   83b04:	a009883a 	mov	r4,r20
   83b08:	880b883a 	mov	r5,r17
   83b0c:	008babc0 	call	8babc <__eqdf2>
   83b10:	103d7126 	beq	r2,zero,830d8 <__alt_data_end+0xfffb75e8>
   83b14:	d9c00517 	ldw	r7,20(sp)
   83b18:	39ffffc4 	addi	r7,r7,-1
   83b1c:	d9c00515 	stw	r7,20(sp)
   83b20:	003d6d06 	br	830d8 <__alt_data_end+0xfffb75e8>
   83b24:	dd400a17 	ldw	r21,40(sp)
   83b28:	dd000817 	ldw	r20,32(sp)
   83b2c:	0023883a 	mov	r17,zero
   83b30:	003f4806 	br	83854 <__alt_data_end+0xfffb7d64>
   83b34:	10e3c83a 	sub	r17,r2,r3
   83b38:	9448983a 	sll	r4,r18,r17
   83b3c:	003d3206 	br	83008 <__alt_data_end+0xfffb7518>
   83b40:	d8000e15 	stw	zero,56(sp)
   83b44:	003d7506 	br	8311c <__alt_data_end+0xfffb762c>
   83b48:	b005883a 	mov	r2,r22
   83b4c:	003f4506 	br	83864 <__alt_data_end+0xfffb7d74>
   83b50:	dc000915 	stw	r16,36(sp)
   83b54:	d9800a17 	ldw	r6,40(sp)
   83b58:	d9400917 	ldw	r5,36(sp)
   83b5c:	e009883a 	mov	r4,fp
   83b60:	0086b480 	call	86b48 <__pow5mult>
   83b64:	1021883a 	mov	r16,r2
   83b68:	003f5a06 	br	838d4 <__alt_data_end+0xfffb7de4>
   83b6c:	01c00044 	movi	r7,1
   83b70:	d9c00b15 	stw	r7,44(sp)
   83b74:	d8802217 	ldw	r2,136(sp)
   83b78:	0081280e 	bge	zero,r2,8401c <_dtoa_r+0x11b0>
   83b7c:	100d883a 	mov	r6,r2
   83b80:	1021883a 	mov	r16,r2
   83b84:	d8800c15 	stw	r2,48(sp)
   83b88:	d8800615 	stw	r2,24(sp)
   83b8c:	003d8806 	br	831b0 <__alt_data_end+0xfffb76c0>
   83b90:	d8800617 	ldw	r2,24(sp)
   83b94:	00be9b16 	blt	zero,r2,83604 <__alt_data_end+0xfffb7b14>
   83b98:	10010f1e 	bne	r2,zero,83fd8 <_dtoa_r+0x116c>
   83b9c:	880b883a 	mov	r5,r17
   83ba0:	000d883a 	mov	r6,zero
   83ba4:	01d00534 	movhi	r7,16404
   83ba8:	8009883a 	mov	r4,r16
   83bac:	008bd140 	call	8bd14 <__muldf3>
   83bb0:	900d883a 	mov	r6,r18
   83bb4:	980f883a 	mov	r7,r19
   83bb8:	1009883a 	mov	r4,r2
   83bbc:	180b883a 	mov	r5,r3
   83bc0:	008bb440 	call	8bb44 <__gedf2>
   83bc4:	002b883a 	mov	r21,zero
   83bc8:	0023883a 	mov	r17,zero
   83bcc:	1000bf16 	blt	r2,zero,83ecc <_dtoa_r+0x1060>
   83bd0:	d9802217 	ldw	r6,136(sp)
   83bd4:	ddc00717 	ldw	r23,28(sp)
   83bd8:	018c303a 	nor	r6,zero,r6
   83bdc:	d9800515 	stw	r6,20(sp)
   83be0:	a80b883a 	mov	r5,r21
   83be4:	e009883a 	mov	r4,fp
   83be8:	00865b00 	call	865b0 <_Bfree>
   83bec:	883e4926 	beq	r17,zero,83514 <__alt_data_end+0xfffb7a24>
   83bf0:	003fad06 	br	83aa8 <__alt_data_end+0xfffb7fb8>
   83bf4:	d9c01117 	ldw	r7,68(sp)
   83bf8:	3801bc26 	beq	r7,zero,842ec <_dtoa_r+0x1480>
   83bfc:	10810cc4 	addi	r2,r2,1075
   83c00:	dd400a17 	ldw	r21,40(sp)
   83c04:	dd000817 	ldw	r20,32(sp)
   83c08:	003f0a06 	br	83834 <__alt_data_end+0xfffb7d44>
   83c0c:	00800704 	movi	r2,28
   83c10:	d9000817 	ldw	r4,32(sp)
   83c14:	a0a9883a 	add	r20,r20,r2
   83c18:	b0ad883a 	add	r22,r22,r2
   83c1c:	2089883a 	add	r4,r4,r2
   83c20:	d9000815 	stw	r4,32(sp)
   83c24:	003f5106 	br	8396c <__alt_data_end+0xfffb7e7c>
   83c28:	d8c00317 	ldw	r3,12(sp)
   83c2c:	b8c1fc0e 	bge	r23,r3,84420 <_dtoa_r+0x15b4>
   83c30:	0027883a 	mov	r19,zero
   83c34:	b805883a 	mov	r2,r23
   83c38:	003f3e06 	br	83934 <__alt_data_end+0xfffb7e44>
   83c3c:	880b883a 	mov	r5,r17
   83c40:	e009883a 	mov	r4,fp
   83c44:	000f883a 	mov	r7,zero
   83c48:	01800284 	movi	r6,10
   83c4c:	00865d80 	call	865d8 <__multadd>
   83c50:	d9000c17 	ldw	r4,48(sp)
   83c54:	1023883a 	mov	r17,r2
   83c58:	0102040e 	bge	zero,r4,8446c <_dtoa_r+0x1600>
   83c5c:	d9000615 	stw	r4,24(sp)
   83c60:	0500050e 	bge	zero,r20,83c78 <_dtoa_r+0xe0c>
   83c64:	880b883a 	mov	r5,r17
   83c68:	a00d883a 	mov	r6,r20
   83c6c:	e009883a 	mov	r4,fp
   83c70:	0086c880 	call	86c88 <__lshift>
   83c74:	1023883a 	mov	r17,r2
   83c78:	9801241e 	bne	r19,zero,8410c <_dtoa_r+0x12a0>
   83c7c:	8829883a 	mov	r20,r17
   83c80:	d9000617 	ldw	r4,24(sp)
   83c84:	dcc00717 	ldw	r19,28(sp)
   83c88:	9480004c 	andi	r18,r18,1
   83c8c:	20bfffc4 	addi	r2,r4,-1
   83c90:	9885883a 	add	r2,r19,r2
   83c94:	d8800415 	stw	r2,16(sp)
   83c98:	dc800615 	stw	r18,24(sp)
   83c9c:	a80b883a 	mov	r5,r21
   83ca0:	8009883a 	mov	r4,r16
   83ca4:	0082c6c0 	call	82c6c <quorem>
   83ca8:	880b883a 	mov	r5,r17
   83cac:	8009883a 	mov	r4,r16
   83cb0:	102f883a 	mov	r23,r2
   83cb4:	0086dd00 	call	86dd0 <__mcmp>
   83cb8:	a80b883a 	mov	r5,r21
   83cbc:	a00d883a 	mov	r6,r20
   83cc0:	e009883a 	mov	r4,fp
   83cc4:	102d883a 	mov	r22,r2
   83cc8:	0086e300 	call	86e30 <__mdiff>
   83ccc:	1007883a 	mov	r3,r2
   83cd0:	10800317 	ldw	r2,12(r2)
   83cd4:	bc800c04 	addi	r18,r23,48
   83cd8:	180b883a 	mov	r5,r3
   83cdc:	10004e1e 	bne	r2,zero,83e18 <_dtoa_r+0xfac>
   83ce0:	8009883a 	mov	r4,r16
   83ce4:	d8c01615 	stw	r3,88(sp)
   83ce8:	0086dd00 	call	86dd0 <__mcmp>
   83cec:	d8c01617 	ldw	r3,88(sp)
   83cf0:	e009883a 	mov	r4,fp
   83cf4:	d8801615 	stw	r2,88(sp)
   83cf8:	180b883a 	mov	r5,r3
   83cfc:	00865b00 	call	865b0 <_Bfree>
   83d00:	d8801617 	ldw	r2,88(sp)
   83d04:	1000041e 	bne	r2,zero,83d18 <_dtoa_r+0xeac>
   83d08:	d9800317 	ldw	r6,12(sp)
   83d0c:	3000021e 	bne	r6,zero,83d18 <_dtoa_r+0xeac>
   83d10:	d8c00617 	ldw	r3,24(sp)
   83d14:	18003726 	beq	r3,zero,83df4 <_dtoa_r+0xf88>
   83d18:	b0002016 	blt	r22,zero,83d9c <_dtoa_r+0xf30>
   83d1c:	b000041e 	bne	r22,zero,83d30 <_dtoa_r+0xec4>
   83d20:	d9000317 	ldw	r4,12(sp)
   83d24:	2000021e 	bne	r4,zero,83d30 <_dtoa_r+0xec4>
   83d28:	d8c00617 	ldw	r3,24(sp)
   83d2c:	18001b26 	beq	r3,zero,83d9c <_dtoa_r+0xf30>
   83d30:	00810716 	blt	zero,r2,84150 <_dtoa_r+0x12e4>
   83d34:	d8c00417 	ldw	r3,16(sp)
   83d38:	9d800044 	addi	r22,r19,1
   83d3c:	9c800005 	stb	r18,0(r19)
   83d40:	b02f883a 	mov	r23,r22
   83d44:	98c10626 	beq	r19,r3,84160 <_dtoa_r+0x12f4>
   83d48:	800b883a 	mov	r5,r16
   83d4c:	000f883a 	mov	r7,zero
   83d50:	01800284 	movi	r6,10
   83d54:	e009883a 	mov	r4,fp
   83d58:	00865d80 	call	865d8 <__multadd>
   83d5c:	1021883a 	mov	r16,r2
   83d60:	000f883a 	mov	r7,zero
   83d64:	01800284 	movi	r6,10
   83d68:	880b883a 	mov	r5,r17
   83d6c:	e009883a 	mov	r4,fp
   83d70:	8d002526 	beq	r17,r20,83e08 <_dtoa_r+0xf9c>
   83d74:	00865d80 	call	865d8 <__multadd>
   83d78:	a00b883a 	mov	r5,r20
   83d7c:	000f883a 	mov	r7,zero
   83d80:	01800284 	movi	r6,10
   83d84:	e009883a 	mov	r4,fp
   83d88:	1023883a 	mov	r17,r2
   83d8c:	00865d80 	call	865d8 <__multadd>
   83d90:	1029883a 	mov	r20,r2
   83d94:	b027883a 	mov	r19,r22
   83d98:	003fc006 	br	83c9c <__alt_data_end+0xfffb81ac>
   83d9c:	9011883a 	mov	r8,r18
   83da0:	00800e0e 	bge	zero,r2,83ddc <_dtoa_r+0xf70>
   83da4:	800b883a 	mov	r5,r16
   83da8:	01800044 	movi	r6,1
   83dac:	e009883a 	mov	r4,fp
   83db0:	da001715 	stw	r8,92(sp)
   83db4:	0086c880 	call	86c88 <__lshift>
   83db8:	a80b883a 	mov	r5,r21
   83dbc:	1009883a 	mov	r4,r2
   83dc0:	1021883a 	mov	r16,r2
   83dc4:	0086dd00 	call	86dd0 <__mcmp>
   83dc8:	da001717 	ldw	r8,92(sp)
   83dcc:	0081960e 	bge	zero,r2,84428 <_dtoa_r+0x15bc>
   83dd0:	00800e44 	movi	r2,57
   83dd4:	40817026 	beq	r8,r2,84398 <_dtoa_r+0x152c>
   83dd8:	ba000c44 	addi	r8,r23,49
   83ddc:	8825883a 	mov	r18,r17
   83de0:	9dc00044 	addi	r23,r19,1
   83de4:	9a000005 	stb	r8,0(r19)
   83de8:	a023883a 	mov	r17,r20
   83dec:	dc000915 	stw	r16,36(sp)
   83df0:	003f2406 	br	83a84 <__alt_data_end+0xfffb7f94>
   83df4:	00800e44 	movi	r2,57
   83df8:	9011883a 	mov	r8,r18
   83dfc:	90816626 	beq	r18,r2,84398 <_dtoa_r+0x152c>
   83e00:	05bff516 	blt	zero,r22,83dd8 <__alt_data_end+0xfffb82e8>
   83e04:	003ff506 	br	83ddc <__alt_data_end+0xfffb82ec>
   83e08:	00865d80 	call	865d8 <__multadd>
   83e0c:	1023883a 	mov	r17,r2
   83e10:	1029883a 	mov	r20,r2
   83e14:	003fdf06 	br	83d94 <__alt_data_end+0xfffb82a4>
   83e18:	e009883a 	mov	r4,fp
   83e1c:	00865b00 	call	865b0 <_Bfree>
   83e20:	00800044 	movi	r2,1
   83e24:	003fbc06 	br	83d18 <__alt_data_end+0xfffb8228>
   83e28:	a80b883a 	mov	r5,r21
   83e2c:	8009883a 	mov	r4,r16
   83e30:	0086dd00 	call	86dd0 <__mcmp>
   83e34:	103edb0e 	bge	r2,zero,839a4 <__alt_data_end+0xfffb7eb4>
   83e38:	800b883a 	mov	r5,r16
   83e3c:	000f883a 	mov	r7,zero
   83e40:	01800284 	movi	r6,10
   83e44:	e009883a 	mov	r4,fp
   83e48:	00865d80 	call	865d8 <__multadd>
   83e4c:	1021883a 	mov	r16,r2
   83e50:	d8800517 	ldw	r2,20(sp)
   83e54:	d8c00b17 	ldw	r3,44(sp)
   83e58:	10bfffc4 	addi	r2,r2,-1
   83e5c:	d8800515 	stw	r2,20(sp)
   83e60:	183f761e 	bne	r3,zero,83c3c <__alt_data_end+0xfffb814c>
   83e64:	d9000c17 	ldw	r4,48(sp)
   83e68:	0101730e 	bge	zero,r4,84438 <_dtoa_r+0x15cc>
   83e6c:	d9000615 	stw	r4,24(sp)
   83e70:	003ed006 	br	839b4 <__alt_data_end+0xfffb7ec4>
   83e74:	00800084 	movi	r2,2
   83e78:	3081861e 	bne	r6,r2,84494 <_dtoa_r+0x1628>
   83e7c:	d8000b15 	stw	zero,44(sp)
   83e80:	003f3c06 	br	83b74 <__alt_data_end+0xfffb8084>
   83e84:	dc000917 	ldw	r16,36(sp)
   83e88:	003e9206 	br	838d4 <__alt_data_end+0xfffb7de4>
   83e8c:	d9c00317 	ldw	r7,12(sp)
   83e90:	00800084 	movi	r2,2
   83e94:	11fec50e 	bge	r2,r7,839ac <__alt_data_end+0xfffb7ebc>
   83e98:	d9000617 	ldw	r4,24(sp)
   83e9c:	20013c1e 	bne	r4,zero,84390 <_dtoa_r+0x1524>
   83ea0:	a80b883a 	mov	r5,r21
   83ea4:	000f883a 	mov	r7,zero
   83ea8:	01800144 	movi	r6,5
   83eac:	e009883a 	mov	r4,fp
   83eb0:	00865d80 	call	865d8 <__multadd>
   83eb4:	100b883a 	mov	r5,r2
   83eb8:	8009883a 	mov	r4,r16
   83ebc:	102b883a 	mov	r21,r2
   83ec0:	0086dd00 	call	86dd0 <__mcmp>
   83ec4:	dc000915 	stw	r16,36(sp)
   83ec8:	00bf410e 	bge	zero,r2,83bd0 <__alt_data_end+0xfffb80e0>
   83ecc:	d9c00717 	ldw	r7,28(sp)
   83ed0:	00800c44 	movi	r2,49
   83ed4:	38800005 	stb	r2,0(r7)
   83ed8:	d8800517 	ldw	r2,20(sp)
   83edc:	3dc00044 	addi	r23,r7,1
   83ee0:	10800044 	addi	r2,r2,1
   83ee4:	d8800515 	stw	r2,20(sp)
   83ee8:	003f3d06 	br	83be0 <__alt_data_end+0xfffb80f0>
   83eec:	d9800517 	ldw	r6,20(sp)
   83ef0:	d9c00717 	ldw	r7,28(sp)
   83ef4:	00800c44 	movi	r2,49
   83ef8:	31800044 	addi	r6,r6,1
   83efc:	d9800515 	stw	r6,20(sp)
   83f00:	38800005 	stb	r2,0(r7)
   83f04:	003edf06 	br	83a84 <__alt_data_end+0xfffb7f94>
   83f08:	d8000b15 	stw	zero,44(sp)
   83f0c:	003c9f06 	br	8318c <__alt_data_end+0xfffb769c>
   83f10:	903e7e1e 	bne	r18,zero,8390c <__alt_data_end+0xfffb7e1c>
   83f14:	00800434 	movhi	r2,16
   83f18:	10bfffc4 	addi	r2,r2,-1
   83f1c:	9884703a 	and	r2,r19,r2
   83f20:	1000ea1e 	bne	r2,zero,842cc <_dtoa_r+0x1460>
   83f24:	9cdffc2c 	andhi	r19,r19,32752
   83f28:	9800e826 	beq	r19,zero,842cc <_dtoa_r+0x1460>
   83f2c:	d9c00817 	ldw	r7,32(sp)
   83f30:	b5800044 	addi	r22,r22,1
   83f34:	04c00044 	movi	r19,1
   83f38:	39c00044 	addi	r7,r7,1
   83f3c:	d9c00815 	stw	r7,32(sp)
   83f40:	d8800d17 	ldw	r2,52(sp)
   83f44:	103e721e 	bne	r2,zero,83910 <__alt_data_end+0xfffb7e20>
   83f48:	00800044 	movi	r2,1
   83f4c:	003e7906 	br	83934 <__alt_data_end+0xfffb7e44>
   83f50:	8009883a 	mov	r4,r16
   83f54:	008cda80 	call	8cda8 <__floatsidf>
   83f58:	d9800f17 	ldw	r6,60(sp)
   83f5c:	d9c01017 	ldw	r7,64(sp)
   83f60:	1009883a 	mov	r4,r2
   83f64:	180b883a 	mov	r5,r3
   83f68:	008bd140 	call	8bd14 <__muldf3>
   83f6c:	000d883a 	mov	r6,zero
   83f70:	01d00734 	movhi	r7,16412
   83f74:	1009883a 	mov	r4,r2
   83f78:	180b883a 	mov	r5,r3
   83f7c:	008a9280 	call	8a928 <__adddf3>
   83f80:	047f3034 	movhi	r17,64704
   83f84:	1021883a 	mov	r16,r2
   83f88:	1c63883a 	add	r17,r3,r17
   83f8c:	d9000f17 	ldw	r4,60(sp)
   83f90:	d9401017 	ldw	r5,64(sp)
   83f94:	000d883a 	mov	r6,zero
   83f98:	01d00534 	movhi	r7,16404
   83f9c:	008c42c0 	call	8c42c <__subdf3>
   83fa0:	800d883a 	mov	r6,r16
   83fa4:	880f883a 	mov	r7,r17
   83fa8:	1009883a 	mov	r4,r2
   83fac:	180b883a 	mov	r5,r3
   83fb0:	102b883a 	mov	r21,r2
   83fb4:	1829883a 	mov	r20,r3
   83fb8:	008bb440 	call	8bb44 <__gedf2>
   83fbc:	00806c16 	blt	zero,r2,84170 <_dtoa_r+0x1304>
   83fc0:	89e0003c 	xorhi	r7,r17,32768
   83fc4:	800d883a 	mov	r6,r16
   83fc8:	a809883a 	mov	r4,r21
   83fcc:	a00b883a 	mov	r5,r20
   83fd0:	008bc200 	call	8bc20 <__ledf2>
   83fd4:	103d7e0e 	bge	r2,zero,835d0 <__alt_data_end+0xfffb7ae0>
   83fd8:	002b883a 	mov	r21,zero
   83fdc:	0023883a 	mov	r17,zero
   83fe0:	003efb06 	br	83bd0 <__alt_data_end+0xfffb80e0>
   83fe4:	d8800717 	ldw	r2,28(sp)
   83fe8:	003bd006 	br	82f2c <__alt_data_end+0xfffb743c>
   83fec:	d9000a17 	ldw	r4,40(sp)
   83ff0:	d9800d17 	ldw	r6,52(sp)
   83ff4:	dd400a15 	stw	r21,40(sp)
   83ff8:	a905c83a 	sub	r2,r21,r4
   83ffc:	308d883a 	add	r6,r6,r2
   84000:	d9800d15 	stw	r6,52(sp)
   84004:	002b883a 	mov	r21,zero
   84008:	003e0606 	br	83824 <__alt_data_end+0xfffb7d34>
   8400c:	9023883a 	mov	r17,r18
   84010:	9829883a 	mov	r20,r19
   84014:	04000084 	movi	r16,2
   84018:	003c9206 	br	83264 <__alt_data_end+0xfffb7774>
   8401c:	04000044 	movi	r16,1
   84020:	dc000c15 	stw	r16,48(sp)
   84024:	dc000615 	stw	r16,24(sp)
   84028:	dc002215 	stw	r16,136(sp)
   8402c:	e0001115 	stw	zero,68(fp)
   84030:	000b883a 	mov	r5,zero
   84034:	003c6906 	br	831dc <__alt_data_end+0xfffb76ec>
   84038:	3021883a 	mov	r16,r6
   8403c:	003ffb06 	br	8402c <__alt_data_end+0xfffb853c>
   84040:	1000021e 	bne	r2,zero,8404c <_dtoa_r+0x11e0>
   84044:	4200004c 	andi	r8,r8,1
   84048:	403e7d1e 	bne	r8,zero,83a40 <__alt_data_end+0xfffb7f50>
   8404c:	01000c04 	movi	r4,48
   84050:	00000106 	br	84058 <_dtoa_r+0x11ec>
   84054:	102f883a 	mov	r23,r2
   84058:	b8bfffc4 	addi	r2,r23,-1
   8405c:	10c00007 	ldb	r3,0(r2)
   84060:	193ffc26 	beq	r3,r4,84054 <__alt_data_end+0xfffb8564>
   84064:	003e8706 	br	83a84 <__alt_data_end+0xfffb7f94>
   84068:	d8800517 	ldw	r2,20(sp)
   8406c:	00a3c83a 	sub	r17,zero,r2
   84070:	8800a426 	beq	r17,zero,84304 <_dtoa_r+0x1498>
   84074:	888003cc 	andi	r2,r17,15
   84078:	100490fa 	slli	r2,r2,3
   8407c:	00c00274 	movhi	r3,9
   84080:	18fe7704 	addi	r3,r3,-1572
   84084:	1885883a 	add	r2,r3,r2
   84088:	11800017 	ldw	r6,0(r2)
   8408c:	11c00117 	ldw	r7,4(r2)
   84090:	9009883a 	mov	r4,r18
   84094:	980b883a 	mov	r5,r19
   84098:	8823d13a 	srai	r17,r17,4
   8409c:	008bd140 	call	8bd14 <__muldf3>
   840a0:	d8800f15 	stw	r2,60(sp)
   840a4:	d8c01015 	stw	r3,64(sp)
   840a8:	8800e826 	beq	r17,zero,8444c <_dtoa_r+0x15e0>
   840ac:	05000274 	movhi	r20,9
   840b0:	a53e6d04 	addi	r20,r20,-1612
   840b4:	04000084 	movi	r16,2
   840b8:	8980004c 	andi	r6,r17,1
   840bc:	1009883a 	mov	r4,r2
   840c0:	8823d07a 	srai	r17,r17,1
   840c4:	180b883a 	mov	r5,r3
   840c8:	30000426 	beq	r6,zero,840dc <_dtoa_r+0x1270>
   840cc:	a1800017 	ldw	r6,0(r20)
   840d0:	a1c00117 	ldw	r7,4(r20)
   840d4:	84000044 	addi	r16,r16,1
   840d8:	008bd140 	call	8bd14 <__muldf3>
   840dc:	a5000204 	addi	r20,r20,8
   840e0:	883ff51e 	bne	r17,zero,840b8 <__alt_data_end+0xfffb85c8>
   840e4:	d8800f15 	stw	r2,60(sp)
   840e8:	d8c01015 	stw	r3,64(sp)
   840ec:	003c7606 	br	832c8 <__alt_data_end+0xfffb77d8>
   840f0:	00c00c04 	movi	r3,48
   840f4:	10c00005 	stb	r3,0(r2)
   840f8:	d8c00517 	ldw	r3,20(sp)
   840fc:	bd3fffc3 	ldbu	r20,-1(r23)
   84100:	18c00044 	addi	r3,r3,1
   84104:	d8c00515 	stw	r3,20(sp)
   84108:	003db906 	br	837f0 <__alt_data_end+0xfffb7d00>
   8410c:	89400117 	ldw	r5,4(r17)
   84110:	e009883a 	mov	r4,fp
   84114:	00865080 	call	86508 <_Balloc>
   84118:	89800417 	ldw	r6,16(r17)
   8411c:	89400304 	addi	r5,r17,12
   84120:	11000304 	addi	r4,r2,12
   84124:	31800084 	addi	r6,r6,2
   84128:	318d883a 	add	r6,r6,r6
   8412c:	318d883a 	add	r6,r6,r6
   84130:	1027883a 	mov	r19,r2
   84134:	008613c0 	call	8613c <memcpy>
   84138:	01800044 	movi	r6,1
   8413c:	980b883a 	mov	r5,r19
   84140:	e009883a 	mov	r4,fp
   84144:	0086c880 	call	86c88 <__lshift>
   84148:	1029883a 	mov	r20,r2
   8414c:	003ecc06 	br	83c80 <__alt_data_end+0xfffb8190>
   84150:	00800e44 	movi	r2,57
   84154:	90809026 	beq	r18,r2,84398 <_dtoa_r+0x152c>
   84158:	92000044 	addi	r8,r18,1
   8415c:	003f1f06 	br	83ddc <__alt_data_end+0xfffb82ec>
   84160:	9011883a 	mov	r8,r18
   84164:	8825883a 	mov	r18,r17
   84168:	a023883a 	mov	r17,r20
   8416c:	003e2906 	br	83a14 <__alt_data_end+0xfffb7f24>
   84170:	002b883a 	mov	r21,zero
   84174:	0023883a 	mov	r17,zero
   84178:	003f5406 	br	83ecc <__alt_data_end+0xfffb83dc>
   8417c:	61bfffc4 	addi	r6,r12,-1
   84180:	300490fa 	slli	r2,r6,3
   84184:	00c00274 	movhi	r3,9
   84188:	18fe7704 	addi	r3,r3,-1572
   8418c:	1885883a 	add	r2,r3,r2
   84190:	11000017 	ldw	r4,0(r2)
   84194:	11400117 	ldw	r5,4(r2)
   84198:	d8800717 	ldw	r2,28(sp)
   8419c:	880f883a 	mov	r7,r17
   841a0:	d9801215 	stw	r6,72(sp)
   841a4:	800d883a 	mov	r6,r16
   841a8:	db001615 	stw	r12,88(sp)
   841ac:	15c00044 	addi	r23,r2,1
   841b0:	008bd140 	call	8bd14 <__muldf3>
   841b4:	d9401017 	ldw	r5,64(sp)
   841b8:	d9000f17 	ldw	r4,60(sp)
   841bc:	d8c01515 	stw	r3,84(sp)
   841c0:	d8801415 	stw	r2,80(sp)
   841c4:	008cd280 	call	8cd28 <__fixdfsi>
   841c8:	1009883a 	mov	r4,r2
   841cc:	1021883a 	mov	r16,r2
   841d0:	008cda80 	call	8cda8 <__floatsidf>
   841d4:	d9000f17 	ldw	r4,60(sp)
   841d8:	d9401017 	ldw	r5,64(sp)
   841dc:	100d883a 	mov	r6,r2
   841e0:	180f883a 	mov	r7,r3
   841e4:	008c42c0 	call	8c42c <__subdf3>
   841e8:	1829883a 	mov	r20,r3
   841ec:	d8c00717 	ldw	r3,28(sp)
   841f0:	84000c04 	addi	r16,r16,48
   841f4:	1023883a 	mov	r17,r2
   841f8:	1c000005 	stb	r16,0(r3)
   841fc:	db001617 	ldw	r12,88(sp)
   84200:	00800044 	movi	r2,1
   84204:	60802226 	beq	r12,r2,84290 <_dtoa_r+0x1424>
   84208:	d9c00717 	ldw	r7,28(sp)
   8420c:	8805883a 	mov	r2,r17
   84210:	b82b883a 	mov	r21,r23
   84214:	3b19883a 	add	r12,r7,r12
   84218:	6023883a 	mov	r17,r12
   8421c:	a007883a 	mov	r3,r20
   84220:	dc800f15 	stw	r18,60(sp)
   84224:	000d883a 	mov	r6,zero
   84228:	01d00934 	movhi	r7,16420
   8422c:	1009883a 	mov	r4,r2
   84230:	180b883a 	mov	r5,r3
   84234:	008bd140 	call	8bd14 <__muldf3>
   84238:	180b883a 	mov	r5,r3
   8423c:	1009883a 	mov	r4,r2
   84240:	1829883a 	mov	r20,r3
   84244:	1025883a 	mov	r18,r2
   84248:	008cd280 	call	8cd28 <__fixdfsi>
   8424c:	1009883a 	mov	r4,r2
   84250:	1021883a 	mov	r16,r2
   84254:	008cda80 	call	8cda8 <__floatsidf>
   84258:	100d883a 	mov	r6,r2
   8425c:	180f883a 	mov	r7,r3
   84260:	9009883a 	mov	r4,r18
   84264:	a00b883a 	mov	r5,r20
   84268:	84000c04 	addi	r16,r16,48
   8426c:	008c42c0 	call	8c42c <__subdf3>
   84270:	ad400044 	addi	r21,r21,1
   84274:	ac3fffc5 	stb	r16,-1(r21)
   84278:	ac7fea1e 	bne	r21,r17,84224 <__alt_data_end+0xfffb8734>
   8427c:	1023883a 	mov	r17,r2
   84280:	d8801217 	ldw	r2,72(sp)
   84284:	dc800f17 	ldw	r18,60(sp)
   84288:	1829883a 	mov	r20,r3
   8428c:	b8af883a 	add	r23,r23,r2
   84290:	d9001417 	ldw	r4,80(sp)
   84294:	d9401517 	ldw	r5,84(sp)
   84298:	000d883a 	mov	r6,zero
   8429c:	01cff834 	movhi	r7,16352
   842a0:	008a9280 	call	8a928 <__adddf3>
   842a4:	880d883a 	mov	r6,r17
   842a8:	a00f883a 	mov	r7,r20
   842ac:	1009883a 	mov	r4,r2
   842b0:	180b883a 	mov	r5,r3
   842b4:	008bc200 	call	8bc20 <__ledf2>
   842b8:	10003e0e 	bge	r2,zero,843b4 <_dtoa_r+0x1548>
   842bc:	d9001317 	ldw	r4,76(sp)
   842c0:	bd3fffc3 	ldbu	r20,-1(r23)
   842c4:	d9000515 	stw	r4,20(sp)
   842c8:	003d3b06 	br	837b8 <__alt_data_end+0xfffb7cc8>
   842cc:	0027883a 	mov	r19,zero
   842d0:	003f1b06 	br	83f40 <__alt_data_end+0xfffb8450>
   842d4:	d8800817 	ldw	r2,32(sp)
   842d8:	11e9c83a 	sub	r20,r2,r7
   842dc:	0005883a 	mov	r2,zero
   842e0:	003d5406 	br	83834 <__alt_data_end+0xfffb7d44>
   842e4:	00800044 	movi	r2,1
   842e8:	003dc706 	br	83a08 <__alt_data_end+0xfffb7f18>
   842ec:	d8c00217 	ldw	r3,8(sp)
   842f0:	00800d84 	movi	r2,54
   842f4:	dd400a17 	ldw	r21,40(sp)
   842f8:	10c5c83a 	sub	r2,r2,r3
   842fc:	dd000817 	ldw	r20,32(sp)
   84300:	003d4c06 	br	83834 <__alt_data_end+0xfffb7d44>
   84304:	dc800f15 	stw	r18,60(sp)
   84308:	dcc01015 	stw	r19,64(sp)
   8430c:	04000084 	movi	r16,2
   84310:	003bed06 	br	832c8 <__alt_data_end+0xfffb77d8>
   84314:	d9000617 	ldw	r4,24(sp)
   84318:	203f0d26 	beq	r4,zero,83f50 <__alt_data_end+0xfffb8460>
   8431c:	d9800c17 	ldw	r6,48(sp)
   84320:	01bcab0e 	bge	zero,r6,835d0 <__alt_data_end+0xfffb7ae0>
   84324:	d9401017 	ldw	r5,64(sp)
   84328:	d9000f17 	ldw	r4,60(sp)
   8432c:	000d883a 	mov	r6,zero
   84330:	01d00934 	movhi	r7,16420
   84334:	008bd140 	call	8bd14 <__muldf3>
   84338:	81000044 	addi	r4,r16,1
   8433c:	d8800f15 	stw	r2,60(sp)
   84340:	d8c01015 	stw	r3,64(sp)
   84344:	008cda80 	call	8cda8 <__floatsidf>
   84348:	d9800f17 	ldw	r6,60(sp)
   8434c:	d9c01017 	ldw	r7,64(sp)
   84350:	1009883a 	mov	r4,r2
   84354:	180b883a 	mov	r5,r3
   84358:	008bd140 	call	8bd14 <__muldf3>
   8435c:	01d00734 	movhi	r7,16412
   84360:	000d883a 	mov	r6,zero
   84364:	1009883a 	mov	r4,r2
   84368:	180b883a 	mov	r5,r3
   8436c:	008a9280 	call	8a928 <__adddf3>
   84370:	d9c00517 	ldw	r7,20(sp)
   84374:	047f3034 	movhi	r17,64704
   84378:	1021883a 	mov	r16,r2
   8437c:	39ffffc4 	addi	r7,r7,-1
   84380:	d9c01315 	stw	r7,76(sp)
   84384:	1c63883a 	add	r17,r3,r17
   84388:	db000c17 	ldw	r12,48(sp)
   8438c:	003bea06 	br	83338 <__alt_data_end+0xfffb7848>
   84390:	dc000915 	stw	r16,36(sp)
   84394:	003e0e06 	br	83bd0 <__alt_data_end+0xfffb80e0>
   84398:	01000e44 	movi	r4,57
   8439c:	8825883a 	mov	r18,r17
   843a0:	9dc00044 	addi	r23,r19,1
   843a4:	99000005 	stb	r4,0(r19)
   843a8:	a023883a 	mov	r17,r20
   843ac:	dc000915 	stw	r16,36(sp)
   843b0:	003da406 	br	83a44 <__alt_data_end+0xfffb7f54>
   843b4:	d9801417 	ldw	r6,80(sp)
   843b8:	d9c01517 	ldw	r7,84(sp)
   843bc:	0009883a 	mov	r4,zero
   843c0:	014ff834 	movhi	r5,16352
   843c4:	008c42c0 	call	8c42c <__subdf3>
   843c8:	880d883a 	mov	r6,r17
   843cc:	a00f883a 	mov	r7,r20
   843d0:	1009883a 	mov	r4,r2
   843d4:	180b883a 	mov	r5,r3
   843d8:	008bb440 	call	8bb44 <__gedf2>
   843dc:	00bc7c0e 	bge	zero,r2,835d0 <__alt_data_end+0xfffb7ae0>
   843e0:	01000c04 	movi	r4,48
   843e4:	00000106 	br	843ec <_dtoa_r+0x1580>
   843e8:	102f883a 	mov	r23,r2
   843ec:	b8bfffc4 	addi	r2,r23,-1
   843f0:	10c00007 	ldb	r3,0(r2)
   843f4:	193ffc26 	beq	r3,r4,843e8 <__alt_data_end+0xfffb88f8>
   843f8:	d9801317 	ldw	r6,76(sp)
   843fc:	d9800515 	stw	r6,20(sp)
   84400:	003c4406 	br	83514 <__alt_data_end+0xfffb7a24>
   84404:	d9801317 	ldw	r6,76(sp)
   84408:	d9800515 	stw	r6,20(sp)
   8440c:	003cea06 	br	837b8 <__alt_data_end+0xfffb7cc8>
   84410:	dd800f17 	ldw	r22,60(sp)
   84414:	dcc01017 	ldw	r19,64(sp)
   84418:	dc801217 	ldw	r18,72(sp)
   8441c:	003c6c06 	br	835d0 <__alt_data_end+0xfffb7ae0>
   84420:	903e031e 	bne	r18,zero,83c30 <__alt_data_end+0xfffb8140>
   84424:	003ebb06 	br	83f14 <__alt_data_end+0xfffb8424>
   84428:	103e6c1e 	bne	r2,zero,83ddc <__alt_data_end+0xfffb82ec>
   8442c:	4080004c 	andi	r2,r8,1
   84430:	103e6a26 	beq	r2,zero,83ddc <__alt_data_end+0xfffb82ec>
   84434:	003e6606 	br	83dd0 <__alt_data_end+0xfffb82e0>
   84438:	d8c00317 	ldw	r3,12(sp)
   8443c:	00800084 	movi	r2,2
   84440:	10c02916 	blt	r2,r3,844e8 <_dtoa_r+0x167c>
   84444:	d9000c17 	ldw	r4,48(sp)
   84448:	003e8806 	br	83e6c <__alt_data_end+0xfffb837c>
   8444c:	04000084 	movi	r16,2
   84450:	003b9d06 	br	832c8 <__alt_data_end+0xfffb77d8>
   84454:	d9001317 	ldw	r4,76(sp)
   84458:	d9000515 	stw	r4,20(sp)
   8445c:	003cd606 	br	837b8 <__alt_data_end+0xfffb7cc8>
   84460:	d8801317 	ldw	r2,76(sp)
   84464:	d8800515 	stw	r2,20(sp)
   84468:	003c2a06 	br	83514 <__alt_data_end+0xfffb7a24>
   8446c:	d9800317 	ldw	r6,12(sp)
   84470:	00800084 	movi	r2,2
   84474:	11801516 	blt	r2,r6,844cc <_dtoa_r+0x1660>
   84478:	d9c00c17 	ldw	r7,48(sp)
   8447c:	d9c00615 	stw	r7,24(sp)
   84480:	003df706 	br	83c60 <__alt_data_end+0xfffb8170>
   84484:	193d3926 	beq	r3,r4,8396c <__alt_data_end+0xfffb7e7c>
   84488:	00c00f04 	movi	r3,60
   8448c:	1885c83a 	sub	r2,r3,r2
   84490:	003ddf06 	br	83c10 <__alt_data_end+0xfffb8120>
   84494:	e009883a 	mov	r4,fp
   84498:	e0001115 	stw	zero,68(fp)
   8449c:	000b883a 	mov	r5,zero
   844a0:	00865080 	call	86508 <_Balloc>
   844a4:	d8800715 	stw	r2,28(sp)
   844a8:	d8c00717 	ldw	r3,28(sp)
   844ac:	00bfffc4 	movi	r2,-1
   844b0:	01000044 	movi	r4,1
   844b4:	d8800c15 	stw	r2,48(sp)
   844b8:	e0c01015 	stw	r3,64(fp)
   844bc:	d9000b15 	stw	r4,44(sp)
   844c0:	d8800615 	stw	r2,24(sp)
   844c4:	d8002215 	stw	zero,136(sp)
   844c8:	003c4106 	br	835d0 <__alt_data_end+0xfffb7ae0>
   844cc:	d8c00c17 	ldw	r3,48(sp)
   844d0:	d8c00615 	stw	r3,24(sp)
   844d4:	003e7006 	br	83e98 <__alt_data_end+0xfffb83a8>
   844d8:	04400044 	movi	r17,1
   844dc:	003b2006 	br	83160 <__alt_data_end+0xfffb7670>
   844e0:	000b883a 	mov	r5,zero
   844e4:	003b3d06 	br	831dc <__alt_data_end+0xfffb76ec>
   844e8:	d8800c17 	ldw	r2,48(sp)
   844ec:	d8800615 	stw	r2,24(sp)
   844f0:	003e6906 	br	83e98 <__alt_data_end+0xfffb83a8>

000844f4 <__sflush_r>:
   844f4:	2880030b 	ldhu	r2,12(r5)
   844f8:	defffb04 	addi	sp,sp,-20
   844fc:	dcc00315 	stw	r19,12(sp)
   84500:	dc400115 	stw	r17,4(sp)
   84504:	dfc00415 	stw	ra,16(sp)
   84508:	dc800215 	stw	r18,8(sp)
   8450c:	dc000015 	stw	r16,0(sp)
   84510:	10c0020c 	andi	r3,r2,8
   84514:	2823883a 	mov	r17,r5
   84518:	2027883a 	mov	r19,r4
   8451c:	1800311e 	bne	r3,zero,845e4 <__sflush_r+0xf0>
   84520:	28c00117 	ldw	r3,4(r5)
   84524:	10820014 	ori	r2,r2,2048
   84528:	2880030d 	sth	r2,12(r5)
   8452c:	00c04b0e 	bge	zero,r3,8465c <__sflush_r+0x168>
   84530:	8a000a17 	ldw	r8,40(r17)
   84534:	40002326 	beq	r8,zero,845c4 <__sflush_r+0xd0>
   84538:	9c000017 	ldw	r16,0(r19)
   8453c:	10c4000c 	andi	r3,r2,4096
   84540:	98000015 	stw	zero,0(r19)
   84544:	18004826 	beq	r3,zero,84668 <__sflush_r+0x174>
   84548:	89801417 	ldw	r6,80(r17)
   8454c:	10c0010c 	andi	r3,r2,4
   84550:	18000626 	beq	r3,zero,8456c <__sflush_r+0x78>
   84554:	88c00117 	ldw	r3,4(r17)
   84558:	88800c17 	ldw	r2,48(r17)
   8455c:	30cdc83a 	sub	r6,r6,r3
   84560:	10000226 	beq	r2,zero,8456c <__sflush_r+0x78>
   84564:	88800f17 	ldw	r2,60(r17)
   84568:	308dc83a 	sub	r6,r6,r2
   8456c:	89400717 	ldw	r5,28(r17)
   84570:	000f883a 	mov	r7,zero
   84574:	9809883a 	mov	r4,r19
   84578:	403ee83a 	callr	r8
   8457c:	00ffffc4 	movi	r3,-1
   84580:	10c04426 	beq	r2,r3,84694 <__sflush_r+0x1a0>
   84584:	88c0030b 	ldhu	r3,12(r17)
   84588:	89000417 	ldw	r4,16(r17)
   8458c:	88000115 	stw	zero,4(r17)
   84590:	197dffcc 	andi	r5,r3,63487
   84594:	8940030d 	sth	r5,12(r17)
   84598:	89000015 	stw	r4,0(r17)
   8459c:	18c4000c 	andi	r3,r3,4096
   845a0:	18002c1e 	bne	r3,zero,84654 <__sflush_r+0x160>
   845a4:	89400c17 	ldw	r5,48(r17)
   845a8:	9c000015 	stw	r16,0(r19)
   845ac:	28000526 	beq	r5,zero,845c4 <__sflush_r+0xd0>
   845b0:	88801004 	addi	r2,r17,64
   845b4:	28800226 	beq	r5,r2,845c0 <__sflush_r+0xcc>
   845b8:	9809883a 	mov	r4,r19
   845bc:	0084c600 	call	84c60 <_free_r>
   845c0:	88000c15 	stw	zero,48(r17)
   845c4:	0005883a 	mov	r2,zero
   845c8:	dfc00417 	ldw	ra,16(sp)
   845cc:	dcc00317 	ldw	r19,12(sp)
   845d0:	dc800217 	ldw	r18,8(sp)
   845d4:	dc400117 	ldw	r17,4(sp)
   845d8:	dc000017 	ldw	r16,0(sp)
   845dc:	dec00504 	addi	sp,sp,20
   845e0:	f800283a 	ret
   845e4:	2c800417 	ldw	r18,16(r5)
   845e8:	903ff626 	beq	r18,zero,845c4 <__alt_data_end+0xfffb8ad4>
   845ec:	2c000017 	ldw	r16,0(r5)
   845f0:	108000cc 	andi	r2,r2,3
   845f4:	2c800015 	stw	r18,0(r5)
   845f8:	84a1c83a 	sub	r16,r16,r18
   845fc:	1000131e 	bne	r2,zero,8464c <__sflush_r+0x158>
   84600:	28800517 	ldw	r2,20(r5)
   84604:	88800215 	stw	r2,8(r17)
   84608:	04000316 	blt	zero,r16,84618 <__sflush_r+0x124>
   8460c:	003fed06 	br	845c4 <__alt_data_end+0xfffb8ad4>
   84610:	90a5883a 	add	r18,r18,r2
   84614:	043feb0e 	bge	zero,r16,845c4 <__alt_data_end+0xfffb8ad4>
   84618:	88800917 	ldw	r2,36(r17)
   8461c:	89400717 	ldw	r5,28(r17)
   84620:	800f883a 	mov	r7,r16
   84624:	900d883a 	mov	r6,r18
   84628:	9809883a 	mov	r4,r19
   8462c:	103ee83a 	callr	r2
   84630:	80a1c83a 	sub	r16,r16,r2
   84634:	00bff616 	blt	zero,r2,84610 <__alt_data_end+0xfffb8b20>
   84638:	88c0030b 	ldhu	r3,12(r17)
   8463c:	00bfffc4 	movi	r2,-1
   84640:	18c01014 	ori	r3,r3,64
   84644:	88c0030d 	sth	r3,12(r17)
   84648:	003fdf06 	br	845c8 <__alt_data_end+0xfffb8ad8>
   8464c:	0005883a 	mov	r2,zero
   84650:	003fec06 	br	84604 <__alt_data_end+0xfffb8b14>
   84654:	88801415 	stw	r2,80(r17)
   84658:	003fd206 	br	845a4 <__alt_data_end+0xfffb8ab4>
   8465c:	28c00f17 	ldw	r3,60(r5)
   84660:	00ffb316 	blt	zero,r3,84530 <__alt_data_end+0xfffb8a40>
   84664:	003fd706 	br	845c4 <__alt_data_end+0xfffb8ad4>
   84668:	89400717 	ldw	r5,28(r17)
   8466c:	000d883a 	mov	r6,zero
   84670:	01c00044 	movi	r7,1
   84674:	9809883a 	mov	r4,r19
   84678:	403ee83a 	callr	r8
   8467c:	100d883a 	mov	r6,r2
   84680:	00bfffc4 	movi	r2,-1
   84684:	30801426 	beq	r6,r2,846d8 <__sflush_r+0x1e4>
   84688:	8880030b 	ldhu	r2,12(r17)
   8468c:	8a000a17 	ldw	r8,40(r17)
   84690:	003fae06 	br	8454c <__alt_data_end+0xfffb8a5c>
   84694:	98c00017 	ldw	r3,0(r19)
   84698:	183fba26 	beq	r3,zero,84584 <__alt_data_end+0xfffb8a94>
   8469c:	01000744 	movi	r4,29
   846a0:	19000626 	beq	r3,r4,846bc <__sflush_r+0x1c8>
   846a4:	01000584 	movi	r4,22
   846a8:	19000426 	beq	r3,r4,846bc <__sflush_r+0x1c8>
   846ac:	88c0030b 	ldhu	r3,12(r17)
   846b0:	18c01014 	ori	r3,r3,64
   846b4:	88c0030d 	sth	r3,12(r17)
   846b8:	003fc306 	br	845c8 <__alt_data_end+0xfffb8ad8>
   846bc:	8880030b 	ldhu	r2,12(r17)
   846c0:	88c00417 	ldw	r3,16(r17)
   846c4:	88000115 	stw	zero,4(r17)
   846c8:	10bdffcc 	andi	r2,r2,63487
   846cc:	8880030d 	sth	r2,12(r17)
   846d0:	88c00015 	stw	r3,0(r17)
   846d4:	003fb306 	br	845a4 <__alt_data_end+0xfffb8ab4>
   846d8:	98800017 	ldw	r2,0(r19)
   846dc:	103fea26 	beq	r2,zero,84688 <__alt_data_end+0xfffb8b98>
   846e0:	00c00744 	movi	r3,29
   846e4:	10c00226 	beq	r2,r3,846f0 <__sflush_r+0x1fc>
   846e8:	00c00584 	movi	r3,22
   846ec:	10c0031e 	bne	r2,r3,846fc <__sflush_r+0x208>
   846f0:	9c000015 	stw	r16,0(r19)
   846f4:	0005883a 	mov	r2,zero
   846f8:	003fb306 	br	845c8 <__alt_data_end+0xfffb8ad8>
   846fc:	88c0030b 	ldhu	r3,12(r17)
   84700:	3005883a 	mov	r2,r6
   84704:	18c01014 	ori	r3,r3,64
   84708:	88c0030d 	sth	r3,12(r17)
   8470c:	003fae06 	br	845c8 <__alt_data_end+0xfffb8ad8>

00084710 <_fflush_r>:
   84710:	defffd04 	addi	sp,sp,-12
   84714:	dc000115 	stw	r16,4(sp)
   84718:	dfc00215 	stw	ra,8(sp)
   8471c:	2021883a 	mov	r16,r4
   84720:	20000226 	beq	r4,zero,8472c <_fflush_r+0x1c>
   84724:	20800e17 	ldw	r2,56(r4)
   84728:	10000c26 	beq	r2,zero,8475c <_fflush_r+0x4c>
   8472c:	2880030f 	ldh	r2,12(r5)
   84730:	1000051e 	bne	r2,zero,84748 <_fflush_r+0x38>
   84734:	0005883a 	mov	r2,zero
   84738:	dfc00217 	ldw	ra,8(sp)
   8473c:	dc000117 	ldw	r16,4(sp)
   84740:	dec00304 	addi	sp,sp,12
   84744:	f800283a 	ret
   84748:	8009883a 	mov	r4,r16
   8474c:	dfc00217 	ldw	ra,8(sp)
   84750:	dc000117 	ldw	r16,4(sp)
   84754:	dec00304 	addi	sp,sp,12
   84758:	00844f41 	jmpi	844f4 <__sflush_r>
   8475c:	d9400015 	stw	r5,0(sp)
   84760:	0084aec0 	call	84aec <__sinit>
   84764:	d9400017 	ldw	r5,0(sp)
   84768:	003ff006 	br	8472c <__alt_data_end+0xfffb8c3c>

0008476c <fflush>:
   8476c:	20000526 	beq	r4,zero,84784 <fflush+0x18>
   84770:	00800274 	movhi	r2,9
   84774:	1085a904 	addi	r2,r2,5796
   84778:	200b883a 	mov	r5,r4
   8477c:	11000017 	ldw	r4,0(r2)
   84780:	00847101 	jmpi	84710 <_fflush_r>
   84784:	00800274 	movhi	r2,9
   84788:	1085a804 	addi	r2,r2,5792
   8478c:	11000017 	ldw	r4,0(r2)
   84790:	01400234 	movhi	r5,8
   84794:	2951c404 	addi	r5,r5,18192
   84798:	00854f01 	jmpi	854f0 <_fwalk_reent>

0008479c <__fp_unlock>:
   8479c:	0005883a 	mov	r2,zero
   847a0:	f800283a 	ret

000847a4 <_cleanup_r>:
   847a4:	01400274 	movhi	r5,9
   847a8:	29654204 	addi	r5,r5,-27384
   847ac:	00854f01 	jmpi	854f0 <_fwalk_reent>

000847b0 <__sinit.part.1>:
   847b0:	defff704 	addi	sp,sp,-36
   847b4:	00c00234 	movhi	r3,8
   847b8:	dfc00815 	stw	ra,32(sp)
   847bc:	ddc00715 	stw	r23,28(sp)
   847c0:	dd800615 	stw	r22,24(sp)
   847c4:	dd400515 	stw	r21,20(sp)
   847c8:	dd000415 	stw	r20,16(sp)
   847cc:	dcc00315 	stw	r19,12(sp)
   847d0:	dc800215 	stw	r18,8(sp)
   847d4:	dc400115 	stw	r17,4(sp)
   847d8:	dc000015 	stw	r16,0(sp)
   847dc:	18d1e904 	addi	r3,r3,18340
   847e0:	24000117 	ldw	r16,4(r4)
   847e4:	20c00f15 	stw	r3,60(r4)
   847e8:	2080bb04 	addi	r2,r4,748
   847ec:	00c000c4 	movi	r3,3
   847f0:	20c0b915 	stw	r3,740(r4)
   847f4:	2080ba15 	stw	r2,744(r4)
   847f8:	2000b815 	stw	zero,736(r4)
   847fc:	05c00204 	movi	r23,8
   84800:	00800104 	movi	r2,4
   84804:	2025883a 	mov	r18,r4
   84808:	b80d883a 	mov	r6,r23
   8480c:	81001704 	addi	r4,r16,92
   84810:	000b883a 	mov	r5,zero
   84814:	80000015 	stw	zero,0(r16)
   84818:	80000115 	stw	zero,4(r16)
   8481c:	80000215 	stw	zero,8(r16)
   84820:	8080030d 	sth	r2,12(r16)
   84824:	80001915 	stw	zero,100(r16)
   84828:	8000038d 	sth	zero,14(r16)
   8482c:	80000415 	stw	zero,16(r16)
   84830:	80000515 	stw	zero,20(r16)
   84834:	80000615 	stw	zero,24(r16)
   84838:	00863e00 	call	863e0 <memset>
   8483c:	05800234 	movhi	r22,8
   84840:	94400217 	ldw	r17,8(r18)
   84844:	05400234 	movhi	r21,8
   84848:	05000234 	movhi	r20,8
   8484c:	04c00234 	movhi	r19,8
   84850:	b59ecc04 	addi	r22,r22,31536
   84854:	ad5ee304 	addi	r21,r21,31628
   84858:	a51f0204 	addi	r20,r20,31752
   8485c:	9cdf1904 	addi	r19,r19,31844
   84860:	85800815 	stw	r22,32(r16)
   84864:	85400915 	stw	r21,36(r16)
   84868:	85000a15 	stw	r20,40(r16)
   8486c:	84c00b15 	stw	r19,44(r16)
   84870:	84000715 	stw	r16,28(r16)
   84874:	00800284 	movi	r2,10
   84878:	8880030d 	sth	r2,12(r17)
   8487c:	00800044 	movi	r2,1
   84880:	b80d883a 	mov	r6,r23
   84884:	89001704 	addi	r4,r17,92
   84888:	000b883a 	mov	r5,zero
   8488c:	88000015 	stw	zero,0(r17)
   84890:	88000115 	stw	zero,4(r17)
   84894:	88000215 	stw	zero,8(r17)
   84898:	88001915 	stw	zero,100(r17)
   8489c:	8880038d 	sth	r2,14(r17)
   848a0:	88000415 	stw	zero,16(r17)
   848a4:	88000515 	stw	zero,20(r17)
   848a8:	88000615 	stw	zero,24(r17)
   848ac:	00863e00 	call	863e0 <memset>
   848b0:	94000317 	ldw	r16,12(r18)
   848b4:	00800484 	movi	r2,18
   848b8:	8c400715 	stw	r17,28(r17)
   848bc:	8d800815 	stw	r22,32(r17)
   848c0:	8d400915 	stw	r21,36(r17)
   848c4:	8d000a15 	stw	r20,40(r17)
   848c8:	8cc00b15 	stw	r19,44(r17)
   848cc:	8080030d 	sth	r2,12(r16)
   848d0:	00800084 	movi	r2,2
   848d4:	80000015 	stw	zero,0(r16)
   848d8:	80000115 	stw	zero,4(r16)
   848dc:	80000215 	stw	zero,8(r16)
   848e0:	80001915 	stw	zero,100(r16)
   848e4:	8080038d 	sth	r2,14(r16)
   848e8:	80000415 	stw	zero,16(r16)
   848ec:	80000515 	stw	zero,20(r16)
   848f0:	80000615 	stw	zero,24(r16)
   848f4:	b80d883a 	mov	r6,r23
   848f8:	000b883a 	mov	r5,zero
   848fc:	81001704 	addi	r4,r16,92
   84900:	00863e00 	call	863e0 <memset>
   84904:	00800044 	movi	r2,1
   84908:	84000715 	stw	r16,28(r16)
   8490c:	85800815 	stw	r22,32(r16)
   84910:	85400915 	stw	r21,36(r16)
   84914:	85000a15 	stw	r20,40(r16)
   84918:	84c00b15 	stw	r19,44(r16)
   8491c:	90800e15 	stw	r2,56(r18)
   84920:	dfc00817 	ldw	ra,32(sp)
   84924:	ddc00717 	ldw	r23,28(sp)
   84928:	dd800617 	ldw	r22,24(sp)
   8492c:	dd400517 	ldw	r21,20(sp)
   84930:	dd000417 	ldw	r20,16(sp)
   84934:	dcc00317 	ldw	r19,12(sp)
   84938:	dc800217 	ldw	r18,8(sp)
   8493c:	dc400117 	ldw	r17,4(sp)
   84940:	dc000017 	ldw	r16,0(sp)
   84944:	dec00904 	addi	sp,sp,36
   84948:	f800283a 	ret

0008494c <__fp_lock>:
   8494c:	0005883a 	mov	r2,zero
   84950:	f800283a 	ret

00084954 <__sfmoreglue>:
   84954:	defffc04 	addi	sp,sp,-16
   84958:	dc400115 	stw	r17,4(sp)
   8495c:	2c7fffc4 	addi	r17,r5,-1
   84960:	8c401a24 	muli	r17,r17,104
   84964:	dc800215 	stw	r18,8(sp)
   84968:	2825883a 	mov	r18,r5
   8496c:	89401d04 	addi	r5,r17,116
   84970:	dc000015 	stw	r16,0(sp)
   84974:	dfc00315 	stw	ra,12(sp)
   84978:	008584c0 	call	8584c <_malloc_r>
   8497c:	1021883a 	mov	r16,r2
   84980:	10000726 	beq	r2,zero,849a0 <__sfmoreglue+0x4c>
   84984:	11000304 	addi	r4,r2,12
   84988:	10000015 	stw	zero,0(r2)
   8498c:	14800115 	stw	r18,4(r2)
   84990:	11000215 	stw	r4,8(r2)
   84994:	89801a04 	addi	r6,r17,104
   84998:	000b883a 	mov	r5,zero
   8499c:	00863e00 	call	863e0 <memset>
   849a0:	8005883a 	mov	r2,r16
   849a4:	dfc00317 	ldw	ra,12(sp)
   849a8:	dc800217 	ldw	r18,8(sp)
   849ac:	dc400117 	ldw	r17,4(sp)
   849b0:	dc000017 	ldw	r16,0(sp)
   849b4:	dec00404 	addi	sp,sp,16
   849b8:	f800283a 	ret

000849bc <__sfp>:
   849bc:	defffb04 	addi	sp,sp,-20
   849c0:	dc000015 	stw	r16,0(sp)
   849c4:	04000274 	movhi	r16,9
   849c8:	8405a804 	addi	r16,r16,5792
   849cc:	dcc00315 	stw	r19,12(sp)
   849d0:	2027883a 	mov	r19,r4
   849d4:	81000017 	ldw	r4,0(r16)
   849d8:	dfc00415 	stw	ra,16(sp)
   849dc:	dc800215 	stw	r18,8(sp)
   849e0:	20800e17 	ldw	r2,56(r4)
   849e4:	dc400115 	stw	r17,4(sp)
   849e8:	1000021e 	bne	r2,zero,849f4 <__sfp+0x38>
   849ec:	00847b00 	call	847b0 <__sinit.part.1>
   849f0:	81000017 	ldw	r4,0(r16)
   849f4:	2480b804 	addi	r18,r4,736
   849f8:	047fffc4 	movi	r17,-1
   849fc:	91000117 	ldw	r4,4(r18)
   84a00:	94000217 	ldw	r16,8(r18)
   84a04:	213fffc4 	addi	r4,r4,-1
   84a08:	20000a16 	blt	r4,zero,84a34 <__sfp+0x78>
   84a0c:	8080030f 	ldh	r2,12(r16)
   84a10:	10000c26 	beq	r2,zero,84a44 <__sfp+0x88>
   84a14:	80c01d04 	addi	r3,r16,116
   84a18:	00000206 	br	84a24 <__sfp+0x68>
   84a1c:	18bfe60f 	ldh	r2,-104(r3)
   84a20:	10000826 	beq	r2,zero,84a44 <__sfp+0x88>
   84a24:	213fffc4 	addi	r4,r4,-1
   84a28:	1c3ffd04 	addi	r16,r3,-12
   84a2c:	18c01a04 	addi	r3,r3,104
   84a30:	247ffa1e 	bne	r4,r17,84a1c <__alt_data_end+0xfffb8f2c>
   84a34:	90800017 	ldw	r2,0(r18)
   84a38:	10001d26 	beq	r2,zero,84ab0 <__sfp+0xf4>
   84a3c:	1025883a 	mov	r18,r2
   84a40:	003fee06 	br	849fc <__alt_data_end+0xfffb8f0c>
   84a44:	00bfffc4 	movi	r2,-1
   84a48:	8080038d 	sth	r2,14(r16)
   84a4c:	00800044 	movi	r2,1
   84a50:	8080030d 	sth	r2,12(r16)
   84a54:	80001915 	stw	zero,100(r16)
   84a58:	80000015 	stw	zero,0(r16)
   84a5c:	80000215 	stw	zero,8(r16)
   84a60:	80000115 	stw	zero,4(r16)
   84a64:	80000415 	stw	zero,16(r16)
   84a68:	80000515 	stw	zero,20(r16)
   84a6c:	80000615 	stw	zero,24(r16)
   84a70:	01800204 	movi	r6,8
   84a74:	000b883a 	mov	r5,zero
   84a78:	81001704 	addi	r4,r16,92
   84a7c:	00863e00 	call	863e0 <memset>
   84a80:	8005883a 	mov	r2,r16
   84a84:	80000c15 	stw	zero,48(r16)
   84a88:	80000d15 	stw	zero,52(r16)
   84a8c:	80001115 	stw	zero,68(r16)
   84a90:	80001215 	stw	zero,72(r16)
   84a94:	dfc00417 	ldw	ra,16(sp)
   84a98:	dcc00317 	ldw	r19,12(sp)
   84a9c:	dc800217 	ldw	r18,8(sp)
   84aa0:	dc400117 	ldw	r17,4(sp)
   84aa4:	dc000017 	ldw	r16,0(sp)
   84aa8:	dec00504 	addi	sp,sp,20
   84aac:	f800283a 	ret
   84ab0:	01400104 	movi	r5,4
   84ab4:	9809883a 	mov	r4,r19
   84ab8:	00849540 	call	84954 <__sfmoreglue>
   84abc:	90800015 	stw	r2,0(r18)
   84ac0:	103fde1e 	bne	r2,zero,84a3c <__alt_data_end+0xfffb8f4c>
   84ac4:	00800304 	movi	r2,12
   84ac8:	98800015 	stw	r2,0(r19)
   84acc:	0005883a 	mov	r2,zero
   84ad0:	003ff006 	br	84a94 <__alt_data_end+0xfffb8fa4>

00084ad4 <_cleanup>:
   84ad4:	00800274 	movhi	r2,9
   84ad8:	1085a804 	addi	r2,r2,5792
   84adc:	11000017 	ldw	r4,0(r2)
   84ae0:	01400274 	movhi	r5,9
   84ae4:	29654204 	addi	r5,r5,-27384
   84ae8:	00854f01 	jmpi	854f0 <_fwalk_reent>

00084aec <__sinit>:
   84aec:	20800e17 	ldw	r2,56(r4)
   84af0:	10000126 	beq	r2,zero,84af8 <__sinit+0xc>
   84af4:	f800283a 	ret
   84af8:	00847b01 	jmpi	847b0 <__sinit.part.1>

00084afc <__sfp_lock_acquire>:
   84afc:	f800283a 	ret

00084b00 <__sfp_lock_release>:
   84b00:	f800283a 	ret

00084b04 <__sinit_lock_acquire>:
   84b04:	f800283a 	ret

00084b08 <__sinit_lock_release>:
   84b08:	f800283a 	ret

00084b0c <__fp_lock_all>:
   84b0c:	00800274 	movhi	r2,9
   84b10:	1085a904 	addi	r2,r2,5796
   84b14:	11000017 	ldw	r4,0(r2)
   84b18:	01400234 	movhi	r5,8
   84b1c:	29525304 	addi	r5,r5,18764
   84b20:	008542c1 	jmpi	8542c <_fwalk>

00084b24 <__fp_unlock_all>:
   84b24:	00800274 	movhi	r2,9
   84b28:	1085a904 	addi	r2,r2,5796
   84b2c:	11000017 	ldw	r4,0(r2)
   84b30:	01400234 	movhi	r5,8
   84b34:	2951e704 	addi	r5,r5,18332
   84b38:	008542c1 	jmpi	8542c <_fwalk>

00084b3c <_malloc_trim_r>:
   84b3c:	defffb04 	addi	sp,sp,-20
   84b40:	dcc00315 	stw	r19,12(sp)
   84b44:	04c00274 	movhi	r19,9
   84b48:	dc800215 	stw	r18,8(sp)
   84b4c:	dc400115 	stw	r17,4(sp)
   84b50:	dc000015 	stw	r16,0(sp)
   84b54:	dfc00415 	stw	ra,16(sp)
   84b58:	2821883a 	mov	r16,r5
   84b5c:	9cc02304 	addi	r19,r19,140
   84b60:	2025883a 	mov	r18,r4
   84b64:	008d92c0 	call	8d92c <__malloc_lock>
   84b68:	98800217 	ldw	r2,8(r19)
   84b6c:	14400117 	ldw	r17,4(r2)
   84b70:	00bfff04 	movi	r2,-4
   84b74:	88a2703a 	and	r17,r17,r2
   84b78:	8c21c83a 	sub	r16,r17,r16
   84b7c:	8403fbc4 	addi	r16,r16,4079
   84b80:	8020d33a 	srli	r16,r16,12
   84b84:	0083ffc4 	movi	r2,4095
   84b88:	843fffc4 	addi	r16,r16,-1
   84b8c:	8020933a 	slli	r16,r16,12
   84b90:	1400060e 	bge	r2,r16,84bac <_malloc_trim_r+0x70>
   84b94:	000b883a 	mov	r5,zero
   84b98:	9009883a 	mov	r4,r18
   84b9c:	0087adc0 	call	87adc <_sbrk_r>
   84ba0:	98c00217 	ldw	r3,8(r19)
   84ba4:	1c47883a 	add	r3,r3,r17
   84ba8:	10c00a26 	beq	r2,r3,84bd4 <_malloc_trim_r+0x98>
   84bac:	9009883a 	mov	r4,r18
   84bb0:	008d9500 	call	8d950 <__malloc_unlock>
   84bb4:	0005883a 	mov	r2,zero
   84bb8:	dfc00417 	ldw	ra,16(sp)
   84bbc:	dcc00317 	ldw	r19,12(sp)
   84bc0:	dc800217 	ldw	r18,8(sp)
   84bc4:	dc400117 	ldw	r17,4(sp)
   84bc8:	dc000017 	ldw	r16,0(sp)
   84bcc:	dec00504 	addi	sp,sp,20
   84bd0:	f800283a 	ret
   84bd4:	040bc83a 	sub	r5,zero,r16
   84bd8:	9009883a 	mov	r4,r18
   84bdc:	0087adc0 	call	87adc <_sbrk_r>
   84be0:	00ffffc4 	movi	r3,-1
   84be4:	10c00d26 	beq	r2,r3,84c1c <_malloc_trim_r+0xe0>
   84be8:	00c00274 	movhi	r3,9
   84bec:	18cc8504 	addi	r3,r3,12820
   84bf0:	18800017 	ldw	r2,0(r3)
   84bf4:	99000217 	ldw	r4,8(r19)
   84bf8:	8c23c83a 	sub	r17,r17,r16
   84bfc:	8c400054 	ori	r17,r17,1
   84c00:	1421c83a 	sub	r16,r2,r16
   84c04:	24400115 	stw	r17,4(r4)
   84c08:	9009883a 	mov	r4,r18
   84c0c:	1c000015 	stw	r16,0(r3)
   84c10:	008d9500 	call	8d950 <__malloc_unlock>
   84c14:	00800044 	movi	r2,1
   84c18:	003fe706 	br	84bb8 <__alt_data_end+0xfffb90c8>
   84c1c:	000b883a 	mov	r5,zero
   84c20:	9009883a 	mov	r4,r18
   84c24:	0087adc0 	call	87adc <_sbrk_r>
   84c28:	99000217 	ldw	r4,8(r19)
   84c2c:	014003c4 	movi	r5,15
   84c30:	1107c83a 	sub	r3,r2,r4
   84c34:	28ffdd0e 	bge	r5,r3,84bac <__alt_data_end+0xfffb90bc>
   84c38:	01400274 	movhi	r5,9
   84c3c:	2945ab04 	addi	r5,r5,5804
   84c40:	29400017 	ldw	r5,0(r5)
   84c44:	18c00054 	ori	r3,r3,1
   84c48:	20c00115 	stw	r3,4(r4)
   84c4c:	00c00274 	movhi	r3,9
   84c50:	1145c83a 	sub	r2,r2,r5
   84c54:	18cc8504 	addi	r3,r3,12820
   84c58:	18800015 	stw	r2,0(r3)
   84c5c:	003fd306 	br	84bac <__alt_data_end+0xfffb90bc>

00084c60 <_free_r>:
   84c60:	28004126 	beq	r5,zero,84d68 <_free_r+0x108>
   84c64:	defffd04 	addi	sp,sp,-12
   84c68:	dc400115 	stw	r17,4(sp)
   84c6c:	dc000015 	stw	r16,0(sp)
   84c70:	2023883a 	mov	r17,r4
   84c74:	2821883a 	mov	r16,r5
   84c78:	dfc00215 	stw	ra,8(sp)
   84c7c:	008d92c0 	call	8d92c <__malloc_lock>
   84c80:	81ffff17 	ldw	r7,-4(r16)
   84c84:	00bfff84 	movi	r2,-2
   84c88:	01000274 	movhi	r4,9
   84c8c:	81bffe04 	addi	r6,r16,-8
   84c90:	3884703a 	and	r2,r7,r2
   84c94:	21002304 	addi	r4,r4,140
   84c98:	308b883a 	add	r5,r6,r2
   84c9c:	2a400117 	ldw	r9,4(r5)
   84ca0:	22000217 	ldw	r8,8(r4)
   84ca4:	00ffff04 	movi	r3,-4
   84ca8:	48c6703a 	and	r3,r9,r3
   84cac:	2a005726 	beq	r5,r8,84e0c <_free_r+0x1ac>
   84cb0:	28c00115 	stw	r3,4(r5)
   84cb4:	39c0004c 	andi	r7,r7,1
   84cb8:	3800091e 	bne	r7,zero,84ce0 <_free_r+0x80>
   84cbc:	823ffe17 	ldw	r8,-8(r16)
   84cc0:	22400204 	addi	r9,r4,8
   84cc4:	320dc83a 	sub	r6,r6,r8
   84cc8:	31c00217 	ldw	r7,8(r6)
   84ccc:	1205883a 	add	r2,r2,r8
   84cd0:	3a406526 	beq	r7,r9,84e68 <_free_r+0x208>
   84cd4:	32000317 	ldw	r8,12(r6)
   84cd8:	3a000315 	stw	r8,12(r7)
   84cdc:	41c00215 	stw	r7,8(r8)
   84ce0:	28cf883a 	add	r7,r5,r3
   84ce4:	39c00117 	ldw	r7,4(r7)
   84ce8:	39c0004c 	andi	r7,r7,1
   84cec:	38003a26 	beq	r7,zero,84dd8 <_free_r+0x178>
   84cf0:	10c00054 	ori	r3,r2,1
   84cf4:	30c00115 	stw	r3,4(r6)
   84cf8:	3087883a 	add	r3,r6,r2
   84cfc:	18800015 	stw	r2,0(r3)
   84d00:	00c07fc4 	movi	r3,511
   84d04:	18801936 	bltu	r3,r2,84d6c <_free_r+0x10c>
   84d08:	1004d0fa 	srli	r2,r2,3
   84d0c:	01c00044 	movi	r7,1
   84d10:	21400117 	ldw	r5,4(r4)
   84d14:	10c00044 	addi	r3,r2,1
   84d18:	18c7883a 	add	r3,r3,r3
   84d1c:	1005d0ba 	srai	r2,r2,2
   84d20:	18c7883a 	add	r3,r3,r3
   84d24:	18c7883a 	add	r3,r3,r3
   84d28:	1907883a 	add	r3,r3,r4
   84d2c:	3884983a 	sll	r2,r7,r2
   84d30:	19c00017 	ldw	r7,0(r3)
   84d34:	1a3ffe04 	addi	r8,r3,-8
   84d38:	1144b03a 	or	r2,r2,r5
   84d3c:	32000315 	stw	r8,12(r6)
   84d40:	31c00215 	stw	r7,8(r6)
   84d44:	20800115 	stw	r2,4(r4)
   84d48:	19800015 	stw	r6,0(r3)
   84d4c:	39800315 	stw	r6,12(r7)
   84d50:	8809883a 	mov	r4,r17
   84d54:	dfc00217 	ldw	ra,8(sp)
   84d58:	dc400117 	ldw	r17,4(sp)
   84d5c:	dc000017 	ldw	r16,0(sp)
   84d60:	dec00304 	addi	sp,sp,12
   84d64:	008d9501 	jmpi	8d950 <__malloc_unlock>
   84d68:	f800283a 	ret
   84d6c:	100ad27a 	srli	r5,r2,9
   84d70:	00c00104 	movi	r3,4
   84d74:	19404a36 	bltu	r3,r5,84ea0 <_free_r+0x240>
   84d78:	100ad1ba 	srli	r5,r2,6
   84d7c:	28c00e44 	addi	r3,r5,57
   84d80:	18c7883a 	add	r3,r3,r3
   84d84:	29400e04 	addi	r5,r5,56
   84d88:	18c7883a 	add	r3,r3,r3
   84d8c:	18c7883a 	add	r3,r3,r3
   84d90:	1909883a 	add	r4,r3,r4
   84d94:	20c00017 	ldw	r3,0(r4)
   84d98:	01c00274 	movhi	r7,9
   84d9c:	213ffe04 	addi	r4,r4,-8
   84da0:	39c02304 	addi	r7,r7,140
   84da4:	20c04426 	beq	r4,r3,84eb8 <_free_r+0x258>
   84da8:	01ffff04 	movi	r7,-4
   84dac:	19400117 	ldw	r5,4(r3)
   84db0:	29ca703a 	and	r5,r5,r7
   84db4:	1140022e 	bgeu	r2,r5,84dc0 <_free_r+0x160>
   84db8:	18c00217 	ldw	r3,8(r3)
   84dbc:	20fffb1e 	bne	r4,r3,84dac <__alt_data_end+0xfffb92bc>
   84dc0:	19000317 	ldw	r4,12(r3)
   84dc4:	31000315 	stw	r4,12(r6)
   84dc8:	30c00215 	stw	r3,8(r6)
   84dcc:	21800215 	stw	r6,8(r4)
   84dd0:	19800315 	stw	r6,12(r3)
   84dd4:	003fde06 	br	84d50 <__alt_data_end+0xfffb9260>
   84dd8:	29c00217 	ldw	r7,8(r5)
   84ddc:	10c5883a 	add	r2,r2,r3
   84de0:	00c00274 	movhi	r3,9
   84de4:	18c02504 	addi	r3,r3,148
   84de8:	38c03b26 	beq	r7,r3,84ed8 <_free_r+0x278>
   84dec:	2a000317 	ldw	r8,12(r5)
   84df0:	11400054 	ori	r5,r2,1
   84df4:	3087883a 	add	r3,r6,r2
   84df8:	3a000315 	stw	r8,12(r7)
   84dfc:	41c00215 	stw	r7,8(r8)
   84e00:	31400115 	stw	r5,4(r6)
   84e04:	18800015 	stw	r2,0(r3)
   84e08:	003fbd06 	br	84d00 <__alt_data_end+0xfffb9210>
   84e0c:	39c0004c 	andi	r7,r7,1
   84e10:	10c5883a 	add	r2,r2,r3
   84e14:	3800071e 	bne	r7,zero,84e34 <_free_r+0x1d4>
   84e18:	81fffe17 	ldw	r7,-8(r16)
   84e1c:	31cdc83a 	sub	r6,r6,r7
   84e20:	30c00317 	ldw	r3,12(r6)
   84e24:	31400217 	ldw	r5,8(r6)
   84e28:	11c5883a 	add	r2,r2,r7
   84e2c:	28c00315 	stw	r3,12(r5)
   84e30:	19400215 	stw	r5,8(r3)
   84e34:	10c00054 	ori	r3,r2,1
   84e38:	30c00115 	stw	r3,4(r6)
   84e3c:	00c00274 	movhi	r3,9
   84e40:	18c5ac04 	addi	r3,r3,5808
   84e44:	18c00017 	ldw	r3,0(r3)
   84e48:	21800215 	stw	r6,8(r4)
   84e4c:	10ffc036 	bltu	r2,r3,84d50 <__alt_data_end+0xfffb9260>
   84e50:	00800274 	movhi	r2,9
   84e54:	108c7c04 	addi	r2,r2,12784
   84e58:	11400017 	ldw	r5,0(r2)
   84e5c:	8809883a 	mov	r4,r17
   84e60:	0084b3c0 	call	84b3c <_malloc_trim_r>
   84e64:	003fba06 	br	84d50 <__alt_data_end+0xfffb9260>
   84e68:	28c9883a 	add	r4,r5,r3
   84e6c:	21000117 	ldw	r4,4(r4)
   84e70:	2100004c 	andi	r4,r4,1
   84e74:	2000391e 	bne	r4,zero,84f5c <_free_r+0x2fc>
   84e78:	29c00217 	ldw	r7,8(r5)
   84e7c:	29000317 	ldw	r4,12(r5)
   84e80:	1885883a 	add	r2,r3,r2
   84e84:	10c00054 	ori	r3,r2,1
   84e88:	39000315 	stw	r4,12(r7)
   84e8c:	21c00215 	stw	r7,8(r4)
   84e90:	30c00115 	stw	r3,4(r6)
   84e94:	308d883a 	add	r6,r6,r2
   84e98:	30800015 	stw	r2,0(r6)
   84e9c:	003fac06 	br	84d50 <__alt_data_end+0xfffb9260>
   84ea0:	00c00504 	movi	r3,20
   84ea4:	19401536 	bltu	r3,r5,84efc <_free_r+0x29c>
   84ea8:	28c01704 	addi	r3,r5,92
   84eac:	18c7883a 	add	r3,r3,r3
   84eb0:	294016c4 	addi	r5,r5,91
   84eb4:	003fb406 	br	84d88 <__alt_data_end+0xfffb9298>
   84eb8:	280bd0ba 	srai	r5,r5,2
   84ebc:	00c00044 	movi	r3,1
   84ec0:	38800117 	ldw	r2,4(r7)
   84ec4:	194a983a 	sll	r5,r3,r5
   84ec8:	2007883a 	mov	r3,r4
   84ecc:	2884b03a 	or	r2,r5,r2
   84ed0:	38800115 	stw	r2,4(r7)
   84ed4:	003fbb06 	br	84dc4 <__alt_data_end+0xfffb92d4>
   84ed8:	21800515 	stw	r6,20(r4)
   84edc:	21800415 	stw	r6,16(r4)
   84ee0:	10c00054 	ori	r3,r2,1
   84ee4:	31c00315 	stw	r7,12(r6)
   84ee8:	31c00215 	stw	r7,8(r6)
   84eec:	30c00115 	stw	r3,4(r6)
   84ef0:	308d883a 	add	r6,r6,r2
   84ef4:	30800015 	stw	r2,0(r6)
   84ef8:	003f9506 	br	84d50 <__alt_data_end+0xfffb9260>
   84efc:	00c01504 	movi	r3,84
   84f00:	19400536 	bltu	r3,r5,84f18 <_free_r+0x2b8>
   84f04:	100ad33a 	srli	r5,r2,12
   84f08:	28c01bc4 	addi	r3,r5,111
   84f0c:	18c7883a 	add	r3,r3,r3
   84f10:	29401b84 	addi	r5,r5,110
   84f14:	003f9c06 	br	84d88 <__alt_data_end+0xfffb9298>
   84f18:	00c05504 	movi	r3,340
   84f1c:	19400536 	bltu	r3,r5,84f34 <_free_r+0x2d4>
   84f20:	100ad3fa 	srli	r5,r2,15
   84f24:	28c01e04 	addi	r3,r5,120
   84f28:	18c7883a 	add	r3,r3,r3
   84f2c:	29401dc4 	addi	r5,r5,119
   84f30:	003f9506 	br	84d88 <__alt_data_end+0xfffb9298>
   84f34:	00c15504 	movi	r3,1364
   84f38:	19400536 	bltu	r3,r5,84f50 <_free_r+0x2f0>
   84f3c:	100ad4ba 	srli	r5,r2,18
   84f40:	28c01f44 	addi	r3,r5,125
   84f44:	18c7883a 	add	r3,r3,r3
   84f48:	29401f04 	addi	r5,r5,124
   84f4c:	003f8e06 	br	84d88 <__alt_data_end+0xfffb9298>
   84f50:	00c03f84 	movi	r3,254
   84f54:	01401f84 	movi	r5,126
   84f58:	003f8b06 	br	84d88 <__alt_data_end+0xfffb9298>
   84f5c:	10c00054 	ori	r3,r2,1
   84f60:	30c00115 	stw	r3,4(r6)
   84f64:	308d883a 	add	r6,r6,r2
   84f68:	30800015 	stw	r2,0(r6)
   84f6c:	003f7806 	br	84d50 <__alt_data_end+0xfffb9260>

00084f70 <__sfvwrite_r>:
   84f70:	30800217 	ldw	r2,8(r6)
   84f74:	10006726 	beq	r2,zero,85114 <__sfvwrite_r+0x1a4>
   84f78:	28c0030b 	ldhu	r3,12(r5)
   84f7c:	defff404 	addi	sp,sp,-48
   84f80:	dd400715 	stw	r21,28(sp)
   84f84:	dd000615 	stw	r20,24(sp)
   84f88:	dc000215 	stw	r16,8(sp)
   84f8c:	dfc00b15 	stw	ra,44(sp)
   84f90:	df000a15 	stw	fp,40(sp)
   84f94:	ddc00915 	stw	r23,36(sp)
   84f98:	dd800815 	stw	r22,32(sp)
   84f9c:	dcc00515 	stw	r19,20(sp)
   84fa0:	dc800415 	stw	r18,16(sp)
   84fa4:	dc400315 	stw	r17,12(sp)
   84fa8:	1880020c 	andi	r2,r3,8
   84fac:	2821883a 	mov	r16,r5
   84fb0:	202b883a 	mov	r21,r4
   84fb4:	3029883a 	mov	r20,r6
   84fb8:	10002726 	beq	r2,zero,85058 <__sfvwrite_r+0xe8>
   84fbc:	28800417 	ldw	r2,16(r5)
   84fc0:	10002526 	beq	r2,zero,85058 <__sfvwrite_r+0xe8>
   84fc4:	1880008c 	andi	r2,r3,2
   84fc8:	a4400017 	ldw	r17,0(r20)
   84fcc:	10002a26 	beq	r2,zero,85078 <__sfvwrite_r+0x108>
   84fd0:	05a00034 	movhi	r22,32768
   84fd4:	0027883a 	mov	r19,zero
   84fd8:	0025883a 	mov	r18,zero
   84fdc:	b5bf0004 	addi	r22,r22,-1024
   84fe0:	980d883a 	mov	r6,r19
   84fe4:	a809883a 	mov	r4,r21
   84fe8:	90004626 	beq	r18,zero,85104 <__sfvwrite_r+0x194>
   84fec:	900f883a 	mov	r7,r18
   84ff0:	b480022e 	bgeu	r22,r18,84ffc <__sfvwrite_r+0x8c>
   84ff4:	01e00034 	movhi	r7,32768
   84ff8:	39ff0004 	addi	r7,r7,-1024
   84ffc:	80800917 	ldw	r2,36(r16)
   85000:	81400717 	ldw	r5,28(r16)
   85004:	103ee83a 	callr	r2
   85008:	0080570e 	bge	zero,r2,85168 <__sfvwrite_r+0x1f8>
   8500c:	a0c00217 	ldw	r3,8(r20)
   85010:	98a7883a 	add	r19,r19,r2
   85014:	90a5c83a 	sub	r18,r18,r2
   85018:	1885c83a 	sub	r2,r3,r2
   8501c:	a0800215 	stw	r2,8(r20)
   85020:	103fef1e 	bne	r2,zero,84fe0 <__alt_data_end+0xfffb94f0>
   85024:	0005883a 	mov	r2,zero
   85028:	dfc00b17 	ldw	ra,44(sp)
   8502c:	df000a17 	ldw	fp,40(sp)
   85030:	ddc00917 	ldw	r23,36(sp)
   85034:	dd800817 	ldw	r22,32(sp)
   85038:	dd400717 	ldw	r21,28(sp)
   8503c:	dd000617 	ldw	r20,24(sp)
   85040:	dcc00517 	ldw	r19,20(sp)
   85044:	dc800417 	ldw	r18,16(sp)
   85048:	dc400317 	ldw	r17,12(sp)
   8504c:	dc000217 	ldw	r16,8(sp)
   85050:	dec00c04 	addi	sp,sp,48
   85054:	f800283a 	ret
   85058:	800b883a 	mov	r5,r16
   8505c:	a809883a 	mov	r4,r21
   85060:	0082b180 	call	82b18 <__swsetup_r>
   85064:	1000eb1e 	bne	r2,zero,85414 <__sfvwrite_r+0x4a4>
   85068:	80c0030b 	ldhu	r3,12(r16)
   8506c:	a4400017 	ldw	r17,0(r20)
   85070:	1880008c 	andi	r2,r3,2
   85074:	103fd61e 	bne	r2,zero,84fd0 <__alt_data_end+0xfffb94e0>
   85078:	1880004c 	andi	r2,r3,1
   8507c:	10003f1e 	bne	r2,zero,8517c <__sfvwrite_r+0x20c>
   85080:	0039883a 	mov	fp,zero
   85084:	0025883a 	mov	r18,zero
   85088:	90001a26 	beq	r18,zero,850f4 <__sfvwrite_r+0x184>
   8508c:	1880800c 	andi	r2,r3,512
   85090:	84c00217 	ldw	r19,8(r16)
   85094:	10002126 	beq	r2,zero,8511c <__sfvwrite_r+0x1ac>
   85098:	982f883a 	mov	r23,r19
   8509c:	94c09336 	bltu	r18,r19,852ec <__sfvwrite_r+0x37c>
   850a0:	1881200c 	andi	r2,r3,1152
   850a4:	10009e1e 	bne	r2,zero,85320 <__sfvwrite_r+0x3b0>
   850a8:	81000017 	ldw	r4,0(r16)
   850ac:	b80d883a 	mov	r6,r23
   850b0:	e00b883a 	mov	r5,fp
   850b4:	00862840 	call	86284 <memmove>
   850b8:	80c00217 	ldw	r3,8(r16)
   850bc:	81000017 	ldw	r4,0(r16)
   850c0:	9005883a 	mov	r2,r18
   850c4:	1ce7c83a 	sub	r19,r3,r19
   850c8:	25cf883a 	add	r7,r4,r23
   850cc:	84c00215 	stw	r19,8(r16)
   850d0:	81c00015 	stw	r7,0(r16)
   850d4:	a0c00217 	ldw	r3,8(r20)
   850d8:	e0b9883a 	add	fp,fp,r2
   850dc:	90a5c83a 	sub	r18,r18,r2
   850e0:	18a7c83a 	sub	r19,r3,r2
   850e4:	a4c00215 	stw	r19,8(r20)
   850e8:	983fce26 	beq	r19,zero,85024 <__alt_data_end+0xfffb9534>
   850ec:	80c0030b 	ldhu	r3,12(r16)
   850f0:	903fe61e 	bne	r18,zero,8508c <__alt_data_end+0xfffb959c>
   850f4:	8f000017 	ldw	fp,0(r17)
   850f8:	8c800117 	ldw	r18,4(r17)
   850fc:	8c400204 	addi	r17,r17,8
   85100:	003fe106 	br	85088 <__alt_data_end+0xfffb9598>
   85104:	8cc00017 	ldw	r19,0(r17)
   85108:	8c800117 	ldw	r18,4(r17)
   8510c:	8c400204 	addi	r17,r17,8
   85110:	003fb306 	br	84fe0 <__alt_data_end+0xfffb94f0>
   85114:	0005883a 	mov	r2,zero
   85118:	f800283a 	ret
   8511c:	81000017 	ldw	r4,0(r16)
   85120:	80800417 	ldw	r2,16(r16)
   85124:	11005736 	bltu	r2,r4,85284 <__sfvwrite_r+0x314>
   85128:	85c00517 	ldw	r23,20(r16)
   8512c:	95c05536 	bltu	r18,r23,85284 <__sfvwrite_r+0x314>
   85130:	00a00034 	movhi	r2,32768
   85134:	10bfffc4 	addi	r2,r2,-1
   85138:	9009883a 	mov	r4,r18
   8513c:	1480012e 	bgeu	r2,r18,85144 <__sfvwrite_r+0x1d4>
   85140:	1009883a 	mov	r4,r2
   85144:	b80b883a 	mov	r5,r23
   85148:	008a7740 	call	8a774 <__divsi3>
   8514c:	15cf383a 	mul	r7,r2,r23
   85150:	81400717 	ldw	r5,28(r16)
   85154:	80800917 	ldw	r2,36(r16)
   85158:	e00d883a 	mov	r6,fp
   8515c:	a809883a 	mov	r4,r21
   85160:	103ee83a 	callr	r2
   85164:	00bfdb16 	blt	zero,r2,850d4 <__alt_data_end+0xfffb95e4>
   85168:	8080030b 	ldhu	r2,12(r16)
   8516c:	10801014 	ori	r2,r2,64
   85170:	8080030d 	sth	r2,12(r16)
   85174:	00bfffc4 	movi	r2,-1
   85178:	003fab06 	br	85028 <__alt_data_end+0xfffb9538>
   8517c:	0027883a 	mov	r19,zero
   85180:	0011883a 	mov	r8,zero
   85184:	0039883a 	mov	fp,zero
   85188:	0025883a 	mov	r18,zero
   8518c:	90001f26 	beq	r18,zero,8520c <__sfvwrite_r+0x29c>
   85190:	40005a26 	beq	r8,zero,852fc <__sfvwrite_r+0x38c>
   85194:	982d883a 	mov	r22,r19
   85198:	94c0012e 	bgeu	r18,r19,851a0 <__sfvwrite_r+0x230>
   8519c:	902d883a 	mov	r22,r18
   851a0:	81000017 	ldw	r4,0(r16)
   851a4:	80800417 	ldw	r2,16(r16)
   851a8:	b02f883a 	mov	r23,r22
   851ac:	81c00517 	ldw	r7,20(r16)
   851b0:	1100032e 	bgeu	r2,r4,851c0 <__sfvwrite_r+0x250>
   851b4:	80c00217 	ldw	r3,8(r16)
   851b8:	38c7883a 	add	r3,r7,r3
   851bc:	1d801816 	blt	r3,r22,85220 <__sfvwrite_r+0x2b0>
   851c0:	b1c03e16 	blt	r22,r7,852bc <__sfvwrite_r+0x34c>
   851c4:	80800917 	ldw	r2,36(r16)
   851c8:	81400717 	ldw	r5,28(r16)
   851cc:	e00d883a 	mov	r6,fp
   851d0:	da000115 	stw	r8,4(sp)
   851d4:	a809883a 	mov	r4,r21
   851d8:	103ee83a 	callr	r2
   851dc:	102f883a 	mov	r23,r2
   851e0:	da000117 	ldw	r8,4(sp)
   851e4:	00bfe00e 	bge	zero,r2,85168 <__alt_data_end+0xfffb9678>
   851e8:	9de7c83a 	sub	r19,r19,r23
   851ec:	98001f26 	beq	r19,zero,8526c <__sfvwrite_r+0x2fc>
   851f0:	a0800217 	ldw	r2,8(r20)
   851f4:	e5f9883a 	add	fp,fp,r23
   851f8:	95e5c83a 	sub	r18,r18,r23
   851fc:	15efc83a 	sub	r23,r2,r23
   85200:	a5c00215 	stw	r23,8(r20)
   85204:	b83f8726 	beq	r23,zero,85024 <__alt_data_end+0xfffb9534>
   85208:	903fe11e 	bne	r18,zero,85190 <__alt_data_end+0xfffb96a0>
   8520c:	8f000017 	ldw	fp,0(r17)
   85210:	8c800117 	ldw	r18,4(r17)
   85214:	0011883a 	mov	r8,zero
   85218:	8c400204 	addi	r17,r17,8
   8521c:	003fdb06 	br	8518c <__alt_data_end+0xfffb969c>
   85220:	180d883a 	mov	r6,r3
   85224:	e00b883a 	mov	r5,fp
   85228:	da000115 	stw	r8,4(sp)
   8522c:	d8c00015 	stw	r3,0(sp)
   85230:	00862840 	call	86284 <memmove>
   85234:	d8c00017 	ldw	r3,0(sp)
   85238:	80800017 	ldw	r2,0(r16)
   8523c:	800b883a 	mov	r5,r16
   85240:	a809883a 	mov	r4,r21
   85244:	10c5883a 	add	r2,r2,r3
   85248:	80800015 	stw	r2,0(r16)
   8524c:	d8c00015 	stw	r3,0(sp)
   85250:	00847100 	call	84710 <_fflush_r>
   85254:	d8c00017 	ldw	r3,0(sp)
   85258:	da000117 	ldw	r8,4(sp)
   8525c:	103fc21e 	bne	r2,zero,85168 <__alt_data_end+0xfffb9678>
   85260:	182f883a 	mov	r23,r3
   85264:	9de7c83a 	sub	r19,r19,r23
   85268:	983fe11e 	bne	r19,zero,851f0 <__alt_data_end+0xfffb9700>
   8526c:	800b883a 	mov	r5,r16
   85270:	a809883a 	mov	r4,r21
   85274:	00847100 	call	84710 <_fflush_r>
   85278:	103fbb1e 	bne	r2,zero,85168 <__alt_data_end+0xfffb9678>
   8527c:	0011883a 	mov	r8,zero
   85280:	003fdb06 	br	851f0 <__alt_data_end+0xfffb9700>
   85284:	94c0012e 	bgeu	r18,r19,8528c <__sfvwrite_r+0x31c>
   85288:	9027883a 	mov	r19,r18
   8528c:	980d883a 	mov	r6,r19
   85290:	e00b883a 	mov	r5,fp
   85294:	00862840 	call	86284 <memmove>
   85298:	80800217 	ldw	r2,8(r16)
   8529c:	80c00017 	ldw	r3,0(r16)
   852a0:	14c5c83a 	sub	r2,r2,r19
   852a4:	1cc7883a 	add	r3,r3,r19
   852a8:	80800215 	stw	r2,8(r16)
   852ac:	80c00015 	stw	r3,0(r16)
   852b0:	10004326 	beq	r2,zero,853c0 <__sfvwrite_r+0x450>
   852b4:	9805883a 	mov	r2,r19
   852b8:	003f8606 	br	850d4 <__alt_data_end+0xfffb95e4>
   852bc:	b00d883a 	mov	r6,r22
   852c0:	e00b883a 	mov	r5,fp
   852c4:	da000115 	stw	r8,4(sp)
   852c8:	00862840 	call	86284 <memmove>
   852cc:	80800217 	ldw	r2,8(r16)
   852d0:	80c00017 	ldw	r3,0(r16)
   852d4:	da000117 	ldw	r8,4(sp)
   852d8:	1585c83a 	sub	r2,r2,r22
   852dc:	1dad883a 	add	r22,r3,r22
   852e0:	80800215 	stw	r2,8(r16)
   852e4:	85800015 	stw	r22,0(r16)
   852e8:	003fbf06 	br	851e8 <__alt_data_end+0xfffb96f8>
   852ec:	81000017 	ldw	r4,0(r16)
   852f0:	9027883a 	mov	r19,r18
   852f4:	902f883a 	mov	r23,r18
   852f8:	003f6c06 	br	850ac <__alt_data_end+0xfffb95bc>
   852fc:	900d883a 	mov	r6,r18
   85300:	01400284 	movi	r5,10
   85304:	e009883a 	mov	r4,fp
   85308:	00860580 	call	86058 <memchr>
   8530c:	10003e26 	beq	r2,zero,85408 <__sfvwrite_r+0x498>
   85310:	10800044 	addi	r2,r2,1
   85314:	1727c83a 	sub	r19,r2,fp
   85318:	02000044 	movi	r8,1
   8531c:	003f9d06 	br	85194 <__alt_data_end+0xfffb96a4>
   85320:	80800517 	ldw	r2,20(r16)
   85324:	81400417 	ldw	r5,16(r16)
   85328:	81c00017 	ldw	r7,0(r16)
   8532c:	10a7883a 	add	r19,r2,r2
   85330:	9885883a 	add	r2,r19,r2
   85334:	1026d7fa 	srli	r19,r2,31
   85338:	396dc83a 	sub	r22,r7,r5
   8533c:	b1000044 	addi	r4,r22,1
   85340:	9885883a 	add	r2,r19,r2
   85344:	1027d07a 	srai	r19,r2,1
   85348:	2485883a 	add	r2,r4,r18
   8534c:	980d883a 	mov	r6,r19
   85350:	9880022e 	bgeu	r19,r2,8535c <__sfvwrite_r+0x3ec>
   85354:	1027883a 	mov	r19,r2
   85358:	100d883a 	mov	r6,r2
   8535c:	18c1000c 	andi	r3,r3,1024
   85360:	18001c26 	beq	r3,zero,853d4 <__sfvwrite_r+0x464>
   85364:	300b883a 	mov	r5,r6
   85368:	a809883a 	mov	r4,r21
   8536c:	008584c0 	call	8584c <_malloc_r>
   85370:	102f883a 	mov	r23,r2
   85374:	10002926 	beq	r2,zero,8541c <__sfvwrite_r+0x4ac>
   85378:	81400417 	ldw	r5,16(r16)
   8537c:	b00d883a 	mov	r6,r22
   85380:	1009883a 	mov	r4,r2
   85384:	008613c0 	call	8613c <memcpy>
   85388:	8080030b 	ldhu	r2,12(r16)
   8538c:	00fedfc4 	movi	r3,-1153
   85390:	10c4703a 	and	r2,r2,r3
   85394:	10802014 	ori	r2,r2,128
   85398:	8080030d 	sth	r2,12(r16)
   8539c:	bd89883a 	add	r4,r23,r22
   853a0:	9d8fc83a 	sub	r7,r19,r22
   853a4:	85c00415 	stw	r23,16(r16)
   853a8:	84c00515 	stw	r19,20(r16)
   853ac:	81000015 	stw	r4,0(r16)
   853b0:	9027883a 	mov	r19,r18
   853b4:	81c00215 	stw	r7,8(r16)
   853b8:	902f883a 	mov	r23,r18
   853bc:	003f3b06 	br	850ac <__alt_data_end+0xfffb95bc>
   853c0:	800b883a 	mov	r5,r16
   853c4:	a809883a 	mov	r4,r21
   853c8:	00847100 	call	84710 <_fflush_r>
   853cc:	103fb926 	beq	r2,zero,852b4 <__alt_data_end+0xfffb97c4>
   853d0:	003f6506 	br	85168 <__alt_data_end+0xfffb9678>
   853d4:	a809883a 	mov	r4,r21
   853d8:	00875040 	call	87504 <_realloc_r>
   853dc:	102f883a 	mov	r23,r2
   853e0:	103fee1e 	bne	r2,zero,8539c <__alt_data_end+0xfffb98ac>
   853e4:	81400417 	ldw	r5,16(r16)
   853e8:	a809883a 	mov	r4,r21
   853ec:	0084c600 	call	84c60 <_free_r>
   853f0:	8080030b 	ldhu	r2,12(r16)
   853f4:	00ffdfc4 	movi	r3,-129
   853f8:	1884703a 	and	r2,r3,r2
   853fc:	00c00304 	movi	r3,12
   85400:	a8c00015 	stw	r3,0(r21)
   85404:	003f5906 	br	8516c <__alt_data_end+0xfffb967c>
   85408:	94c00044 	addi	r19,r18,1
   8540c:	02000044 	movi	r8,1
   85410:	003f6006 	br	85194 <__alt_data_end+0xfffb96a4>
   85414:	00bfffc4 	movi	r2,-1
   85418:	003f0306 	br	85028 <__alt_data_end+0xfffb9538>
   8541c:	00800304 	movi	r2,12
   85420:	a8800015 	stw	r2,0(r21)
   85424:	8080030b 	ldhu	r2,12(r16)
   85428:	003f5006 	br	8516c <__alt_data_end+0xfffb967c>

0008542c <_fwalk>:
   8542c:	defff704 	addi	sp,sp,-36
   85430:	dd000415 	stw	r20,16(sp)
   85434:	dfc00815 	stw	ra,32(sp)
   85438:	ddc00715 	stw	r23,28(sp)
   8543c:	dd800615 	stw	r22,24(sp)
   85440:	dd400515 	stw	r21,20(sp)
   85444:	dcc00315 	stw	r19,12(sp)
   85448:	dc800215 	stw	r18,8(sp)
   8544c:	dc400115 	stw	r17,4(sp)
   85450:	dc000015 	stw	r16,0(sp)
   85454:	2500b804 	addi	r20,r4,736
   85458:	a0002326 	beq	r20,zero,854e8 <_fwalk+0xbc>
   8545c:	282b883a 	mov	r21,r5
   85460:	002f883a 	mov	r23,zero
   85464:	05800044 	movi	r22,1
   85468:	04ffffc4 	movi	r19,-1
   8546c:	a4400117 	ldw	r17,4(r20)
   85470:	a4800217 	ldw	r18,8(r20)
   85474:	8c7fffc4 	addi	r17,r17,-1
   85478:	88000d16 	blt	r17,zero,854b0 <_fwalk+0x84>
   8547c:	94000304 	addi	r16,r18,12
   85480:	94800384 	addi	r18,r18,14
   85484:	8080000b 	ldhu	r2,0(r16)
   85488:	8c7fffc4 	addi	r17,r17,-1
   8548c:	813ffd04 	addi	r4,r16,-12
   85490:	b080042e 	bgeu	r22,r2,854a4 <_fwalk+0x78>
   85494:	9080000f 	ldh	r2,0(r18)
   85498:	14c00226 	beq	r2,r19,854a4 <_fwalk+0x78>
   8549c:	a83ee83a 	callr	r21
   854a0:	b8aeb03a 	or	r23,r23,r2
   854a4:	84001a04 	addi	r16,r16,104
   854a8:	94801a04 	addi	r18,r18,104
   854ac:	8cfff51e 	bne	r17,r19,85484 <__alt_data_end+0xfffb9994>
   854b0:	a5000017 	ldw	r20,0(r20)
   854b4:	a03fed1e 	bne	r20,zero,8546c <__alt_data_end+0xfffb997c>
   854b8:	b805883a 	mov	r2,r23
   854bc:	dfc00817 	ldw	ra,32(sp)
   854c0:	ddc00717 	ldw	r23,28(sp)
   854c4:	dd800617 	ldw	r22,24(sp)
   854c8:	dd400517 	ldw	r21,20(sp)
   854cc:	dd000417 	ldw	r20,16(sp)
   854d0:	dcc00317 	ldw	r19,12(sp)
   854d4:	dc800217 	ldw	r18,8(sp)
   854d8:	dc400117 	ldw	r17,4(sp)
   854dc:	dc000017 	ldw	r16,0(sp)
   854e0:	dec00904 	addi	sp,sp,36
   854e4:	f800283a 	ret
   854e8:	002f883a 	mov	r23,zero
   854ec:	003ff206 	br	854b8 <__alt_data_end+0xfffb99c8>

000854f0 <_fwalk_reent>:
   854f0:	defff704 	addi	sp,sp,-36
   854f4:	dd000415 	stw	r20,16(sp)
   854f8:	dfc00815 	stw	ra,32(sp)
   854fc:	ddc00715 	stw	r23,28(sp)
   85500:	dd800615 	stw	r22,24(sp)
   85504:	dd400515 	stw	r21,20(sp)
   85508:	dcc00315 	stw	r19,12(sp)
   8550c:	dc800215 	stw	r18,8(sp)
   85510:	dc400115 	stw	r17,4(sp)
   85514:	dc000015 	stw	r16,0(sp)
   85518:	2500b804 	addi	r20,r4,736
   8551c:	a0002326 	beq	r20,zero,855ac <_fwalk_reent+0xbc>
   85520:	282b883a 	mov	r21,r5
   85524:	2027883a 	mov	r19,r4
   85528:	002f883a 	mov	r23,zero
   8552c:	05800044 	movi	r22,1
   85530:	04bfffc4 	movi	r18,-1
   85534:	a4400117 	ldw	r17,4(r20)
   85538:	a4000217 	ldw	r16,8(r20)
   8553c:	8c7fffc4 	addi	r17,r17,-1
   85540:	88000c16 	blt	r17,zero,85574 <_fwalk_reent+0x84>
   85544:	84000304 	addi	r16,r16,12
   85548:	8080000b 	ldhu	r2,0(r16)
   8554c:	8c7fffc4 	addi	r17,r17,-1
   85550:	817ffd04 	addi	r5,r16,-12
   85554:	b080052e 	bgeu	r22,r2,8556c <_fwalk_reent+0x7c>
   85558:	8080008f 	ldh	r2,2(r16)
   8555c:	9809883a 	mov	r4,r19
   85560:	14800226 	beq	r2,r18,8556c <_fwalk_reent+0x7c>
   85564:	a83ee83a 	callr	r21
   85568:	b8aeb03a 	or	r23,r23,r2
   8556c:	84001a04 	addi	r16,r16,104
   85570:	8cbff51e 	bne	r17,r18,85548 <__alt_data_end+0xfffb9a58>
   85574:	a5000017 	ldw	r20,0(r20)
   85578:	a03fee1e 	bne	r20,zero,85534 <__alt_data_end+0xfffb9a44>
   8557c:	b805883a 	mov	r2,r23
   85580:	dfc00817 	ldw	ra,32(sp)
   85584:	ddc00717 	ldw	r23,28(sp)
   85588:	dd800617 	ldw	r22,24(sp)
   8558c:	dd400517 	ldw	r21,20(sp)
   85590:	dd000417 	ldw	r20,16(sp)
   85594:	dcc00317 	ldw	r19,12(sp)
   85598:	dc800217 	ldw	r18,8(sp)
   8559c:	dc400117 	ldw	r17,4(sp)
   855a0:	dc000017 	ldw	r16,0(sp)
   855a4:	dec00904 	addi	sp,sp,36
   855a8:	f800283a 	ret
   855ac:	002f883a 	mov	r23,zero
   855b0:	003ff206 	br	8557c <__alt_data_end+0xfffb9a8c>

000855b4 <_setlocale_r>:
   855b4:	30001b26 	beq	r6,zero,85624 <_setlocale_r+0x70>
   855b8:	01400274 	movhi	r5,9
   855bc:	defffe04 	addi	sp,sp,-8
   855c0:	297e5d04 	addi	r5,r5,-1676
   855c4:	3009883a 	mov	r4,r6
   855c8:	dc000015 	stw	r16,0(sp)
   855cc:	dfc00115 	stw	ra,4(sp)
   855d0:	3021883a 	mov	r16,r6
   855d4:	0087c6c0 	call	87c6c <strcmp>
   855d8:	1000061e 	bne	r2,zero,855f4 <_setlocale_r+0x40>
   855dc:	00800274 	movhi	r2,9
   855e0:	10be5c04 	addi	r2,r2,-1680
   855e4:	dfc00117 	ldw	ra,4(sp)
   855e8:	dc000017 	ldw	r16,0(sp)
   855ec:	dec00204 	addi	sp,sp,8
   855f0:	f800283a 	ret
   855f4:	01400274 	movhi	r5,9
   855f8:	297e5c04 	addi	r5,r5,-1680
   855fc:	8009883a 	mov	r4,r16
   85600:	0087c6c0 	call	87c6c <strcmp>
   85604:	103ff526 	beq	r2,zero,855dc <__alt_data_end+0xfffb9aec>
   85608:	01400274 	movhi	r5,9
   8560c:	297e4704 	addi	r5,r5,-1764
   85610:	8009883a 	mov	r4,r16
   85614:	0087c6c0 	call	87c6c <strcmp>
   85618:	103ff026 	beq	r2,zero,855dc <__alt_data_end+0xfffb9aec>
   8561c:	0005883a 	mov	r2,zero
   85620:	003ff006 	br	855e4 <__alt_data_end+0xfffb9af4>
   85624:	00800274 	movhi	r2,9
   85628:	10be5c04 	addi	r2,r2,-1680
   8562c:	f800283a 	ret

00085630 <__locale_charset>:
   85630:	00800274 	movhi	r2,9
   85634:	10800d04 	addi	r2,r2,52
   85638:	f800283a 	ret

0008563c <__locale_mb_cur_max>:
   8563c:	00800274 	movhi	r2,9
   85640:	1085aa04 	addi	r2,r2,5800
   85644:	10800017 	ldw	r2,0(r2)
   85648:	f800283a 	ret

0008564c <__locale_msgcharset>:
   8564c:	00800274 	movhi	r2,9
   85650:	10800504 	addi	r2,r2,20
   85654:	f800283a 	ret

00085658 <__locale_cjk_lang>:
   85658:	0005883a 	mov	r2,zero
   8565c:	f800283a 	ret

00085660 <_localeconv_r>:
   85660:	00800274 	movhi	r2,9
   85664:	10801504 	addi	r2,r2,84
   85668:	f800283a 	ret

0008566c <setlocale>:
   8566c:	00800274 	movhi	r2,9
   85670:	1085a904 	addi	r2,r2,5796
   85674:	280d883a 	mov	r6,r5
   85678:	200b883a 	mov	r5,r4
   8567c:	11000017 	ldw	r4,0(r2)
   85680:	00855b41 	jmpi	855b4 <_setlocale_r>

00085684 <localeconv>:
   85684:	00800274 	movhi	r2,9
   85688:	10801504 	addi	r2,r2,84
   8568c:	f800283a 	ret

00085690 <__smakebuf_r>:
   85690:	2880030b 	ldhu	r2,12(r5)
   85694:	10c0008c 	andi	r3,r2,2
   85698:	1800411e 	bne	r3,zero,857a0 <__smakebuf_r+0x110>
   8569c:	deffec04 	addi	sp,sp,-80
   856a0:	dc000f15 	stw	r16,60(sp)
   856a4:	2821883a 	mov	r16,r5
   856a8:	2940038f 	ldh	r5,14(r5)
   856ac:	dc401015 	stw	r17,64(sp)
   856b0:	dfc01315 	stw	ra,76(sp)
   856b4:	dcc01215 	stw	r19,72(sp)
   856b8:	dc801115 	stw	r18,68(sp)
   856bc:	2023883a 	mov	r17,r4
   856c0:	28001c16 	blt	r5,zero,85734 <__smakebuf_r+0xa4>
   856c4:	d80d883a 	mov	r6,sp
   856c8:	00898140 	call	89814 <_fstat_r>
   856cc:	10001816 	blt	r2,zero,85730 <__smakebuf_r+0xa0>
   856d0:	d8800117 	ldw	r2,4(sp)
   856d4:	00e00014 	movui	r3,32768
   856d8:	10bc000c 	andi	r2,r2,61440
   856dc:	14c80020 	cmpeqi	r19,r2,8192
   856e0:	10c03726 	beq	r2,r3,857c0 <__smakebuf_r+0x130>
   856e4:	80c0030b 	ldhu	r3,12(r16)
   856e8:	18c20014 	ori	r3,r3,2048
   856ec:	80c0030d 	sth	r3,12(r16)
   856f0:	00c80004 	movi	r3,8192
   856f4:	10c0521e 	bne	r2,r3,85840 <__smakebuf_r+0x1b0>
   856f8:	8140038f 	ldh	r5,14(r16)
   856fc:	8809883a 	mov	r4,r17
   85700:	00898700 	call	89870 <_isatty_r>
   85704:	10004c26 	beq	r2,zero,85838 <__smakebuf_r+0x1a8>
   85708:	8080030b 	ldhu	r2,12(r16)
   8570c:	80c010c4 	addi	r3,r16,67
   85710:	80c00015 	stw	r3,0(r16)
   85714:	10800054 	ori	r2,r2,1
   85718:	8080030d 	sth	r2,12(r16)
   8571c:	00800044 	movi	r2,1
   85720:	80c00415 	stw	r3,16(r16)
   85724:	80800515 	stw	r2,20(r16)
   85728:	04810004 	movi	r18,1024
   8572c:	00000706 	br	8574c <__smakebuf_r+0xbc>
   85730:	8080030b 	ldhu	r2,12(r16)
   85734:	10c0200c 	andi	r3,r2,128
   85738:	18001f1e 	bne	r3,zero,857b8 <__smakebuf_r+0x128>
   8573c:	04810004 	movi	r18,1024
   85740:	10820014 	ori	r2,r2,2048
   85744:	8080030d 	sth	r2,12(r16)
   85748:	0027883a 	mov	r19,zero
   8574c:	900b883a 	mov	r5,r18
   85750:	8809883a 	mov	r4,r17
   85754:	008584c0 	call	8584c <_malloc_r>
   85758:	10002c26 	beq	r2,zero,8580c <__smakebuf_r+0x17c>
   8575c:	80c0030b 	ldhu	r3,12(r16)
   85760:	01000234 	movhi	r4,8
   85764:	2111e904 	addi	r4,r4,18340
   85768:	89000f15 	stw	r4,60(r17)
   8576c:	18c02014 	ori	r3,r3,128
   85770:	80c0030d 	sth	r3,12(r16)
   85774:	80800015 	stw	r2,0(r16)
   85778:	80800415 	stw	r2,16(r16)
   8577c:	84800515 	stw	r18,20(r16)
   85780:	98001a1e 	bne	r19,zero,857ec <__smakebuf_r+0x15c>
   85784:	dfc01317 	ldw	ra,76(sp)
   85788:	dcc01217 	ldw	r19,72(sp)
   8578c:	dc801117 	ldw	r18,68(sp)
   85790:	dc401017 	ldw	r17,64(sp)
   85794:	dc000f17 	ldw	r16,60(sp)
   85798:	dec01404 	addi	sp,sp,80
   8579c:	f800283a 	ret
   857a0:	288010c4 	addi	r2,r5,67
   857a4:	28800015 	stw	r2,0(r5)
   857a8:	28800415 	stw	r2,16(r5)
   857ac:	00800044 	movi	r2,1
   857b0:	28800515 	stw	r2,20(r5)
   857b4:	f800283a 	ret
   857b8:	04801004 	movi	r18,64
   857bc:	003fe006 	br	85740 <__alt_data_end+0xfffb9c50>
   857c0:	81000a17 	ldw	r4,40(r16)
   857c4:	00c00234 	movhi	r3,8
   857c8:	18df0204 	addi	r3,r3,31752
   857cc:	20ffc51e 	bne	r4,r3,856e4 <__alt_data_end+0xfffb9bf4>
   857d0:	8080030b 	ldhu	r2,12(r16)
   857d4:	04810004 	movi	r18,1024
   857d8:	84801315 	stw	r18,76(r16)
   857dc:	1484b03a 	or	r2,r2,r18
   857e0:	8080030d 	sth	r2,12(r16)
   857e4:	0027883a 	mov	r19,zero
   857e8:	003fd806 	br	8574c <__alt_data_end+0xfffb9c5c>
   857ec:	8140038f 	ldh	r5,14(r16)
   857f0:	8809883a 	mov	r4,r17
   857f4:	00898700 	call	89870 <_isatty_r>
   857f8:	103fe226 	beq	r2,zero,85784 <__alt_data_end+0xfffb9c94>
   857fc:	8080030b 	ldhu	r2,12(r16)
   85800:	10800054 	ori	r2,r2,1
   85804:	8080030d 	sth	r2,12(r16)
   85808:	003fde06 	br	85784 <__alt_data_end+0xfffb9c94>
   8580c:	8080030b 	ldhu	r2,12(r16)
   85810:	10c0800c 	andi	r3,r2,512
   85814:	183fdb1e 	bne	r3,zero,85784 <__alt_data_end+0xfffb9c94>
   85818:	10800094 	ori	r2,r2,2
   8581c:	80c010c4 	addi	r3,r16,67
   85820:	8080030d 	sth	r2,12(r16)
   85824:	00800044 	movi	r2,1
   85828:	80c00015 	stw	r3,0(r16)
   8582c:	80c00415 	stw	r3,16(r16)
   85830:	80800515 	stw	r2,20(r16)
   85834:	003fd306 	br	85784 <__alt_data_end+0xfffb9c94>
   85838:	04810004 	movi	r18,1024
   8583c:	003fc306 	br	8574c <__alt_data_end+0xfffb9c5c>
   85840:	0027883a 	mov	r19,zero
   85844:	04810004 	movi	r18,1024
   85848:	003fc006 	br	8574c <__alt_data_end+0xfffb9c5c>

0008584c <_malloc_r>:
   8584c:	defff504 	addi	sp,sp,-44
   85850:	dc800315 	stw	r18,12(sp)
   85854:	dfc00a15 	stw	ra,40(sp)
   85858:	df000915 	stw	fp,36(sp)
   8585c:	ddc00815 	stw	r23,32(sp)
   85860:	dd800715 	stw	r22,28(sp)
   85864:	dd400615 	stw	r21,24(sp)
   85868:	dd000515 	stw	r20,20(sp)
   8586c:	dcc00415 	stw	r19,16(sp)
   85870:	dc400215 	stw	r17,8(sp)
   85874:	dc000115 	stw	r16,4(sp)
   85878:	288002c4 	addi	r2,r5,11
   8587c:	00c00584 	movi	r3,22
   85880:	2025883a 	mov	r18,r4
   85884:	18807f2e 	bgeu	r3,r2,85a84 <_malloc_r+0x238>
   85888:	047ffe04 	movi	r17,-8
   8588c:	1462703a 	and	r17,r2,r17
   85890:	8800a316 	blt	r17,zero,85b20 <_malloc_r+0x2d4>
   85894:	8940a236 	bltu	r17,r5,85b20 <_malloc_r+0x2d4>
   85898:	008d92c0 	call	8d92c <__malloc_lock>
   8589c:	00807dc4 	movi	r2,503
   858a0:	1441e92e 	bgeu	r2,r17,86048 <_malloc_r+0x7fc>
   858a4:	8804d27a 	srli	r2,r17,9
   858a8:	1000a126 	beq	r2,zero,85b30 <_malloc_r+0x2e4>
   858ac:	00c00104 	movi	r3,4
   858b0:	18811e36 	bltu	r3,r2,85d2c <_malloc_r+0x4e0>
   858b4:	8804d1ba 	srli	r2,r17,6
   858b8:	12000e44 	addi	r8,r2,57
   858bc:	11c00e04 	addi	r7,r2,56
   858c0:	4209883a 	add	r4,r8,r8
   858c4:	04c00274 	movhi	r19,9
   858c8:	2109883a 	add	r4,r4,r4
   858cc:	9cc02304 	addi	r19,r19,140
   858d0:	2109883a 	add	r4,r4,r4
   858d4:	9909883a 	add	r4,r19,r4
   858d8:	24000117 	ldw	r16,4(r4)
   858dc:	213ffe04 	addi	r4,r4,-8
   858e0:	24009726 	beq	r4,r16,85b40 <_malloc_r+0x2f4>
   858e4:	80800117 	ldw	r2,4(r16)
   858e8:	01bfff04 	movi	r6,-4
   858ec:	014003c4 	movi	r5,15
   858f0:	1184703a 	and	r2,r2,r6
   858f4:	1447c83a 	sub	r3,r2,r17
   858f8:	28c00716 	blt	r5,r3,85918 <_malloc_r+0xcc>
   858fc:	1800920e 	bge	r3,zero,85b48 <_malloc_r+0x2fc>
   85900:	84000317 	ldw	r16,12(r16)
   85904:	24008e26 	beq	r4,r16,85b40 <_malloc_r+0x2f4>
   85908:	80800117 	ldw	r2,4(r16)
   8590c:	1184703a 	and	r2,r2,r6
   85910:	1447c83a 	sub	r3,r2,r17
   85914:	28fff90e 	bge	r5,r3,858fc <__alt_data_end+0xfffb9e0c>
   85918:	3809883a 	mov	r4,r7
   8591c:	01800274 	movhi	r6,9
   85920:	9c000417 	ldw	r16,16(r19)
   85924:	31802304 	addi	r6,r6,140
   85928:	32000204 	addi	r8,r6,8
   8592c:	82013426 	beq	r16,r8,85e00 <_malloc_r+0x5b4>
   85930:	80c00117 	ldw	r3,4(r16)
   85934:	00bfff04 	movi	r2,-4
   85938:	188e703a 	and	r7,r3,r2
   8593c:	3c45c83a 	sub	r2,r7,r17
   85940:	00c003c4 	movi	r3,15
   85944:	18811f16 	blt	r3,r2,85dc4 <_malloc_r+0x578>
   85948:	32000515 	stw	r8,20(r6)
   8594c:	32000415 	stw	r8,16(r6)
   85950:	10007f0e 	bge	r2,zero,85b50 <_malloc_r+0x304>
   85954:	00807fc4 	movi	r2,511
   85958:	11c0fd36 	bltu	r2,r7,85d50 <_malloc_r+0x504>
   8595c:	3806d0fa 	srli	r3,r7,3
   85960:	01c00044 	movi	r7,1
   85964:	30800117 	ldw	r2,4(r6)
   85968:	19400044 	addi	r5,r3,1
   8596c:	294b883a 	add	r5,r5,r5
   85970:	1807d0ba 	srai	r3,r3,2
   85974:	294b883a 	add	r5,r5,r5
   85978:	294b883a 	add	r5,r5,r5
   8597c:	298b883a 	add	r5,r5,r6
   85980:	38c6983a 	sll	r3,r7,r3
   85984:	29c00017 	ldw	r7,0(r5)
   85988:	2a7ffe04 	addi	r9,r5,-8
   8598c:	1886b03a 	or	r3,r3,r2
   85990:	82400315 	stw	r9,12(r16)
   85994:	81c00215 	stw	r7,8(r16)
   85998:	30c00115 	stw	r3,4(r6)
   8599c:	2c000015 	stw	r16,0(r5)
   859a0:	3c000315 	stw	r16,12(r7)
   859a4:	2005d0ba 	srai	r2,r4,2
   859a8:	01400044 	movi	r5,1
   859ac:	288a983a 	sll	r5,r5,r2
   859b0:	19406f36 	bltu	r3,r5,85b70 <_malloc_r+0x324>
   859b4:	28c4703a 	and	r2,r5,r3
   859b8:	10000a1e 	bne	r2,zero,859e4 <_malloc_r+0x198>
   859bc:	00bfff04 	movi	r2,-4
   859c0:	294b883a 	add	r5,r5,r5
   859c4:	2088703a 	and	r4,r4,r2
   859c8:	28c4703a 	and	r2,r5,r3
   859cc:	21000104 	addi	r4,r4,4
   859d0:	1000041e 	bne	r2,zero,859e4 <_malloc_r+0x198>
   859d4:	294b883a 	add	r5,r5,r5
   859d8:	28c4703a 	and	r2,r5,r3
   859dc:	21000104 	addi	r4,r4,4
   859e0:	103ffc26 	beq	r2,zero,859d4 <__alt_data_end+0xfffb9ee4>
   859e4:	02bfff04 	movi	r10,-4
   859e8:	024003c4 	movi	r9,15
   859ec:	21800044 	addi	r6,r4,1
   859f0:	318d883a 	add	r6,r6,r6
   859f4:	318d883a 	add	r6,r6,r6
   859f8:	318d883a 	add	r6,r6,r6
   859fc:	998d883a 	add	r6,r19,r6
   85a00:	333ffe04 	addi	r12,r6,-8
   85a04:	2017883a 	mov	r11,r4
   85a08:	31800104 	addi	r6,r6,4
   85a0c:	34000017 	ldw	r16,0(r6)
   85a10:	31fffd04 	addi	r7,r6,-12
   85a14:	81c0041e 	bne	r16,r7,85a28 <_malloc_r+0x1dc>
   85a18:	0000fb06 	br	85e08 <_malloc_r+0x5bc>
   85a1c:	1801030e 	bge	r3,zero,85e2c <_malloc_r+0x5e0>
   85a20:	84000317 	ldw	r16,12(r16)
   85a24:	81c0f826 	beq	r16,r7,85e08 <_malloc_r+0x5bc>
   85a28:	80800117 	ldw	r2,4(r16)
   85a2c:	1284703a 	and	r2,r2,r10
   85a30:	1447c83a 	sub	r3,r2,r17
   85a34:	48fff90e 	bge	r9,r3,85a1c <__alt_data_end+0xfffb9f2c>
   85a38:	80800317 	ldw	r2,12(r16)
   85a3c:	81000217 	ldw	r4,8(r16)
   85a40:	89400054 	ori	r5,r17,1
   85a44:	81400115 	stw	r5,4(r16)
   85a48:	20800315 	stw	r2,12(r4)
   85a4c:	11000215 	stw	r4,8(r2)
   85a50:	8463883a 	add	r17,r16,r17
   85a54:	9c400515 	stw	r17,20(r19)
   85a58:	9c400415 	stw	r17,16(r19)
   85a5c:	18800054 	ori	r2,r3,1
   85a60:	88800115 	stw	r2,4(r17)
   85a64:	8a000315 	stw	r8,12(r17)
   85a68:	8a000215 	stw	r8,8(r17)
   85a6c:	88e3883a 	add	r17,r17,r3
   85a70:	88c00015 	stw	r3,0(r17)
   85a74:	9009883a 	mov	r4,r18
   85a78:	008d9500 	call	8d950 <__malloc_unlock>
   85a7c:	80800204 	addi	r2,r16,8
   85a80:	00001b06 	br	85af0 <_malloc_r+0x2a4>
   85a84:	04400404 	movi	r17,16
   85a88:	89402536 	bltu	r17,r5,85b20 <_malloc_r+0x2d4>
   85a8c:	008d92c0 	call	8d92c <__malloc_lock>
   85a90:	00800184 	movi	r2,6
   85a94:	01000084 	movi	r4,2
   85a98:	04c00274 	movhi	r19,9
   85a9c:	1085883a 	add	r2,r2,r2
   85aa0:	9cc02304 	addi	r19,r19,140
   85aa4:	1085883a 	add	r2,r2,r2
   85aa8:	9885883a 	add	r2,r19,r2
   85aac:	14000117 	ldw	r16,4(r2)
   85ab0:	10fffe04 	addi	r3,r2,-8
   85ab4:	80c0d926 	beq	r16,r3,85e1c <_malloc_r+0x5d0>
   85ab8:	80c00117 	ldw	r3,4(r16)
   85abc:	81000317 	ldw	r4,12(r16)
   85ac0:	00bfff04 	movi	r2,-4
   85ac4:	1884703a 	and	r2,r3,r2
   85ac8:	81400217 	ldw	r5,8(r16)
   85acc:	8085883a 	add	r2,r16,r2
   85ad0:	10c00117 	ldw	r3,4(r2)
   85ad4:	29000315 	stw	r4,12(r5)
   85ad8:	21400215 	stw	r5,8(r4)
   85adc:	18c00054 	ori	r3,r3,1
   85ae0:	10c00115 	stw	r3,4(r2)
   85ae4:	9009883a 	mov	r4,r18
   85ae8:	008d9500 	call	8d950 <__malloc_unlock>
   85aec:	80800204 	addi	r2,r16,8
   85af0:	dfc00a17 	ldw	ra,40(sp)
   85af4:	df000917 	ldw	fp,36(sp)
   85af8:	ddc00817 	ldw	r23,32(sp)
   85afc:	dd800717 	ldw	r22,28(sp)
   85b00:	dd400617 	ldw	r21,24(sp)
   85b04:	dd000517 	ldw	r20,20(sp)
   85b08:	dcc00417 	ldw	r19,16(sp)
   85b0c:	dc800317 	ldw	r18,12(sp)
   85b10:	dc400217 	ldw	r17,8(sp)
   85b14:	dc000117 	ldw	r16,4(sp)
   85b18:	dec00b04 	addi	sp,sp,44
   85b1c:	f800283a 	ret
   85b20:	00800304 	movi	r2,12
   85b24:	90800015 	stw	r2,0(r18)
   85b28:	0005883a 	mov	r2,zero
   85b2c:	003ff006 	br	85af0 <__alt_data_end+0xfffba000>
   85b30:	01002004 	movi	r4,128
   85b34:	02001004 	movi	r8,64
   85b38:	01c00fc4 	movi	r7,63
   85b3c:	003f6106 	br	858c4 <__alt_data_end+0xfffb9dd4>
   85b40:	4009883a 	mov	r4,r8
   85b44:	003f7506 	br	8591c <__alt_data_end+0xfffb9e2c>
   85b48:	81000317 	ldw	r4,12(r16)
   85b4c:	003fde06 	br	85ac8 <__alt_data_end+0xfffb9fd8>
   85b50:	81c5883a 	add	r2,r16,r7
   85b54:	11400117 	ldw	r5,4(r2)
   85b58:	9009883a 	mov	r4,r18
   85b5c:	29400054 	ori	r5,r5,1
   85b60:	11400115 	stw	r5,4(r2)
   85b64:	008d9500 	call	8d950 <__malloc_unlock>
   85b68:	80800204 	addi	r2,r16,8
   85b6c:	003fe006 	br	85af0 <__alt_data_end+0xfffba000>
   85b70:	9c000217 	ldw	r16,8(r19)
   85b74:	00bfff04 	movi	r2,-4
   85b78:	85800117 	ldw	r22,4(r16)
   85b7c:	b0ac703a 	and	r22,r22,r2
   85b80:	b4400336 	bltu	r22,r17,85b90 <_malloc_r+0x344>
   85b84:	b445c83a 	sub	r2,r22,r17
   85b88:	00c003c4 	movi	r3,15
   85b8c:	18805d16 	blt	r3,r2,85d04 <_malloc_r+0x4b8>
   85b90:	05c00274 	movhi	r23,9
   85b94:	00800274 	movhi	r2,9
   85b98:	108c7c04 	addi	r2,r2,12784
   85b9c:	bdc5ab04 	addi	r23,r23,5804
   85ba0:	15400017 	ldw	r21,0(r2)
   85ba4:	b8c00017 	ldw	r3,0(r23)
   85ba8:	00bfffc4 	movi	r2,-1
   85bac:	858d883a 	add	r6,r16,r22
   85bb0:	8d6b883a 	add	r21,r17,r21
   85bb4:	1880ea26 	beq	r3,r2,85f60 <_malloc_r+0x714>
   85bb8:	ad4403c4 	addi	r21,r21,4111
   85bbc:	00bc0004 	movi	r2,-4096
   85bc0:	a8aa703a 	and	r21,r21,r2
   85bc4:	a80b883a 	mov	r5,r21
   85bc8:	9009883a 	mov	r4,r18
   85bcc:	d9800015 	stw	r6,0(sp)
   85bd0:	0087adc0 	call	87adc <_sbrk_r>
   85bd4:	1029883a 	mov	r20,r2
   85bd8:	00bfffc4 	movi	r2,-1
   85bdc:	d9800017 	ldw	r6,0(sp)
   85be0:	a080e826 	beq	r20,r2,85f84 <_malloc_r+0x738>
   85be4:	a180a636 	bltu	r20,r6,85e80 <_malloc_r+0x634>
   85be8:	07000274 	movhi	fp,9
   85bec:	e70c8504 	addi	fp,fp,12820
   85bf0:	e0800017 	ldw	r2,0(fp)
   85bf4:	a887883a 	add	r3,r21,r2
   85bf8:	e0c00015 	stw	r3,0(fp)
   85bfc:	3500e626 	beq	r6,r20,85f98 <_malloc_r+0x74c>
   85c00:	b9000017 	ldw	r4,0(r23)
   85c04:	00bfffc4 	movi	r2,-1
   85c08:	2080ee26 	beq	r4,r2,85fc4 <_malloc_r+0x778>
   85c0c:	a185c83a 	sub	r2,r20,r6
   85c10:	10c5883a 	add	r2,r2,r3
   85c14:	e0800015 	stw	r2,0(fp)
   85c18:	a0c001cc 	andi	r3,r20,7
   85c1c:	1800bc26 	beq	r3,zero,85f10 <_malloc_r+0x6c4>
   85c20:	a0e9c83a 	sub	r20,r20,r3
   85c24:	00840204 	movi	r2,4104
   85c28:	a5000204 	addi	r20,r20,8
   85c2c:	10c7c83a 	sub	r3,r2,r3
   85c30:	a545883a 	add	r2,r20,r21
   85c34:	1083ffcc 	andi	r2,r2,4095
   85c38:	18abc83a 	sub	r21,r3,r2
   85c3c:	a80b883a 	mov	r5,r21
   85c40:	9009883a 	mov	r4,r18
   85c44:	0087adc0 	call	87adc <_sbrk_r>
   85c48:	00ffffc4 	movi	r3,-1
   85c4c:	10c0e126 	beq	r2,r3,85fd4 <_malloc_r+0x788>
   85c50:	1505c83a 	sub	r2,r2,r20
   85c54:	1545883a 	add	r2,r2,r21
   85c58:	10800054 	ori	r2,r2,1
   85c5c:	e0c00017 	ldw	r3,0(fp)
   85c60:	9d000215 	stw	r20,8(r19)
   85c64:	a0800115 	stw	r2,4(r20)
   85c68:	a8c7883a 	add	r3,r21,r3
   85c6c:	e0c00015 	stw	r3,0(fp)
   85c70:	84c00e26 	beq	r16,r19,85cac <_malloc_r+0x460>
   85c74:	018003c4 	movi	r6,15
   85c78:	3580a72e 	bgeu	r6,r22,85f18 <_malloc_r+0x6cc>
   85c7c:	81400117 	ldw	r5,4(r16)
   85c80:	013ffe04 	movi	r4,-8
   85c84:	b0bffd04 	addi	r2,r22,-12
   85c88:	1104703a 	and	r2,r2,r4
   85c8c:	2900004c 	andi	r4,r5,1
   85c90:	2088b03a 	or	r4,r4,r2
   85c94:	81000115 	stw	r4,4(r16)
   85c98:	01400144 	movi	r5,5
   85c9c:	8089883a 	add	r4,r16,r2
   85ca0:	21400115 	stw	r5,4(r4)
   85ca4:	21400215 	stw	r5,8(r4)
   85ca8:	3080cd36 	bltu	r6,r2,85fe0 <_malloc_r+0x794>
   85cac:	00800274 	movhi	r2,9
   85cb0:	108c7b04 	addi	r2,r2,12780
   85cb4:	11000017 	ldw	r4,0(r2)
   85cb8:	20c0012e 	bgeu	r4,r3,85cc0 <_malloc_r+0x474>
   85cbc:	10c00015 	stw	r3,0(r2)
   85cc0:	00800274 	movhi	r2,9
   85cc4:	108c7a04 	addi	r2,r2,12776
   85cc8:	11000017 	ldw	r4,0(r2)
   85ccc:	9c000217 	ldw	r16,8(r19)
   85cd0:	20c0012e 	bgeu	r4,r3,85cd8 <_malloc_r+0x48c>
   85cd4:	10c00015 	stw	r3,0(r2)
   85cd8:	80c00117 	ldw	r3,4(r16)
   85cdc:	00bfff04 	movi	r2,-4
   85ce0:	1886703a 	and	r3,r3,r2
   85ce4:	1c45c83a 	sub	r2,r3,r17
   85ce8:	1c400236 	bltu	r3,r17,85cf4 <_malloc_r+0x4a8>
   85cec:	00c003c4 	movi	r3,15
   85cf0:	18800416 	blt	r3,r2,85d04 <_malloc_r+0x4b8>
   85cf4:	9009883a 	mov	r4,r18
   85cf8:	008d9500 	call	8d950 <__malloc_unlock>
   85cfc:	0005883a 	mov	r2,zero
   85d00:	003f7b06 	br	85af0 <__alt_data_end+0xfffba000>
   85d04:	88c00054 	ori	r3,r17,1
   85d08:	80c00115 	stw	r3,4(r16)
   85d0c:	8463883a 	add	r17,r16,r17
   85d10:	10800054 	ori	r2,r2,1
   85d14:	9c400215 	stw	r17,8(r19)
   85d18:	88800115 	stw	r2,4(r17)
   85d1c:	9009883a 	mov	r4,r18
   85d20:	008d9500 	call	8d950 <__malloc_unlock>
   85d24:	80800204 	addi	r2,r16,8
   85d28:	003f7106 	br	85af0 <__alt_data_end+0xfffba000>
   85d2c:	00c00504 	movi	r3,20
   85d30:	18804a2e 	bgeu	r3,r2,85e5c <_malloc_r+0x610>
   85d34:	00c01504 	movi	r3,84
   85d38:	18806e36 	bltu	r3,r2,85ef4 <_malloc_r+0x6a8>
   85d3c:	8804d33a 	srli	r2,r17,12
   85d40:	12001bc4 	addi	r8,r2,111
   85d44:	11c01b84 	addi	r7,r2,110
   85d48:	4209883a 	add	r4,r8,r8
   85d4c:	003edd06 	br	858c4 <__alt_data_end+0xfffb9dd4>
   85d50:	3804d27a 	srli	r2,r7,9
   85d54:	00c00104 	movi	r3,4
   85d58:	1880442e 	bgeu	r3,r2,85e6c <_malloc_r+0x620>
   85d5c:	00c00504 	movi	r3,20
   85d60:	18808136 	bltu	r3,r2,85f68 <_malloc_r+0x71c>
   85d64:	11401704 	addi	r5,r2,92
   85d68:	10c016c4 	addi	r3,r2,91
   85d6c:	294b883a 	add	r5,r5,r5
   85d70:	294b883a 	add	r5,r5,r5
   85d74:	294b883a 	add	r5,r5,r5
   85d78:	994b883a 	add	r5,r19,r5
   85d7c:	28800017 	ldw	r2,0(r5)
   85d80:	01800274 	movhi	r6,9
   85d84:	297ffe04 	addi	r5,r5,-8
   85d88:	31802304 	addi	r6,r6,140
   85d8c:	28806526 	beq	r5,r2,85f24 <_malloc_r+0x6d8>
   85d90:	01bfff04 	movi	r6,-4
   85d94:	10c00117 	ldw	r3,4(r2)
   85d98:	1986703a 	and	r3,r3,r6
   85d9c:	38c0022e 	bgeu	r7,r3,85da8 <_malloc_r+0x55c>
   85da0:	10800217 	ldw	r2,8(r2)
   85da4:	28bffb1e 	bne	r5,r2,85d94 <__alt_data_end+0xfffba2a4>
   85da8:	11400317 	ldw	r5,12(r2)
   85dac:	98c00117 	ldw	r3,4(r19)
   85db0:	81400315 	stw	r5,12(r16)
   85db4:	80800215 	stw	r2,8(r16)
   85db8:	2c000215 	stw	r16,8(r5)
   85dbc:	14000315 	stw	r16,12(r2)
   85dc0:	003ef806 	br	859a4 <__alt_data_end+0xfffb9eb4>
   85dc4:	88c00054 	ori	r3,r17,1
   85dc8:	80c00115 	stw	r3,4(r16)
   85dcc:	8463883a 	add	r17,r16,r17
   85dd0:	34400515 	stw	r17,20(r6)
   85dd4:	34400415 	stw	r17,16(r6)
   85dd8:	10c00054 	ori	r3,r2,1
   85ddc:	8a000315 	stw	r8,12(r17)
   85de0:	8a000215 	stw	r8,8(r17)
   85de4:	88c00115 	stw	r3,4(r17)
   85de8:	88a3883a 	add	r17,r17,r2
   85dec:	88800015 	stw	r2,0(r17)
   85df0:	9009883a 	mov	r4,r18
   85df4:	008d9500 	call	8d950 <__malloc_unlock>
   85df8:	80800204 	addi	r2,r16,8
   85dfc:	003f3c06 	br	85af0 <__alt_data_end+0xfffba000>
   85e00:	30c00117 	ldw	r3,4(r6)
   85e04:	003ee706 	br	859a4 <__alt_data_end+0xfffb9eb4>
   85e08:	5ac00044 	addi	r11,r11,1
   85e0c:	588000cc 	andi	r2,r11,3
   85e10:	31800204 	addi	r6,r6,8
   85e14:	103efd1e 	bne	r2,zero,85a0c <__alt_data_end+0xfffb9f1c>
   85e18:	00002406 	br	85eac <_malloc_r+0x660>
   85e1c:	14000317 	ldw	r16,12(r2)
   85e20:	143f251e 	bne	r2,r16,85ab8 <__alt_data_end+0xfffb9fc8>
   85e24:	21000084 	addi	r4,r4,2
   85e28:	003ebc06 	br	8591c <__alt_data_end+0xfffb9e2c>
   85e2c:	8085883a 	add	r2,r16,r2
   85e30:	10c00117 	ldw	r3,4(r2)
   85e34:	81000317 	ldw	r4,12(r16)
   85e38:	81400217 	ldw	r5,8(r16)
   85e3c:	18c00054 	ori	r3,r3,1
   85e40:	10c00115 	stw	r3,4(r2)
   85e44:	29000315 	stw	r4,12(r5)
   85e48:	21400215 	stw	r5,8(r4)
   85e4c:	9009883a 	mov	r4,r18
   85e50:	008d9500 	call	8d950 <__malloc_unlock>
   85e54:	80800204 	addi	r2,r16,8
   85e58:	003f2506 	br	85af0 <__alt_data_end+0xfffba000>
   85e5c:	12001704 	addi	r8,r2,92
   85e60:	11c016c4 	addi	r7,r2,91
   85e64:	4209883a 	add	r4,r8,r8
   85e68:	003e9606 	br	858c4 <__alt_data_end+0xfffb9dd4>
   85e6c:	3804d1ba 	srli	r2,r7,6
   85e70:	11400e44 	addi	r5,r2,57
   85e74:	10c00e04 	addi	r3,r2,56
   85e78:	294b883a 	add	r5,r5,r5
   85e7c:	003fbc06 	br	85d70 <__alt_data_end+0xfffba280>
   85e80:	84ff5926 	beq	r16,r19,85be8 <__alt_data_end+0xfffba0f8>
   85e84:	00800274 	movhi	r2,9
   85e88:	10802304 	addi	r2,r2,140
   85e8c:	14000217 	ldw	r16,8(r2)
   85e90:	00bfff04 	movi	r2,-4
   85e94:	80c00117 	ldw	r3,4(r16)
   85e98:	1886703a 	and	r3,r3,r2
   85e9c:	003f9106 	br	85ce4 <__alt_data_end+0xfffba1f4>
   85ea0:	60800217 	ldw	r2,8(r12)
   85ea4:	213fffc4 	addi	r4,r4,-1
   85ea8:	1300651e 	bne	r2,r12,86040 <_malloc_r+0x7f4>
   85eac:	208000cc 	andi	r2,r4,3
   85eb0:	633ffe04 	addi	r12,r12,-8
   85eb4:	103ffa1e 	bne	r2,zero,85ea0 <__alt_data_end+0xfffba3b0>
   85eb8:	98800117 	ldw	r2,4(r19)
   85ebc:	0146303a 	nor	r3,zero,r5
   85ec0:	1884703a 	and	r2,r3,r2
   85ec4:	98800115 	stw	r2,4(r19)
   85ec8:	294b883a 	add	r5,r5,r5
   85ecc:	117f2836 	bltu	r2,r5,85b70 <__alt_data_end+0xfffba080>
   85ed0:	283f2726 	beq	r5,zero,85b70 <__alt_data_end+0xfffba080>
   85ed4:	2886703a 	and	r3,r5,r2
   85ed8:	5809883a 	mov	r4,r11
   85edc:	183ec31e 	bne	r3,zero,859ec <__alt_data_end+0xfffb9efc>
   85ee0:	294b883a 	add	r5,r5,r5
   85ee4:	2886703a 	and	r3,r5,r2
   85ee8:	21000104 	addi	r4,r4,4
   85eec:	183ffc26 	beq	r3,zero,85ee0 <__alt_data_end+0xfffba3f0>
   85ef0:	003ebe06 	br	859ec <__alt_data_end+0xfffb9efc>
   85ef4:	00c05504 	movi	r3,340
   85ef8:	18801236 	bltu	r3,r2,85f44 <_malloc_r+0x6f8>
   85efc:	8804d3fa 	srli	r2,r17,15
   85f00:	12001e04 	addi	r8,r2,120
   85f04:	11c01dc4 	addi	r7,r2,119
   85f08:	4209883a 	add	r4,r8,r8
   85f0c:	003e6d06 	br	858c4 <__alt_data_end+0xfffb9dd4>
   85f10:	00c40004 	movi	r3,4096
   85f14:	003f4606 	br	85c30 <__alt_data_end+0xfffba140>
   85f18:	00800044 	movi	r2,1
   85f1c:	a0800115 	stw	r2,4(r20)
   85f20:	003f7406 	br	85cf4 <__alt_data_end+0xfffba204>
   85f24:	1805d0ba 	srai	r2,r3,2
   85f28:	01c00044 	movi	r7,1
   85f2c:	30c00117 	ldw	r3,4(r6)
   85f30:	388e983a 	sll	r7,r7,r2
   85f34:	2805883a 	mov	r2,r5
   85f38:	38c6b03a 	or	r3,r7,r3
   85f3c:	30c00115 	stw	r3,4(r6)
   85f40:	003f9b06 	br	85db0 <__alt_data_end+0xfffba2c0>
   85f44:	00c15504 	movi	r3,1364
   85f48:	18801a36 	bltu	r3,r2,85fb4 <_malloc_r+0x768>
   85f4c:	8804d4ba 	srli	r2,r17,18
   85f50:	12001f44 	addi	r8,r2,125
   85f54:	11c01f04 	addi	r7,r2,124
   85f58:	4209883a 	add	r4,r8,r8
   85f5c:	003e5906 	br	858c4 <__alt_data_end+0xfffb9dd4>
   85f60:	ad400404 	addi	r21,r21,16
   85f64:	003f1706 	br	85bc4 <__alt_data_end+0xfffba0d4>
   85f68:	00c01504 	movi	r3,84
   85f6c:	18802336 	bltu	r3,r2,85ffc <_malloc_r+0x7b0>
   85f70:	3804d33a 	srli	r2,r7,12
   85f74:	11401bc4 	addi	r5,r2,111
   85f78:	10c01b84 	addi	r3,r2,110
   85f7c:	294b883a 	add	r5,r5,r5
   85f80:	003f7b06 	br	85d70 <__alt_data_end+0xfffba280>
   85f84:	9c000217 	ldw	r16,8(r19)
   85f88:	00bfff04 	movi	r2,-4
   85f8c:	80c00117 	ldw	r3,4(r16)
   85f90:	1886703a 	and	r3,r3,r2
   85f94:	003f5306 	br	85ce4 <__alt_data_end+0xfffba1f4>
   85f98:	3083ffcc 	andi	r2,r6,4095
   85f9c:	103f181e 	bne	r2,zero,85c00 <__alt_data_end+0xfffba110>
   85fa0:	99000217 	ldw	r4,8(r19)
   85fa4:	b545883a 	add	r2,r22,r21
   85fa8:	10800054 	ori	r2,r2,1
   85fac:	20800115 	stw	r2,4(r4)
   85fb0:	003f3e06 	br	85cac <__alt_data_end+0xfffba1bc>
   85fb4:	01003f84 	movi	r4,254
   85fb8:	02001fc4 	movi	r8,127
   85fbc:	01c01f84 	movi	r7,126
   85fc0:	003e4006 	br	858c4 <__alt_data_end+0xfffb9dd4>
   85fc4:	00800274 	movhi	r2,9
   85fc8:	1085ab04 	addi	r2,r2,5804
   85fcc:	15000015 	stw	r20,0(r2)
   85fd0:	003f1106 	br	85c18 <__alt_data_end+0xfffba128>
   85fd4:	00800044 	movi	r2,1
   85fd8:	002b883a 	mov	r21,zero
   85fdc:	003f1f06 	br	85c5c <__alt_data_end+0xfffba16c>
   85fe0:	81400204 	addi	r5,r16,8
   85fe4:	9009883a 	mov	r4,r18
   85fe8:	0084c600 	call	84c60 <_free_r>
   85fec:	00800274 	movhi	r2,9
   85ff0:	108c8504 	addi	r2,r2,12820
   85ff4:	10c00017 	ldw	r3,0(r2)
   85ff8:	003f2c06 	br	85cac <__alt_data_end+0xfffba1bc>
   85ffc:	00c05504 	movi	r3,340
   86000:	18800536 	bltu	r3,r2,86018 <_malloc_r+0x7cc>
   86004:	3804d3fa 	srli	r2,r7,15
   86008:	11401e04 	addi	r5,r2,120
   8600c:	10c01dc4 	addi	r3,r2,119
   86010:	294b883a 	add	r5,r5,r5
   86014:	003f5606 	br	85d70 <__alt_data_end+0xfffba280>
   86018:	00c15504 	movi	r3,1364
   8601c:	18800536 	bltu	r3,r2,86034 <_malloc_r+0x7e8>
   86020:	3804d4ba 	srli	r2,r7,18
   86024:	11401f44 	addi	r5,r2,125
   86028:	10c01f04 	addi	r3,r2,124
   8602c:	294b883a 	add	r5,r5,r5
   86030:	003f4f06 	br	85d70 <__alt_data_end+0xfffba280>
   86034:	01403f84 	movi	r5,254
   86038:	00c01f84 	movi	r3,126
   8603c:	003f4c06 	br	85d70 <__alt_data_end+0xfffba280>
   86040:	98800117 	ldw	r2,4(r19)
   86044:	003fa006 	br	85ec8 <__alt_data_end+0xfffba3d8>
   86048:	8808d0fa 	srli	r4,r17,3
   8604c:	20800044 	addi	r2,r4,1
   86050:	1085883a 	add	r2,r2,r2
   86054:	003e9006 	br	85a98 <__alt_data_end+0xfffb9fa8>

00086058 <memchr>:
   86058:	208000cc 	andi	r2,r4,3
   8605c:	280f883a 	mov	r7,r5
   86060:	10003426 	beq	r2,zero,86134 <memchr+0xdc>
   86064:	30bfffc4 	addi	r2,r6,-1
   86068:	30001a26 	beq	r6,zero,860d4 <memchr+0x7c>
   8606c:	20c00003 	ldbu	r3,0(r4)
   86070:	29803fcc 	andi	r6,r5,255
   86074:	30c0051e 	bne	r6,r3,8608c <memchr+0x34>
   86078:	00001806 	br	860dc <memchr+0x84>
   8607c:	10001526 	beq	r2,zero,860d4 <memchr+0x7c>
   86080:	20c00003 	ldbu	r3,0(r4)
   86084:	10bfffc4 	addi	r2,r2,-1
   86088:	30c01426 	beq	r6,r3,860dc <memchr+0x84>
   8608c:	21000044 	addi	r4,r4,1
   86090:	20c000cc 	andi	r3,r4,3
   86094:	183ff91e 	bne	r3,zero,8607c <__alt_data_end+0xfffba58c>
   86098:	020000c4 	movi	r8,3
   8609c:	40801136 	bltu	r8,r2,860e4 <memchr+0x8c>
   860a0:	10000c26 	beq	r2,zero,860d4 <memchr+0x7c>
   860a4:	20c00003 	ldbu	r3,0(r4)
   860a8:	29403fcc 	andi	r5,r5,255
   860ac:	28c00b26 	beq	r5,r3,860dc <memchr+0x84>
   860b0:	20c00044 	addi	r3,r4,1
   860b4:	39803fcc 	andi	r6,r7,255
   860b8:	2089883a 	add	r4,r4,r2
   860bc:	00000306 	br	860cc <memchr+0x74>
   860c0:	18c00044 	addi	r3,r3,1
   860c4:	197fffc3 	ldbu	r5,-1(r3)
   860c8:	31400526 	beq	r6,r5,860e0 <memchr+0x88>
   860cc:	1805883a 	mov	r2,r3
   860d0:	20fffb1e 	bne	r4,r3,860c0 <__alt_data_end+0xfffba5d0>
   860d4:	0005883a 	mov	r2,zero
   860d8:	f800283a 	ret
   860dc:	2005883a 	mov	r2,r4
   860e0:	f800283a 	ret
   860e4:	28c03fcc 	andi	r3,r5,255
   860e8:	1812923a 	slli	r9,r3,8
   860ec:	02ffbff4 	movhi	r11,65279
   860f0:	02a02074 	movhi	r10,32897
   860f4:	48d2b03a 	or	r9,r9,r3
   860f8:	4806943a 	slli	r3,r9,16
   860fc:	5affbfc4 	addi	r11,r11,-257
   86100:	52a02004 	addi	r10,r10,-32640
   86104:	48d2b03a 	or	r9,r9,r3
   86108:	20c00017 	ldw	r3,0(r4)
   8610c:	48c6f03a 	xor	r3,r9,r3
   86110:	1acd883a 	add	r6,r3,r11
   86114:	00c6303a 	nor	r3,zero,r3
   86118:	30c6703a 	and	r3,r6,r3
   8611c:	1a86703a 	and	r3,r3,r10
   86120:	183fe01e 	bne	r3,zero,860a4 <__alt_data_end+0xfffba5b4>
   86124:	10bfff04 	addi	r2,r2,-4
   86128:	21000104 	addi	r4,r4,4
   8612c:	40bff636 	bltu	r8,r2,86108 <__alt_data_end+0xfffba618>
   86130:	003fdb06 	br	860a0 <__alt_data_end+0xfffba5b0>
   86134:	3005883a 	mov	r2,r6
   86138:	003fd706 	br	86098 <__alt_data_end+0xfffba5a8>

0008613c <memcpy>:
   8613c:	defffd04 	addi	sp,sp,-12
   86140:	dfc00215 	stw	ra,8(sp)
   86144:	dc400115 	stw	r17,4(sp)
   86148:	dc000015 	stw	r16,0(sp)
   8614c:	00c003c4 	movi	r3,15
   86150:	2005883a 	mov	r2,r4
   86154:	1980452e 	bgeu	r3,r6,8626c <memcpy+0x130>
   86158:	2906b03a 	or	r3,r5,r4
   8615c:	18c000cc 	andi	r3,r3,3
   86160:	1800441e 	bne	r3,zero,86274 <memcpy+0x138>
   86164:	347ffc04 	addi	r17,r6,-16
   86168:	8822d13a 	srli	r17,r17,4
   8616c:	28c00104 	addi	r3,r5,4
   86170:	23400104 	addi	r13,r4,4
   86174:	8820913a 	slli	r16,r17,4
   86178:	2b000204 	addi	r12,r5,8
   8617c:	22c00204 	addi	r11,r4,8
   86180:	84000504 	addi	r16,r16,20
   86184:	2a800304 	addi	r10,r5,12
   86188:	22400304 	addi	r9,r4,12
   8618c:	2c21883a 	add	r16,r5,r16
   86190:	2811883a 	mov	r8,r5
   86194:	200f883a 	mov	r7,r4
   86198:	41000017 	ldw	r4,0(r8)
   8619c:	1fc00017 	ldw	ra,0(r3)
   861a0:	63c00017 	ldw	r15,0(r12)
   861a4:	39000015 	stw	r4,0(r7)
   861a8:	53800017 	ldw	r14,0(r10)
   861ac:	6fc00015 	stw	ra,0(r13)
   861b0:	5bc00015 	stw	r15,0(r11)
   861b4:	4b800015 	stw	r14,0(r9)
   861b8:	18c00404 	addi	r3,r3,16
   861bc:	39c00404 	addi	r7,r7,16
   861c0:	42000404 	addi	r8,r8,16
   861c4:	6b400404 	addi	r13,r13,16
   861c8:	63000404 	addi	r12,r12,16
   861cc:	5ac00404 	addi	r11,r11,16
   861d0:	52800404 	addi	r10,r10,16
   861d4:	4a400404 	addi	r9,r9,16
   861d8:	1c3fef1e 	bne	r3,r16,86198 <__alt_data_end+0xfffba6a8>
   861dc:	89c00044 	addi	r7,r17,1
   861e0:	380e913a 	slli	r7,r7,4
   861e4:	310003cc 	andi	r4,r6,15
   861e8:	02c000c4 	movi	r11,3
   861ec:	11c7883a 	add	r3,r2,r7
   861f0:	29cb883a 	add	r5,r5,r7
   861f4:	5900212e 	bgeu	r11,r4,8627c <memcpy+0x140>
   861f8:	1813883a 	mov	r9,r3
   861fc:	2811883a 	mov	r8,r5
   86200:	200f883a 	mov	r7,r4
   86204:	42800017 	ldw	r10,0(r8)
   86208:	4a400104 	addi	r9,r9,4
   8620c:	39ffff04 	addi	r7,r7,-4
   86210:	4abfff15 	stw	r10,-4(r9)
   86214:	42000104 	addi	r8,r8,4
   86218:	59fffa36 	bltu	r11,r7,86204 <__alt_data_end+0xfffba714>
   8621c:	213fff04 	addi	r4,r4,-4
   86220:	2008d0ba 	srli	r4,r4,2
   86224:	318000cc 	andi	r6,r6,3
   86228:	21000044 	addi	r4,r4,1
   8622c:	2109883a 	add	r4,r4,r4
   86230:	2109883a 	add	r4,r4,r4
   86234:	1907883a 	add	r3,r3,r4
   86238:	290b883a 	add	r5,r5,r4
   8623c:	30000626 	beq	r6,zero,86258 <memcpy+0x11c>
   86240:	198d883a 	add	r6,r3,r6
   86244:	29c00003 	ldbu	r7,0(r5)
   86248:	18c00044 	addi	r3,r3,1
   8624c:	29400044 	addi	r5,r5,1
   86250:	19ffffc5 	stb	r7,-1(r3)
   86254:	19bffb1e 	bne	r3,r6,86244 <__alt_data_end+0xfffba754>
   86258:	dfc00217 	ldw	ra,8(sp)
   8625c:	dc400117 	ldw	r17,4(sp)
   86260:	dc000017 	ldw	r16,0(sp)
   86264:	dec00304 	addi	sp,sp,12
   86268:	f800283a 	ret
   8626c:	2007883a 	mov	r3,r4
   86270:	003ff206 	br	8623c <__alt_data_end+0xfffba74c>
   86274:	2007883a 	mov	r3,r4
   86278:	003ff106 	br	86240 <__alt_data_end+0xfffba750>
   8627c:	200d883a 	mov	r6,r4
   86280:	003fee06 	br	8623c <__alt_data_end+0xfffba74c>

00086284 <memmove>:
   86284:	2005883a 	mov	r2,r4
   86288:	29000b2e 	bgeu	r5,r4,862b8 <memmove+0x34>
   8628c:	298f883a 	add	r7,r5,r6
   86290:	21c0092e 	bgeu	r4,r7,862b8 <memmove+0x34>
   86294:	2187883a 	add	r3,r4,r6
   86298:	198bc83a 	sub	r5,r3,r6
   8629c:	30004826 	beq	r6,zero,863c0 <memmove+0x13c>
   862a0:	39ffffc4 	addi	r7,r7,-1
   862a4:	39000003 	ldbu	r4,0(r7)
   862a8:	18ffffc4 	addi	r3,r3,-1
   862ac:	19000005 	stb	r4,0(r3)
   862b0:	28fffb1e 	bne	r5,r3,862a0 <__alt_data_end+0xfffba7b0>
   862b4:	f800283a 	ret
   862b8:	00c003c4 	movi	r3,15
   862bc:	1980412e 	bgeu	r3,r6,863c4 <memmove+0x140>
   862c0:	2886b03a 	or	r3,r5,r2
   862c4:	18c000cc 	andi	r3,r3,3
   862c8:	1800401e 	bne	r3,zero,863cc <memmove+0x148>
   862cc:	33fffc04 	addi	r15,r6,-16
   862d0:	781ed13a 	srli	r15,r15,4
   862d4:	28c00104 	addi	r3,r5,4
   862d8:	13400104 	addi	r13,r2,4
   862dc:	781c913a 	slli	r14,r15,4
   862e0:	2b000204 	addi	r12,r5,8
   862e4:	12c00204 	addi	r11,r2,8
   862e8:	73800504 	addi	r14,r14,20
   862ec:	2a800304 	addi	r10,r5,12
   862f0:	12400304 	addi	r9,r2,12
   862f4:	2b9d883a 	add	r14,r5,r14
   862f8:	2811883a 	mov	r8,r5
   862fc:	100f883a 	mov	r7,r2
   86300:	41000017 	ldw	r4,0(r8)
   86304:	39c00404 	addi	r7,r7,16
   86308:	18c00404 	addi	r3,r3,16
   8630c:	393ffc15 	stw	r4,-16(r7)
   86310:	193ffc17 	ldw	r4,-16(r3)
   86314:	6b400404 	addi	r13,r13,16
   86318:	5ac00404 	addi	r11,r11,16
   8631c:	693ffc15 	stw	r4,-16(r13)
   86320:	61000017 	ldw	r4,0(r12)
   86324:	4a400404 	addi	r9,r9,16
   86328:	42000404 	addi	r8,r8,16
   8632c:	593ffc15 	stw	r4,-16(r11)
   86330:	51000017 	ldw	r4,0(r10)
   86334:	63000404 	addi	r12,r12,16
   86338:	52800404 	addi	r10,r10,16
   8633c:	493ffc15 	stw	r4,-16(r9)
   86340:	1bbfef1e 	bne	r3,r14,86300 <__alt_data_end+0xfffba810>
   86344:	79000044 	addi	r4,r15,1
   86348:	2008913a 	slli	r4,r4,4
   8634c:	328003cc 	andi	r10,r6,15
   86350:	02c000c4 	movi	r11,3
   86354:	1107883a 	add	r3,r2,r4
   86358:	290b883a 	add	r5,r5,r4
   8635c:	5a801e2e 	bgeu	r11,r10,863d8 <memmove+0x154>
   86360:	1813883a 	mov	r9,r3
   86364:	2811883a 	mov	r8,r5
   86368:	500f883a 	mov	r7,r10
   8636c:	41000017 	ldw	r4,0(r8)
   86370:	4a400104 	addi	r9,r9,4
   86374:	39ffff04 	addi	r7,r7,-4
   86378:	493fff15 	stw	r4,-4(r9)
   8637c:	42000104 	addi	r8,r8,4
   86380:	59fffa36 	bltu	r11,r7,8636c <__alt_data_end+0xfffba87c>
   86384:	513fff04 	addi	r4,r10,-4
   86388:	2008d0ba 	srli	r4,r4,2
   8638c:	318000cc 	andi	r6,r6,3
   86390:	21000044 	addi	r4,r4,1
   86394:	2109883a 	add	r4,r4,r4
   86398:	2109883a 	add	r4,r4,r4
   8639c:	1907883a 	add	r3,r3,r4
   863a0:	290b883a 	add	r5,r5,r4
   863a4:	30000b26 	beq	r6,zero,863d4 <memmove+0x150>
   863a8:	198d883a 	add	r6,r3,r6
   863ac:	29c00003 	ldbu	r7,0(r5)
   863b0:	18c00044 	addi	r3,r3,1
   863b4:	29400044 	addi	r5,r5,1
   863b8:	19ffffc5 	stb	r7,-1(r3)
   863bc:	19bffb1e 	bne	r3,r6,863ac <__alt_data_end+0xfffba8bc>
   863c0:	f800283a 	ret
   863c4:	1007883a 	mov	r3,r2
   863c8:	003ff606 	br	863a4 <__alt_data_end+0xfffba8b4>
   863cc:	1007883a 	mov	r3,r2
   863d0:	003ff506 	br	863a8 <__alt_data_end+0xfffba8b8>
   863d4:	f800283a 	ret
   863d8:	500d883a 	mov	r6,r10
   863dc:	003ff106 	br	863a4 <__alt_data_end+0xfffba8b4>

000863e0 <memset>:
   863e0:	20c000cc 	andi	r3,r4,3
   863e4:	2005883a 	mov	r2,r4
   863e8:	18004426 	beq	r3,zero,864fc <memset+0x11c>
   863ec:	31ffffc4 	addi	r7,r6,-1
   863f0:	30004026 	beq	r6,zero,864f4 <memset+0x114>
   863f4:	2813883a 	mov	r9,r5
   863f8:	200d883a 	mov	r6,r4
   863fc:	2007883a 	mov	r3,r4
   86400:	00000406 	br	86414 <memset+0x34>
   86404:	3a3fffc4 	addi	r8,r7,-1
   86408:	31800044 	addi	r6,r6,1
   8640c:	38003926 	beq	r7,zero,864f4 <memset+0x114>
   86410:	400f883a 	mov	r7,r8
   86414:	18c00044 	addi	r3,r3,1
   86418:	32400005 	stb	r9,0(r6)
   8641c:	1a0000cc 	andi	r8,r3,3
   86420:	403ff81e 	bne	r8,zero,86404 <__alt_data_end+0xfffba914>
   86424:	010000c4 	movi	r4,3
   86428:	21c02d2e 	bgeu	r4,r7,864e0 <memset+0x100>
   8642c:	29003fcc 	andi	r4,r5,255
   86430:	200c923a 	slli	r6,r4,8
   86434:	3108b03a 	or	r4,r6,r4
   86438:	200c943a 	slli	r6,r4,16
   8643c:	218cb03a 	or	r6,r4,r6
   86440:	010003c4 	movi	r4,15
   86444:	21c0182e 	bgeu	r4,r7,864a8 <memset+0xc8>
   86448:	3b3ffc04 	addi	r12,r7,-16
   8644c:	6018d13a 	srli	r12,r12,4
   86450:	1a000104 	addi	r8,r3,4
   86454:	1ac00204 	addi	r11,r3,8
   86458:	6008913a 	slli	r4,r12,4
   8645c:	1a800304 	addi	r10,r3,12
   86460:	1813883a 	mov	r9,r3
   86464:	21000504 	addi	r4,r4,20
   86468:	1909883a 	add	r4,r3,r4
   8646c:	49800015 	stw	r6,0(r9)
   86470:	41800015 	stw	r6,0(r8)
   86474:	59800015 	stw	r6,0(r11)
   86478:	51800015 	stw	r6,0(r10)
   8647c:	42000404 	addi	r8,r8,16
   86480:	4a400404 	addi	r9,r9,16
   86484:	5ac00404 	addi	r11,r11,16
   86488:	52800404 	addi	r10,r10,16
   8648c:	413ff71e 	bne	r8,r4,8646c <__alt_data_end+0xfffba97c>
   86490:	63000044 	addi	r12,r12,1
   86494:	6018913a 	slli	r12,r12,4
   86498:	39c003cc 	andi	r7,r7,15
   8649c:	010000c4 	movi	r4,3
   864a0:	1b07883a 	add	r3,r3,r12
   864a4:	21c00e2e 	bgeu	r4,r7,864e0 <memset+0x100>
   864a8:	1813883a 	mov	r9,r3
   864ac:	3811883a 	mov	r8,r7
   864b0:	010000c4 	movi	r4,3
   864b4:	49800015 	stw	r6,0(r9)
   864b8:	423fff04 	addi	r8,r8,-4
   864bc:	4a400104 	addi	r9,r9,4
   864c0:	223ffc36 	bltu	r4,r8,864b4 <__alt_data_end+0xfffba9c4>
   864c4:	393fff04 	addi	r4,r7,-4
   864c8:	2008d0ba 	srli	r4,r4,2
   864cc:	39c000cc 	andi	r7,r7,3
   864d0:	21000044 	addi	r4,r4,1
   864d4:	2109883a 	add	r4,r4,r4
   864d8:	2109883a 	add	r4,r4,r4
   864dc:	1907883a 	add	r3,r3,r4
   864e0:	38000526 	beq	r7,zero,864f8 <memset+0x118>
   864e4:	19cf883a 	add	r7,r3,r7
   864e8:	19400005 	stb	r5,0(r3)
   864ec:	18c00044 	addi	r3,r3,1
   864f0:	38fffd1e 	bne	r7,r3,864e8 <__alt_data_end+0xfffba9f8>
   864f4:	f800283a 	ret
   864f8:	f800283a 	ret
   864fc:	2007883a 	mov	r3,r4
   86500:	300f883a 	mov	r7,r6
   86504:	003fc706 	br	86424 <__alt_data_end+0xfffba934>

00086508 <_Balloc>:
   86508:	20801317 	ldw	r2,76(r4)
   8650c:	defffc04 	addi	sp,sp,-16
   86510:	dc400115 	stw	r17,4(sp)
   86514:	dc000015 	stw	r16,0(sp)
   86518:	dfc00315 	stw	ra,12(sp)
   8651c:	dc800215 	stw	r18,8(sp)
   86520:	2023883a 	mov	r17,r4
   86524:	2821883a 	mov	r16,r5
   86528:	10000f26 	beq	r2,zero,86568 <_Balloc+0x60>
   8652c:	8407883a 	add	r3,r16,r16
   86530:	18c7883a 	add	r3,r3,r3
   86534:	10c7883a 	add	r3,r2,r3
   86538:	18800017 	ldw	r2,0(r3)
   8653c:	10001126 	beq	r2,zero,86584 <_Balloc+0x7c>
   86540:	11000017 	ldw	r4,0(r2)
   86544:	19000015 	stw	r4,0(r3)
   86548:	10000415 	stw	zero,16(r2)
   8654c:	10000315 	stw	zero,12(r2)
   86550:	dfc00317 	ldw	ra,12(sp)
   86554:	dc800217 	ldw	r18,8(sp)
   86558:	dc400117 	ldw	r17,4(sp)
   8655c:	dc000017 	ldw	r16,0(sp)
   86560:	dec00404 	addi	sp,sp,16
   86564:	f800283a 	ret
   86568:	01800844 	movi	r6,33
   8656c:	01400104 	movi	r5,4
   86570:	00894440 	call	89444 <_calloc_r>
   86574:	88801315 	stw	r2,76(r17)
   86578:	103fec1e 	bne	r2,zero,8652c <__alt_data_end+0xfffbaa3c>
   8657c:	0005883a 	mov	r2,zero
   86580:	003ff306 	br	86550 <__alt_data_end+0xfffbaa60>
   86584:	01400044 	movi	r5,1
   86588:	2c24983a 	sll	r18,r5,r16
   8658c:	8809883a 	mov	r4,r17
   86590:	91800144 	addi	r6,r18,5
   86594:	318d883a 	add	r6,r6,r6
   86598:	318d883a 	add	r6,r6,r6
   8659c:	00894440 	call	89444 <_calloc_r>
   865a0:	103ff626 	beq	r2,zero,8657c <__alt_data_end+0xfffbaa8c>
   865a4:	14000115 	stw	r16,4(r2)
   865a8:	14800215 	stw	r18,8(r2)
   865ac:	003fe606 	br	86548 <__alt_data_end+0xfffbaa58>

000865b0 <_Bfree>:
   865b0:	28000826 	beq	r5,zero,865d4 <_Bfree+0x24>
   865b4:	28c00117 	ldw	r3,4(r5)
   865b8:	20801317 	ldw	r2,76(r4)
   865bc:	18c7883a 	add	r3,r3,r3
   865c0:	18c7883a 	add	r3,r3,r3
   865c4:	10c5883a 	add	r2,r2,r3
   865c8:	10c00017 	ldw	r3,0(r2)
   865cc:	28c00015 	stw	r3,0(r5)
   865d0:	11400015 	stw	r5,0(r2)
   865d4:	f800283a 	ret

000865d8 <__multadd>:
   865d8:	defffa04 	addi	sp,sp,-24
   865dc:	dc800315 	stw	r18,12(sp)
   865e0:	dc400215 	stw	r17,8(sp)
   865e4:	dc000115 	stw	r16,4(sp)
   865e8:	2823883a 	mov	r17,r5
   865ec:	2c000417 	ldw	r16,16(r5)
   865f0:	dfc00515 	stw	ra,20(sp)
   865f4:	dcc00415 	stw	r19,16(sp)
   865f8:	2025883a 	mov	r18,r4
   865fc:	29400504 	addi	r5,r5,20
   86600:	0011883a 	mov	r8,zero
   86604:	28c00017 	ldw	r3,0(r5)
   86608:	29400104 	addi	r5,r5,4
   8660c:	42000044 	addi	r8,r8,1
   86610:	18bfffcc 	andi	r2,r3,65535
   86614:	1185383a 	mul	r2,r2,r6
   86618:	1806d43a 	srli	r3,r3,16
   8661c:	11cf883a 	add	r7,r2,r7
   86620:	3808d43a 	srli	r4,r7,16
   86624:	1987383a 	mul	r3,r3,r6
   86628:	38bfffcc 	andi	r2,r7,65535
   8662c:	1907883a 	add	r3,r3,r4
   86630:	1808943a 	slli	r4,r3,16
   86634:	180ed43a 	srli	r7,r3,16
   86638:	2085883a 	add	r2,r4,r2
   8663c:	28bfff15 	stw	r2,-4(r5)
   86640:	443ff016 	blt	r8,r16,86604 <__alt_data_end+0xfffbab14>
   86644:	38000926 	beq	r7,zero,8666c <__multadd+0x94>
   86648:	88800217 	ldw	r2,8(r17)
   8664c:	80800f0e 	bge	r16,r2,8668c <__multadd+0xb4>
   86650:	80800144 	addi	r2,r16,5
   86654:	1085883a 	add	r2,r2,r2
   86658:	1085883a 	add	r2,r2,r2
   8665c:	8885883a 	add	r2,r17,r2
   86660:	11c00015 	stw	r7,0(r2)
   86664:	84000044 	addi	r16,r16,1
   86668:	8c000415 	stw	r16,16(r17)
   8666c:	8805883a 	mov	r2,r17
   86670:	dfc00517 	ldw	ra,20(sp)
   86674:	dcc00417 	ldw	r19,16(sp)
   86678:	dc800317 	ldw	r18,12(sp)
   8667c:	dc400217 	ldw	r17,8(sp)
   86680:	dc000117 	ldw	r16,4(sp)
   86684:	dec00604 	addi	sp,sp,24
   86688:	f800283a 	ret
   8668c:	89400117 	ldw	r5,4(r17)
   86690:	9009883a 	mov	r4,r18
   86694:	d9c00015 	stw	r7,0(sp)
   86698:	29400044 	addi	r5,r5,1
   8669c:	00865080 	call	86508 <_Balloc>
   866a0:	89800417 	ldw	r6,16(r17)
   866a4:	89400304 	addi	r5,r17,12
   866a8:	11000304 	addi	r4,r2,12
   866ac:	31800084 	addi	r6,r6,2
   866b0:	318d883a 	add	r6,r6,r6
   866b4:	318d883a 	add	r6,r6,r6
   866b8:	1027883a 	mov	r19,r2
   866bc:	008613c0 	call	8613c <memcpy>
   866c0:	d9c00017 	ldw	r7,0(sp)
   866c4:	88000a26 	beq	r17,zero,866f0 <__multadd+0x118>
   866c8:	88c00117 	ldw	r3,4(r17)
   866cc:	90801317 	ldw	r2,76(r18)
   866d0:	18c7883a 	add	r3,r3,r3
   866d4:	18c7883a 	add	r3,r3,r3
   866d8:	10c5883a 	add	r2,r2,r3
   866dc:	10c00017 	ldw	r3,0(r2)
   866e0:	88c00015 	stw	r3,0(r17)
   866e4:	14400015 	stw	r17,0(r2)
   866e8:	9823883a 	mov	r17,r19
   866ec:	003fd806 	br	86650 <__alt_data_end+0xfffbab60>
   866f0:	9823883a 	mov	r17,r19
   866f4:	003fd606 	br	86650 <__alt_data_end+0xfffbab60>

000866f8 <__s2b>:
   866f8:	defff904 	addi	sp,sp,-28
   866fc:	dc400115 	stw	r17,4(sp)
   86700:	dc000015 	stw	r16,0(sp)
   86704:	2023883a 	mov	r17,r4
   86708:	2821883a 	mov	r16,r5
   8670c:	39000204 	addi	r4,r7,8
   86710:	01400244 	movi	r5,9
   86714:	dcc00315 	stw	r19,12(sp)
   86718:	dc800215 	stw	r18,8(sp)
   8671c:	dfc00615 	stw	ra,24(sp)
   86720:	dd400515 	stw	r21,20(sp)
   86724:	dd000415 	stw	r20,16(sp)
   86728:	3825883a 	mov	r18,r7
   8672c:	3027883a 	mov	r19,r6
   86730:	008a7740 	call	8a774 <__divsi3>
   86734:	00c00044 	movi	r3,1
   86738:	000b883a 	mov	r5,zero
   8673c:	1880030e 	bge	r3,r2,8674c <__s2b+0x54>
   86740:	18c7883a 	add	r3,r3,r3
   86744:	29400044 	addi	r5,r5,1
   86748:	18bffd16 	blt	r3,r2,86740 <__alt_data_end+0xfffbac50>
   8674c:	8809883a 	mov	r4,r17
   86750:	00865080 	call	86508 <_Balloc>
   86754:	d8c00717 	ldw	r3,28(sp)
   86758:	10c00515 	stw	r3,20(r2)
   8675c:	00c00044 	movi	r3,1
   86760:	10c00415 	stw	r3,16(r2)
   86764:	00c00244 	movi	r3,9
   86768:	1cc0210e 	bge	r3,r19,867f0 <__s2b+0xf8>
   8676c:	80eb883a 	add	r21,r16,r3
   86770:	a829883a 	mov	r20,r21
   86774:	84e1883a 	add	r16,r16,r19
   86778:	a1c00007 	ldb	r7,0(r20)
   8677c:	01800284 	movi	r6,10
   86780:	a5000044 	addi	r20,r20,1
   86784:	100b883a 	mov	r5,r2
   86788:	39fff404 	addi	r7,r7,-48
   8678c:	8809883a 	mov	r4,r17
   86790:	00865d80 	call	865d8 <__multadd>
   86794:	a43ff81e 	bne	r20,r16,86778 <__alt_data_end+0xfffbac88>
   86798:	ace1883a 	add	r16,r21,r19
   8679c:	843ffe04 	addi	r16,r16,-8
   867a0:	9c800a0e 	bge	r19,r18,867cc <__s2b+0xd4>
   867a4:	94e5c83a 	sub	r18,r18,r19
   867a8:	84a5883a 	add	r18,r16,r18
   867ac:	81c00007 	ldb	r7,0(r16)
   867b0:	01800284 	movi	r6,10
   867b4:	84000044 	addi	r16,r16,1
   867b8:	100b883a 	mov	r5,r2
   867bc:	39fff404 	addi	r7,r7,-48
   867c0:	8809883a 	mov	r4,r17
   867c4:	00865d80 	call	865d8 <__multadd>
   867c8:	84bff81e 	bne	r16,r18,867ac <__alt_data_end+0xfffbacbc>
   867cc:	dfc00617 	ldw	ra,24(sp)
   867d0:	dd400517 	ldw	r21,20(sp)
   867d4:	dd000417 	ldw	r20,16(sp)
   867d8:	dcc00317 	ldw	r19,12(sp)
   867dc:	dc800217 	ldw	r18,8(sp)
   867e0:	dc400117 	ldw	r17,4(sp)
   867e4:	dc000017 	ldw	r16,0(sp)
   867e8:	dec00704 	addi	sp,sp,28
   867ec:	f800283a 	ret
   867f0:	84000284 	addi	r16,r16,10
   867f4:	1827883a 	mov	r19,r3
   867f8:	003fe906 	br	867a0 <__alt_data_end+0xfffbacb0>

000867fc <__hi0bits>:
   867fc:	20bfffec 	andhi	r2,r4,65535
   86800:	1000141e 	bne	r2,zero,86854 <__hi0bits+0x58>
   86804:	2008943a 	slli	r4,r4,16
   86808:	00800404 	movi	r2,16
   8680c:	20ffc02c 	andhi	r3,r4,65280
   86810:	1800021e 	bne	r3,zero,8681c <__hi0bits+0x20>
   86814:	2008923a 	slli	r4,r4,8
   86818:	10800204 	addi	r2,r2,8
   8681c:	20fc002c 	andhi	r3,r4,61440
   86820:	1800021e 	bne	r3,zero,8682c <__hi0bits+0x30>
   86824:	2008913a 	slli	r4,r4,4
   86828:	10800104 	addi	r2,r2,4
   8682c:	20f0002c 	andhi	r3,r4,49152
   86830:	1800031e 	bne	r3,zero,86840 <__hi0bits+0x44>
   86834:	2109883a 	add	r4,r4,r4
   86838:	10800084 	addi	r2,r2,2
   8683c:	2109883a 	add	r4,r4,r4
   86840:	20000316 	blt	r4,zero,86850 <__hi0bits+0x54>
   86844:	2110002c 	andhi	r4,r4,16384
   86848:	2000041e 	bne	r4,zero,8685c <__hi0bits+0x60>
   8684c:	00800804 	movi	r2,32
   86850:	f800283a 	ret
   86854:	0005883a 	mov	r2,zero
   86858:	003fec06 	br	8680c <__alt_data_end+0xfffbad1c>
   8685c:	10800044 	addi	r2,r2,1
   86860:	f800283a 	ret

00086864 <__lo0bits>:
   86864:	20c00017 	ldw	r3,0(r4)
   86868:	188001cc 	andi	r2,r3,7
   8686c:	10000826 	beq	r2,zero,86890 <__lo0bits+0x2c>
   86870:	1880004c 	andi	r2,r3,1
   86874:	1000211e 	bne	r2,zero,868fc <__lo0bits+0x98>
   86878:	1880008c 	andi	r2,r3,2
   8687c:	1000211e 	bne	r2,zero,86904 <__lo0bits+0xa0>
   86880:	1806d0ba 	srli	r3,r3,2
   86884:	00800084 	movi	r2,2
   86888:	20c00015 	stw	r3,0(r4)
   8688c:	f800283a 	ret
   86890:	18bfffcc 	andi	r2,r3,65535
   86894:	10001326 	beq	r2,zero,868e4 <__lo0bits+0x80>
   86898:	0005883a 	mov	r2,zero
   8689c:	19403fcc 	andi	r5,r3,255
   868a0:	2800021e 	bne	r5,zero,868ac <__lo0bits+0x48>
   868a4:	1806d23a 	srli	r3,r3,8
   868a8:	10800204 	addi	r2,r2,8
   868ac:	194003cc 	andi	r5,r3,15
   868b0:	2800021e 	bne	r5,zero,868bc <__lo0bits+0x58>
   868b4:	1806d13a 	srli	r3,r3,4
   868b8:	10800104 	addi	r2,r2,4
   868bc:	194000cc 	andi	r5,r3,3
   868c0:	2800021e 	bne	r5,zero,868cc <__lo0bits+0x68>
   868c4:	1806d0ba 	srli	r3,r3,2
   868c8:	10800084 	addi	r2,r2,2
   868cc:	1940004c 	andi	r5,r3,1
   868d0:	2800081e 	bne	r5,zero,868f4 <__lo0bits+0x90>
   868d4:	1806d07a 	srli	r3,r3,1
   868d8:	1800051e 	bne	r3,zero,868f0 <__lo0bits+0x8c>
   868dc:	00800804 	movi	r2,32
   868e0:	f800283a 	ret
   868e4:	1806d43a 	srli	r3,r3,16
   868e8:	00800404 	movi	r2,16
   868ec:	003feb06 	br	8689c <__alt_data_end+0xfffbadac>
   868f0:	10800044 	addi	r2,r2,1
   868f4:	20c00015 	stw	r3,0(r4)
   868f8:	f800283a 	ret
   868fc:	0005883a 	mov	r2,zero
   86900:	f800283a 	ret
   86904:	1806d07a 	srli	r3,r3,1
   86908:	00800044 	movi	r2,1
   8690c:	20c00015 	stw	r3,0(r4)
   86910:	f800283a 	ret

00086914 <__i2b>:
   86914:	defffd04 	addi	sp,sp,-12
   86918:	dc000015 	stw	r16,0(sp)
   8691c:	04000044 	movi	r16,1
   86920:	dc400115 	stw	r17,4(sp)
   86924:	2823883a 	mov	r17,r5
   86928:	800b883a 	mov	r5,r16
   8692c:	dfc00215 	stw	ra,8(sp)
   86930:	00865080 	call	86508 <_Balloc>
   86934:	14400515 	stw	r17,20(r2)
   86938:	14000415 	stw	r16,16(r2)
   8693c:	dfc00217 	ldw	ra,8(sp)
   86940:	dc400117 	ldw	r17,4(sp)
   86944:	dc000017 	ldw	r16,0(sp)
   86948:	dec00304 	addi	sp,sp,12
   8694c:	f800283a 	ret

00086950 <__multiply>:
   86950:	defffa04 	addi	sp,sp,-24
   86954:	dcc00315 	stw	r19,12(sp)
   86958:	dc800215 	stw	r18,8(sp)
   8695c:	34c00417 	ldw	r19,16(r6)
   86960:	2c800417 	ldw	r18,16(r5)
   86964:	dd000415 	stw	r20,16(sp)
   86968:	dc400115 	stw	r17,4(sp)
   8696c:	dfc00515 	stw	ra,20(sp)
   86970:	dc000015 	stw	r16,0(sp)
   86974:	2829883a 	mov	r20,r5
   86978:	3023883a 	mov	r17,r6
   8697c:	94c0050e 	bge	r18,r19,86994 <__multiply+0x44>
   86980:	9007883a 	mov	r3,r18
   86984:	3029883a 	mov	r20,r6
   86988:	9825883a 	mov	r18,r19
   8698c:	2823883a 	mov	r17,r5
   86990:	1827883a 	mov	r19,r3
   86994:	a0800217 	ldw	r2,8(r20)
   86998:	94e1883a 	add	r16,r18,r19
   8699c:	a1400117 	ldw	r5,4(r20)
   869a0:	1400010e 	bge	r2,r16,869a8 <__multiply+0x58>
   869a4:	29400044 	addi	r5,r5,1
   869a8:	00865080 	call	86508 <_Balloc>
   869ac:	8415883a 	add	r10,r16,r16
   869b0:	12c00504 	addi	r11,r2,20
   869b4:	5295883a 	add	r10,r10,r10
   869b8:	5a95883a 	add	r10,r11,r10
   869bc:	5807883a 	mov	r3,r11
   869c0:	5a80032e 	bgeu	r11,r10,869d0 <__multiply+0x80>
   869c4:	18000015 	stw	zero,0(r3)
   869c8:	18c00104 	addi	r3,r3,4
   869cc:	1abffd36 	bltu	r3,r10,869c4 <__alt_data_end+0xfffbaed4>
   869d0:	9ce7883a 	add	r19,r19,r19
   869d4:	94a5883a 	add	r18,r18,r18
   869d8:	89800504 	addi	r6,r17,20
   869dc:	9ce7883a 	add	r19,r19,r19
   869e0:	a3400504 	addi	r13,r20,20
   869e4:	94a5883a 	add	r18,r18,r18
   869e8:	34d9883a 	add	r12,r6,r19
   869ec:	6c93883a 	add	r9,r13,r18
   869f0:	3300422e 	bgeu	r6,r12,86afc <__multiply+0x1ac>
   869f4:	37c00017 	ldw	ra,0(r6)
   869f8:	fbffffcc 	andi	r15,ra,65535
   869fc:	78001b26 	beq	r15,zero,86a6c <__multiply+0x11c>
   86a00:	5811883a 	mov	r8,r11
   86a04:	681d883a 	mov	r14,r13
   86a08:	000f883a 	mov	r7,zero
   86a0c:	71000017 	ldw	r4,0(r14)
   86a10:	40c00017 	ldw	r3,0(r8)
   86a14:	73800104 	addi	r14,r14,4
   86a18:	217fffcc 	andi	r5,r4,65535
   86a1c:	2bcb383a 	mul	r5,r5,r15
   86a20:	2008d43a 	srli	r4,r4,16
   86a24:	1c7fffcc 	andi	r17,r3,65535
   86a28:	2c4b883a 	add	r5,r5,r17
   86a2c:	29cb883a 	add	r5,r5,r7
   86a30:	23c9383a 	mul	r4,r4,r15
   86a34:	1806d43a 	srli	r3,r3,16
   86a38:	280ed43a 	srli	r7,r5,16
   86a3c:	297fffcc 	andi	r5,r5,65535
   86a40:	20c7883a 	add	r3,r4,r3
   86a44:	19c7883a 	add	r3,r3,r7
   86a48:	1808943a 	slli	r4,r3,16
   86a4c:	4023883a 	mov	r17,r8
   86a50:	180ed43a 	srli	r7,r3,16
   86a54:	214ab03a 	or	r5,r4,r5
   86a58:	41400015 	stw	r5,0(r8)
   86a5c:	42000104 	addi	r8,r8,4
   86a60:	727fea36 	bltu	r14,r9,86a0c <__alt_data_end+0xfffbaf1c>
   86a64:	89c00115 	stw	r7,4(r17)
   86a68:	37c00017 	ldw	ra,0(r6)
   86a6c:	f83ed43a 	srli	ra,ra,16
   86a70:	f8001f26 	beq	ra,zero,86af0 <__multiply+0x1a0>
   86a74:	58c00017 	ldw	r3,0(r11)
   86a78:	681d883a 	mov	r14,r13
   86a7c:	581f883a 	mov	r15,r11
   86a80:	1811883a 	mov	r8,r3
   86a84:	5825883a 	mov	r18,r11
   86a88:	000f883a 	mov	r7,zero
   86a8c:	00000106 	br	86a94 <__multiply+0x144>
   86a90:	8825883a 	mov	r18,r17
   86a94:	7140000b 	ldhu	r5,0(r14)
   86a98:	4010d43a 	srli	r8,r8,16
   86a9c:	193fffcc 	andi	r4,r3,65535
   86aa0:	2fcb383a 	mul	r5,r5,ra
   86aa4:	7bc00104 	addi	r15,r15,4
   86aa8:	73800104 	addi	r14,r14,4
   86aac:	2a0b883a 	add	r5,r5,r8
   86ab0:	29cb883a 	add	r5,r5,r7
   86ab4:	2806943a 	slli	r3,r5,16
   86ab8:	94400104 	addi	r17,r18,4
   86abc:	280ad43a 	srli	r5,r5,16
   86ac0:	1908b03a 	or	r4,r3,r4
   86ac4:	793fff15 	stw	r4,-4(r15)
   86ac8:	70ffff17 	ldw	r3,-4(r14)
   86acc:	8a000017 	ldw	r8,0(r17)
   86ad0:	1806d43a 	srli	r3,r3,16
   86ad4:	413fffcc 	andi	r4,r8,65535
   86ad8:	1fc7383a 	mul	r3,r3,ra
   86adc:	1907883a 	add	r3,r3,r4
   86ae0:	1947883a 	add	r3,r3,r5
   86ae4:	180ed43a 	srli	r7,r3,16
   86ae8:	727fe936 	bltu	r14,r9,86a90 <__alt_data_end+0xfffbafa0>
   86aec:	90c00115 	stw	r3,4(r18)
   86af0:	31800104 	addi	r6,r6,4
   86af4:	5ac00104 	addi	r11,r11,4
   86af8:	333fbe36 	bltu	r6,r12,869f4 <__alt_data_end+0xfffbaf04>
   86afc:	0400090e 	bge	zero,r16,86b24 <__multiply+0x1d4>
   86b00:	50ffff17 	ldw	r3,-4(r10)
   86b04:	52bfff04 	addi	r10,r10,-4
   86b08:	18000326 	beq	r3,zero,86b18 <__multiply+0x1c8>
   86b0c:	00000506 	br	86b24 <__multiply+0x1d4>
   86b10:	50c00017 	ldw	r3,0(r10)
   86b14:	1800031e 	bne	r3,zero,86b24 <__multiply+0x1d4>
   86b18:	843fffc4 	addi	r16,r16,-1
   86b1c:	52bfff04 	addi	r10,r10,-4
   86b20:	803ffb1e 	bne	r16,zero,86b10 <__alt_data_end+0xfffbb020>
   86b24:	14000415 	stw	r16,16(r2)
   86b28:	dfc00517 	ldw	ra,20(sp)
   86b2c:	dd000417 	ldw	r20,16(sp)
   86b30:	dcc00317 	ldw	r19,12(sp)
   86b34:	dc800217 	ldw	r18,8(sp)
   86b38:	dc400117 	ldw	r17,4(sp)
   86b3c:	dc000017 	ldw	r16,0(sp)
   86b40:	dec00604 	addi	sp,sp,24
   86b44:	f800283a 	ret

00086b48 <__pow5mult>:
   86b48:	defffa04 	addi	sp,sp,-24
   86b4c:	dcc00315 	stw	r19,12(sp)
   86b50:	dc000015 	stw	r16,0(sp)
   86b54:	dfc00515 	stw	ra,20(sp)
   86b58:	dd000415 	stw	r20,16(sp)
   86b5c:	dc800215 	stw	r18,8(sp)
   86b60:	dc400115 	stw	r17,4(sp)
   86b64:	308000cc 	andi	r2,r6,3
   86b68:	3021883a 	mov	r16,r6
   86b6c:	2027883a 	mov	r19,r4
   86b70:	10002f1e 	bne	r2,zero,86c30 <__pow5mult+0xe8>
   86b74:	2825883a 	mov	r18,r5
   86b78:	8021d0ba 	srai	r16,r16,2
   86b7c:	80001a26 	beq	r16,zero,86be8 <__pow5mult+0xa0>
   86b80:	9c401217 	ldw	r17,72(r19)
   86b84:	8800061e 	bne	r17,zero,86ba0 <__pow5mult+0x58>
   86b88:	00003406 	br	86c5c <__pow5mult+0x114>
   86b8c:	8021d07a 	srai	r16,r16,1
   86b90:	80001526 	beq	r16,zero,86be8 <__pow5mult+0xa0>
   86b94:	88800017 	ldw	r2,0(r17)
   86b98:	10001c26 	beq	r2,zero,86c0c <__pow5mult+0xc4>
   86b9c:	1023883a 	mov	r17,r2
   86ba0:	8080004c 	andi	r2,r16,1
   86ba4:	103ff926 	beq	r2,zero,86b8c <__alt_data_end+0xfffbb09c>
   86ba8:	880d883a 	mov	r6,r17
   86bac:	900b883a 	mov	r5,r18
   86bb0:	9809883a 	mov	r4,r19
   86bb4:	00869500 	call	86950 <__multiply>
   86bb8:	90001b26 	beq	r18,zero,86c28 <__pow5mult+0xe0>
   86bbc:	91000117 	ldw	r4,4(r18)
   86bc0:	98c01317 	ldw	r3,76(r19)
   86bc4:	8021d07a 	srai	r16,r16,1
   86bc8:	2109883a 	add	r4,r4,r4
   86bcc:	2109883a 	add	r4,r4,r4
   86bd0:	1907883a 	add	r3,r3,r4
   86bd4:	19000017 	ldw	r4,0(r3)
   86bd8:	91000015 	stw	r4,0(r18)
   86bdc:	1c800015 	stw	r18,0(r3)
   86be0:	1025883a 	mov	r18,r2
   86be4:	803feb1e 	bne	r16,zero,86b94 <__alt_data_end+0xfffbb0a4>
   86be8:	9005883a 	mov	r2,r18
   86bec:	dfc00517 	ldw	ra,20(sp)
   86bf0:	dd000417 	ldw	r20,16(sp)
   86bf4:	dcc00317 	ldw	r19,12(sp)
   86bf8:	dc800217 	ldw	r18,8(sp)
   86bfc:	dc400117 	ldw	r17,4(sp)
   86c00:	dc000017 	ldw	r16,0(sp)
   86c04:	dec00604 	addi	sp,sp,24
   86c08:	f800283a 	ret
   86c0c:	880d883a 	mov	r6,r17
   86c10:	880b883a 	mov	r5,r17
   86c14:	9809883a 	mov	r4,r19
   86c18:	00869500 	call	86950 <__multiply>
   86c1c:	88800015 	stw	r2,0(r17)
   86c20:	10000015 	stw	zero,0(r2)
   86c24:	003fdd06 	br	86b9c <__alt_data_end+0xfffbb0ac>
   86c28:	1025883a 	mov	r18,r2
   86c2c:	003fd706 	br	86b8c <__alt_data_end+0xfffbb09c>
   86c30:	10bfffc4 	addi	r2,r2,-1
   86c34:	1085883a 	add	r2,r2,r2
   86c38:	00c00274 	movhi	r3,9
   86c3c:	18fe6004 	addi	r3,r3,-1664
   86c40:	1085883a 	add	r2,r2,r2
   86c44:	1885883a 	add	r2,r3,r2
   86c48:	11800017 	ldw	r6,0(r2)
   86c4c:	000f883a 	mov	r7,zero
   86c50:	00865d80 	call	865d8 <__multadd>
   86c54:	1025883a 	mov	r18,r2
   86c58:	003fc706 	br	86b78 <__alt_data_end+0xfffbb088>
   86c5c:	05000044 	movi	r20,1
   86c60:	a00b883a 	mov	r5,r20
   86c64:	9809883a 	mov	r4,r19
   86c68:	00865080 	call	86508 <_Balloc>
   86c6c:	1023883a 	mov	r17,r2
   86c70:	00809c44 	movi	r2,625
   86c74:	88800515 	stw	r2,20(r17)
   86c78:	8d000415 	stw	r20,16(r17)
   86c7c:	9c401215 	stw	r17,72(r19)
   86c80:	88000015 	stw	zero,0(r17)
   86c84:	003fc606 	br	86ba0 <__alt_data_end+0xfffbb0b0>

00086c88 <__lshift>:
   86c88:	defff904 	addi	sp,sp,-28
   86c8c:	dd400515 	stw	r21,20(sp)
   86c90:	dcc00315 	stw	r19,12(sp)
   86c94:	302bd17a 	srai	r21,r6,5
   86c98:	2cc00417 	ldw	r19,16(r5)
   86c9c:	28800217 	ldw	r2,8(r5)
   86ca0:	dd000415 	stw	r20,16(sp)
   86ca4:	ace7883a 	add	r19,r21,r19
   86ca8:	dc800215 	stw	r18,8(sp)
   86cac:	dc400115 	stw	r17,4(sp)
   86cb0:	dc000015 	stw	r16,0(sp)
   86cb4:	dfc00615 	stw	ra,24(sp)
   86cb8:	9c000044 	addi	r16,r19,1
   86cbc:	2823883a 	mov	r17,r5
   86cc0:	3029883a 	mov	r20,r6
   86cc4:	2025883a 	mov	r18,r4
   86cc8:	29400117 	ldw	r5,4(r5)
   86ccc:	1400030e 	bge	r2,r16,86cdc <__lshift+0x54>
   86cd0:	1085883a 	add	r2,r2,r2
   86cd4:	29400044 	addi	r5,r5,1
   86cd8:	143ffd16 	blt	r2,r16,86cd0 <__alt_data_end+0xfffbb1e0>
   86cdc:	9009883a 	mov	r4,r18
   86ce0:	00865080 	call	86508 <_Balloc>
   86ce4:	10c00504 	addi	r3,r2,20
   86ce8:	0540070e 	bge	zero,r21,86d08 <__lshift+0x80>
   86cec:	ad6b883a 	add	r21,r21,r21
   86cf0:	ad6b883a 	add	r21,r21,r21
   86cf4:	1809883a 	mov	r4,r3
   86cf8:	1d47883a 	add	r3,r3,r21
   86cfc:	20000015 	stw	zero,0(r4)
   86d00:	21000104 	addi	r4,r4,4
   86d04:	193ffd1e 	bne	r3,r4,86cfc <__alt_data_end+0xfffbb20c>
   86d08:	8a000417 	ldw	r8,16(r17)
   86d0c:	89000504 	addi	r4,r17,20
   86d10:	a18007cc 	andi	r6,r20,31
   86d14:	4211883a 	add	r8,r8,r8
   86d18:	4211883a 	add	r8,r8,r8
   86d1c:	2211883a 	add	r8,r4,r8
   86d20:	30002326 	beq	r6,zero,86db0 <__lshift+0x128>
   86d24:	02400804 	movi	r9,32
   86d28:	4993c83a 	sub	r9,r9,r6
   86d2c:	000b883a 	mov	r5,zero
   86d30:	21c00017 	ldw	r7,0(r4)
   86d34:	1815883a 	mov	r10,r3
   86d38:	18c00104 	addi	r3,r3,4
   86d3c:	398e983a 	sll	r7,r7,r6
   86d40:	21000104 	addi	r4,r4,4
   86d44:	394ab03a 	or	r5,r7,r5
   86d48:	197fff15 	stw	r5,-4(r3)
   86d4c:	217fff17 	ldw	r5,-4(r4)
   86d50:	2a4ad83a 	srl	r5,r5,r9
   86d54:	223ff636 	bltu	r4,r8,86d30 <__alt_data_end+0xfffbb240>
   86d58:	51400115 	stw	r5,4(r10)
   86d5c:	28001a1e 	bne	r5,zero,86dc8 <__lshift+0x140>
   86d60:	843fffc4 	addi	r16,r16,-1
   86d64:	14000415 	stw	r16,16(r2)
   86d68:	88000826 	beq	r17,zero,86d8c <__lshift+0x104>
   86d6c:	89000117 	ldw	r4,4(r17)
   86d70:	90c01317 	ldw	r3,76(r18)
   86d74:	2109883a 	add	r4,r4,r4
   86d78:	2109883a 	add	r4,r4,r4
   86d7c:	1907883a 	add	r3,r3,r4
   86d80:	19000017 	ldw	r4,0(r3)
   86d84:	89000015 	stw	r4,0(r17)
   86d88:	1c400015 	stw	r17,0(r3)
   86d8c:	dfc00617 	ldw	ra,24(sp)
   86d90:	dd400517 	ldw	r21,20(sp)
   86d94:	dd000417 	ldw	r20,16(sp)
   86d98:	dcc00317 	ldw	r19,12(sp)
   86d9c:	dc800217 	ldw	r18,8(sp)
   86da0:	dc400117 	ldw	r17,4(sp)
   86da4:	dc000017 	ldw	r16,0(sp)
   86da8:	dec00704 	addi	sp,sp,28
   86dac:	f800283a 	ret
   86db0:	21400017 	ldw	r5,0(r4)
   86db4:	18c00104 	addi	r3,r3,4
   86db8:	21000104 	addi	r4,r4,4
   86dbc:	197fff15 	stw	r5,-4(r3)
   86dc0:	223ffb36 	bltu	r4,r8,86db0 <__alt_data_end+0xfffbb2c0>
   86dc4:	003fe606 	br	86d60 <__alt_data_end+0xfffbb270>
   86dc8:	9c000084 	addi	r16,r19,2
   86dcc:	003fe406 	br	86d60 <__alt_data_end+0xfffbb270>

00086dd0 <__mcmp>:
   86dd0:	20800417 	ldw	r2,16(r4)
   86dd4:	28c00417 	ldw	r3,16(r5)
   86dd8:	10c5c83a 	sub	r2,r2,r3
   86ddc:	1000111e 	bne	r2,zero,86e24 <__mcmp+0x54>
   86de0:	18c7883a 	add	r3,r3,r3
   86de4:	18c7883a 	add	r3,r3,r3
   86de8:	21000504 	addi	r4,r4,20
   86dec:	29400504 	addi	r5,r5,20
   86df0:	20c5883a 	add	r2,r4,r3
   86df4:	28cb883a 	add	r5,r5,r3
   86df8:	00000106 	br	86e00 <__mcmp+0x30>
   86dfc:	20800a2e 	bgeu	r4,r2,86e28 <__mcmp+0x58>
   86e00:	10bfff04 	addi	r2,r2,-4
   86e04:	297fff04 	addi	r5,r5,-4
   86e08:	11800017 	ldw	r6,0(r2)
   86e0c:	28c00017 	ldw	r3,0(r5)
   86e10:	30fffa26 	beq	r6,r3,86dfc <__alt_data_end+0xfffbb30c>
   86e14:	30c00236 	bltu	r6,r3,86e20 <__mcmp+0x50>
   86e18:	00800044 	movi	r2,1
   86e1c:	f800283a 	ret
   86e20:	00bfffc4 	movi	r2,-1
   86e24:	f800283a 	ret
   86e28:	0005883a 	mov	r2,zero
   86e2c:	f800283a 	ret

00086e30 <__mdiff>:
   86e30:	28c00417 	ldw	r3,16(r5)
   86e34:	30800417 	ldw	r2,16(r6)
   86e38:	defffa04 	addi	sp,sp,-24
   86e3c:	dcc00315 	stw	r19,12(sp)
   86e40:	dc800215 	stw	r18,8(sp)
   86e44:	dfc00515 	stw	ra,20(sp)
   86e48:	dd000415 	stw	r20,16(sp)
   86e4c:	dc400115 	stw	r17,4(sp)
   86e50:	dc000015 	stw	r16,0(sp)
   86e54:	1887c83a 	sub	r3,r3,r2
   86e58:	2825883a 	mov	r18,r5
   86e5c:	3027883a 	mov	r19,r6
   86e60:	1800141e 	bne	r3,zero,86eb4 <__mdiff+0x84>
   86e64:	1085883a 	add	r2,r2,r2
   86e68:	1085883a 	add	r2,r2,r2
   86e6c:	2a000504 	addi	r8,r5,20
   86e70:	34000504 	addi	r16,r6,20
   86e74:	4087883a 	add	r3,r8,r2
   86e78:	8085883a 	add	r2,r16,r2
   86e7c:	00000106 	br	86e84 <__mdiff+0x54>
   86e80:	40c0592e 	bgeu	r8,r3,86fe8 <__mdiff+0x1b8>
   86e84:	18ffff04 	addi	r3,r3,-4
   86e88:	10bfff04 	addi	r2,r2,-4
   86e8c:	19c00017 	ldw	r7,0(r3)
   86e90:	11400017 	ldw	r5,0(r2)
   86e94:	397ffa26 	beq	r7,r5,86e80 <__alt_data_end+0xfffbb390>
   86e98:	3940592e 	bgeu	r7,r5,87000 <__mdiff+0x1d0>
   86e9c:	9005883a 	mov	r2,r18
   86ea0:	4023883a 	mov	r17,r8
   86ea4:	9825883a 	mov	r18,r19
   86ea8:	05000044 	movi	r20,1
   86eac:	1027883a 	mov	r19,r2
   86eb0:	00000406 	br	86ec4 <__mdiff+0x94>
   86eb4:	18005616 	blt	r3,zero,87010 <__mdiff+0x1e0>
   86eb8:	34400504 	addi	r17,r6,20
   86ebc:	2c000504 	addi	r16,r5,20
   86ec0:	0029883a 	mov	r20,zero
   86ec4:	91400117 	ldw	r5,4(r18)
   86ec8:	00865080 	call	86508 <_Balloc>
   86ecc:	92400417 	ldw	r9,16(r18)
   86ed0:	9b000417 	ldw	r12,16(r19)
   86ed4:	12c00504 	addi	r11,r2,20
   86ed8:	4a51883a 	add	r8,r9,r9
   86edc:	6319883a 	add	r12,r12,r12
   86ee0:	4211883a 	add	r8,r8,r8
   86ee4:	6319883a 	add	r12,r12,r12
   86ee8:	15000315 	stw	r20,12(r2)
   86eec:	8211883a 	add	r8,r16,r8
   86ef0:	8b19883a 	add	r12,r17,r12
   86ef4:	0007883a 	mov	r3,zero
   86ef8:	81400017 	ldw	r5,0(r16)
   86efc:	89c00017 	ldw	r7,0(r17)
   86f00:	59800104 	addi	r6,r11,4
   86f04:	293fffcc 	andi	r4,r5,65535
   86f08:	20c7883a 	add	r3,r4,r3
   86f0c:	393fffcc 	andi	r4,r7,65535
   86f10:	1909c83a 	sub	r4,r3,r4
   86f14:	280ad43a 	srli	r5,r5,16
   86f18:	380ed43a 	srli	r7,r7,16
   86f1c:	2007d43a 	srai	r3,r4,16
   86f20:	213fffcc 	andi	r4,r4,65535
   86f24:	29cbc83a 	sub	r5,r5,r7
   86f28:	28c7883a 	add	r3,r5,r3
   86f2c:	180a943a 	slli	r5,r3,16
   86f30:	8c400104 	addi	r17,r17,4
   86f34:	84000104 	addi	r16,r16,4
   86f38:	2908b03a 	or	r4,r5,r4
   86f3c:	59000015 	stw	r4,0(r11)
   86f40:	1807d43a 	srai	r3,r3,16
   86f44:	3015883a 	mov	r10,r6
   86f48:	3017883a 	mov	r11,r6
   86f4c:	8b3fea36 	bltu	r17,r12,86ef8 <__alt_data_end+0xfffbb408>
   86f50:	8200162e 	bgeu	r16,r8,86fac <__mdiff+0x17c>
   86f54:	8017883a 	mov	r11,r16
   86f58:	59400017 	ldw	r5,0(r11)
   86f5c:	31800104 	addi	r6,r6,4
   86f60:	5ac00104 	addi	r11,r11,4
   86f64:	293fffcc 	andi	r4,r5,65535
   86f68:	20c7883a 	add	r3,r4,r3
   86f6c:	280ed43a 	srli	r7,r5,16
   86f70:	180bd43a 	srai	r5,r3,16
   86f74:	193fffcc 	andi	r4,r3,65535
   86f78:	3947883a 	add	r3,r7,r5
   86f7c:	180a943a 	slli	r5,r3,16
   86f80:	1807d43a 	srai	r3,r3,16
   86f84:	2908b03a 	or	r4,r5,r4
   86f88:	313fff15 	stw	r4,-4(r6)
   86f8c:	5a3ff236 	bltu	r11,r8,86f58 <__alt_data_end+0xfffbb468>
   86f90:	0406303a 	nor	r3,zero,r16
   86f94:	1a07883a 	add	r3,r3,r8
   86f98:	1806d0ba 	srli	r3,r3,2
   86f9c:	18c00044 	addi	r3,r3,1
   86fa0:	18c7883a 	add	r3,r3,r3
   86fa4:	18c7883a 	add	r3,r3,r3
   86fa8:	50d5883a 	add	r10,r10,r3
   86fac:	50ffff04 	addi	r3,r10,-4
   86fb0:	2000041e 	bne	r4,zero,86fc4 <__mdiff+0x194>
   86fb4:	18ffff04 	addi	r3,r3,-4
   86fb8:	19000017 	ldw	r4,0(r3)
   86fbc:	4a7fffc4 	addi	r9,r9,-1
   86fc0:	203ffc26 	beq	r4,zero,86fb4 <__alt_data_end+0xfffbb4c4>
   86fc4:	12400415 	stw	r9,16(r2)
   86fc8:	dfc00517 	ldw	ra,20(sp)
   86fcc:	dd000417 	ldw	r20,16(sp)
   86fd0:	dcc00317 	ldw	r19,12(sp)
   86fd4:	dc800217 	ldw	r18,8(sp)
   86fd8:	dc400117 	ldw	r17,4(sp)
   86fdc:	dc000017 	ldw	r16,0(sp)
   86fe0:	dec00604 	addi	sp,sp,24
   86fe4:	f800283a 	ret
   86fe8:	000b883a 	mov	r5,zero
   86fec:	00865080 	call	86508 <_Balloc>
   86ff0:	00c00044 	movi	r3,1
   86ff4:	10c00415 	stw	r3,16(r2)
   86ff8:	10000515 	stw	zero,20(r2)
   86ffc:	003ff206 	br	86fc8 <__alt_data_end+0xfffbb4d8>
   87000:	8023883a 	mov	r17,r16
   87004:	0029883a 	mov	r20,zero
   87008:	4021883a 	mov	r16,r8
   8700c:	003fad06 	br	86ec4 <__alt_data_end+0xfffbb3d4>
   87010:	9005883a 	mov	r2,r18
   87014:	94400504 	addi	r17,r18,20
   87018:	9c000504 	addi	r16,r19,20
   8701c:	9825883a 	mov	r18,r19
   87020:	05000044 	movi	r20,1
   87024:	1027883a 	mov	r19,r2
   87028:	003fa606 	br	86ec4 <__alt_data_end+0xfffbb3d4>

0008702c <__ulp>:
   8702c:	295ffc2c 	andhi	r5,r5,32752
   87030:	00bf3034 	movhi	r2,64704
   87034:	2887883a 	add	r3,r5,r2
   87038:	00c0020e 	bge	zero,r3,87044 <__ulp+0x18>
   8703c:	0005883a 	mov	r2,zero
   87040:	f800283a 	ret
   87044:	00c7c83a 	sub	r3,zero,r3
   87048:	1807d53a 	srai	r3,r3,20
   8704c:	008004c4 	movi	r2,19
   87050:	10c00b0e 	bge	r2,r3,87080 <__ulp+0x54>
   87054:	18bffb04 	addi	r2,r3,-20
   87058:	01000784 	movi	r4,30
   8705c:	0007883a 	mov	r3,zero
   87060:	20800516 	blt	r4,r2,87078 <__ulp+0x4c>
   87064:	010007c4 	movi	r4,31
   87068:	2089c83a 	sub	r4,r4,r2
   8706c:	00800044 	movi	r2,1
   87070:	1104983a 	sll	r2,r2,r4
   87074:	f800283a 	ret
   87078:	00800044 	movi	r2,1
   8707c:	f800283a 	ret
   87080:	01400234 	movhi	r5,8
   87084:	28c7d83a 	sra	r3,r5,r3
   87088:	0005883a 	mov	r2,zero
   8708c:	f800283a 	ret

00087090 <__b2d>:
   87090:	defffa04 	addi	sp,sp,-24
   87094:	dc000015 	stw	r16,0(sp)
   87098:	24000417 	ldw	r16,16(r4)
   8709c:	dc400115 	stw	r17,4(sp)
   870a0:	24400504 	addi	r17,r4,20
   870a4:	8421883a 	add	r16,r16,r16
   870a8:	8421883a 	add	r16,r16,r16
   870ac:	8c21883a 	add	r16,r17,r16
   870b0:	dc800215 	stw	r18,8(sp)
   870b4:	84bfff17 	ldw	r18,-4(r16)
   870b8:	dd000415 	stw	r20,16(sp)
   870bc:	dcc00315 	stw	r19,12(sp)
   870c0:	9009883a 	mov	r4,r18
   870c4:	2829883a 	mov	r20,r5
   870c8:	dfc00515 	stw	ra,20(sp)
   870cc:	00867fc0 	call	867fc <__hi0bits>
   870d0:	00c00804 	movi	r3,32
   870d4:	1889c83a 	sub	r4,r3,r2
   870d8:	a1000015 	stw	r4,0(r20)
   870dc:	01000284 	movi	r4,10
   870e0:	84ffff04 	addi	r19,r16,-4
   870e4:	20801216 	blt	r4,r2,87130 <__b2d+0xa0>
   870e8:	018002c4 	movi	r6,11
   870ec:	308dc83a 	sub	r6,r6,r2
   870f0:	9186d83a 	srl	r3,r18,r6
   870f4:	18cffc34 	orhi	r3,r3,16368
   870f8:	8cc0212e 	bgeu	r17,r19,87180 <__b2d+0xf0>
   870fc:	813ffe17 	ldw	r4,-8(r16)
   87100:	218cd83a 	srl	r6,r4,r6
   87104:	10800544 	addi	r2,r2,21
   87108:	9084983a 	sll	r2,r18,r2
   8710c:	1184b03a 	or	r2,r2,r6
   87110:	dfc00517 	ldw	ra,20(sp)
   87114:	dd000417 	ldw	r20,16(sp)
   87118:	dcc00317 	ldw	r19,12(sp)
   8711c:	dc800217 	ldw	r18,8(sp)
   87120:	dc400117 	ldw	r17,4(sp)
   87124:	dc000017 	ldw	r16,0(sp)
   87128:	dec00604 	addi	sp,sp,24
   8712c:	f800283a 	ret
   87130:	8cc00f2e 	bgeu	r17,r19,87170 <__b2d+0xe0>
   87134:	117ffd44 	addi	r5,r2,-11
   87138:	80bffe17 	ldw	r2,-8(r16)
   8713c:	28000e26 	beq	r5,zero,87178 <__b2d+0xe8>
   87140:	1949c83a 	sub	r4,r3,r5
   87144:	9164983a 	sll	r18,r18,r5
   87148:	1106d83a 	srl	r3,r2,r4
   8714c:	81bffe04 	addi	r6,r16,-8
   87150:	948ffc34 	orhi	r18,r18,16368
   87154:	90c6b03a 	or	r3,r18,r3
   87158:	89800e2e 	bgeu	r17,r6,87194 <__b2d+0x104>
   8715c:	81bffd17 	ldw	r6,-12(r16)
   87160:	1144983a 	sll	r2,r2,r5
   87164:	310ad83a 	srl	r5,r6,r4
   87168:	2884b03a 	or	r2,r5,r2
   8716c:	003fe806 	br	87110 <__alt_data_end+0xfffbb620>
   87170:	10bffd44 	addi	r2,r2,-11
   87174:	1000041e 	bne	r2,zero,87188 <__b2d+0xf8>
   87178:	90cffc34 	orhi	r3,r18,16368
   8717c:	003fe406 	br	87110 <__alt_data_end+0xfffbb620>
   87180:	000d883a 	mov	r6,zero
   87184:	003fdf06 	br	87104 <__alt_data_end+0xfffbb614>
   87188:	90a4983a 	sll	r18,r18,r2
   8718c:	0005883a 	mov	r2,zero
   87190:	003ff906 	br	87178 <__alt_data_end+0xfffbb688>
   87194:	1144983a 	sll	r2,r2,r5
   87198:	003fdd06 	br	87110 <__alt_data_end+0xfffbb620>

0008719c <__d2b>:
   8719c:	defff804 	addi	sp,sp,-32
   871a0:	dc000215 	stw	r16,8(sp)
   871a4:	3021883a 	mov	r16,r6
   871a8:	dc400315 	stw	r17,12(sp)
   871ac:	8022907a 	slli	r17,r16,1
   871b0:	dd000615 	stw	r20,24(sp)
   871b4:	2829883a 	mov	r20,r5
   871b8:	01400044 	movi	r5,1
   871bc:	dcc00515 	stw	r19,20(sp)
   871c0:	dc800415 	stw	r18,16(sp)
   871c4:	dfc00715 	stw	ra,28(sp)
   871c8:	3825883a 	mov	r18,r7
   871cc:	8822d57a 	srli	r17,r17,21
   871d0:	00865080 	call	86508 <_Balloc>
   871d4:	1027883a 	mov	r19,r2
   871d8:	00800434 	movhi	r2,16
   871dc:	10bfffc4 	addi	r2,r2,-1
   871e0:	808c703a 	and	r6,r16,r2
   871e4:	88000126 	beq	r17,zero,871ec <__d2b+0x50>
   871e8:	31800434 	orhi	r6,r6,16
   871ec:	d9800015 	stw	r6,0(sp)
   871f0:	a0002426 	beq	r20,zero,87284 <__d2b+0xe8>
   871f4:	d9000104 	addi	r4,sp,4
   871f8:	dd000115 	stw	r20,4(sp)
   871fc:	00868640 	call	86864 <__lo0bits>
   87200:	d8c00017 	ldw	r3,0(sp)
   87204:	10002f1e 	bne	r2,zero,872c4 <__d2b+0x128>
   87208:	d9000117 	ldw	r4,4(sp)
   8720c:	99000515 	stw	r4,20(r19)
   87210:	1821003a 	cmpeq	r16,r3,zero
   87214:	01000084 	movi	r4,2
   87218:	2421c83a 	sub	r16,r4,r16
   8721c:	98c00615 	stw	r3,24(r19)
   87220:	9c000415 	stw	r16,16(r19)
   87224:	88001f1e 	bne	r17,zero,872a4 <__d2b+0x108>
   87228:	10bef384 	addi	r2,r2,-1074
   8722c:	90800015 	stw	r2,0(r18)
   87230:	00900034 	movhi	r2,16384
   87234:	10bfffc4 	addi	r2,r2,-1
   87238:	8085883a 	add	r2,r16,r2
   8723c:	1085883a 	add	r2,r2,r2
   87240:	1085883a 	add	r2,r2,r2
   87244:	9885883a 	add	r2,r19,r2
   87248:	11000517 	ldw	r4,20(r2)
   8724c:	8020917a 	slli	r16,r16,5
   87250:	00867fc0 	call	867fc <__hi0bits>
   87254:	d8c00817 	ldw	r3,32(sp)
   87258:	8085c83a 	sub	r2,r16,r2
   8725c:	18800015 	stw	r2,0(r3)
   87260:	9805883a 	mov	r2,r19
   87264:	dfc00717 	ldw	ra,28(sp)
   87268:	dd000617 	ldw	r20,24(sp)
   8726c:	dcc00517 	ldw	r19,20(sp)
   87270:	dc800417 	ldw	r18,16(sp)
   87274:	dc400317 	ldw	r17,12(sp)
   87278:	dc000217 	ldw	r16,8(sp)
   8727c:	dec00804 	addi	sp,sp,32
   87280:	f800283a 	ret
   87284:	d809883a 	mov	r4,sp
   87288:	00868640 	call	86864 <__lo0bits>
   8728c:	d8c00017 	ldw	r3,0(sp)
   87290:	04000044 	movi	r16,1
   87294:	9c000415 	stw	r16,16(r19)
   87298:	98c00515 	stw	r3,20(r19)
   8729c:	10800804 	addi	r2,r2,32
   872a0:	883fe126 	beq	r17,zero,87228 <__alt_data_end+0xfffbb738>
   872a4:	00c00d44 	movi	r3,53
   872a8:	8c7ef344 	addi	r17,r17,-1075
   872ac:	88a3883a 	add	r17,r17,r2
   872b0:	1885c83a 	sub	r2,r3,r2
   872b4:	d8c00817 	ldw	r3,32(sp)
   872b8:	94400015 	stw	r17,0(r18)
   872bc:	18800015 	stw	r2,0(r3)
   872c0:	003fe706 	br	87260 <__alt_data_end+0xfffbb770>
   872c4:	01000804 	movi	r4,32
   872c8:	2089c83a 	sub	r4,r4,r2
   872cc:	1908983a 	sll	r4,r3,r4
   872d0:	d9400117 	ldw	r5,4(sp)
   872d4:	1886d83a 	srl	r3,r3,r2
   872d8:	2148b03a 	or	r4,r4,r5
   872dc:	99000515 	stw	r4,20(r19)
   872e0:	d8c00015 	stw	r3,0(sp)
   872e4:	003fca06 	br	87210 <__alt_data_end+0xfffbb720>

000872e8 <__ratio>:
   872e8:	defff904 	addi	sp,sp,-28
   872ec:	dc400315 	stw	r17,12(sp)
   872f0:	2823883a 	mov	r17,r5
   872f4:	d9400104 	addi	r5,sp,4
   872f8:	dfc00615 	stw	ra,24(sp)
   872fc:	dcc00515 	stw	r19,20(sp)
   87300:	dc800415 	stw	r18,16(sp)
   87304:	2027883a 	mov	r19,r4
   87308:	dc000215 	stw	r16,8(sp)
   8730c:	00870900 	call	87090 <__b2d>
   87310:	d80b883a 	mov	r5,sp
   87314:	8809883a 	mov	r4,r17
   87318:	1025883a 	mov	r18,r2
   8731c:	1821883a 	mov	r16,r3
   87320:	00870900 	call	87090 <__b2d>
   87324:	8a000417 	ldw	r8,16(r17)
   87328:	99000417 	ldw	r4,16(r19)
   8732c:	d9400117 	ldw	r5,4(sp)
   87330:	2209c83a 	sub	r4,r4,r8
   87334:	2010917a 	slli	r8,r4,5
   87338:	d9000017 	ldw	r4,0(sp)
   8733c:	2909c83a 	sub	r4,r5,r4
   87340:	4109883a 	add	r4,r8,r4
   87344:	01000e0e 	bge	zero,r4,87380 <__ratio+0x98>
   87348:	2008953a 	slli	r4,r4,20
   8734c:	2421883a 	add	r16,r4,r16
   87350:	100d883a 	mov	r6,r2
   87354:	180f883a 	mov	r7,r3
   87358:	9009883a 	mov	r4,r18
   8735c:	800b883a 	mov	r5,r16
   87360:	008b1d40 	call	8b1d4 <__divdf3>
   87364:	dfc00617 	ldw	ra,24(sp)
   87368:	dcc00517 	ldw	r19,20(sp)
   8736c:	dc800417 	ldw	r18,16(sp)
   87370:	dc400317 	ldw	r17,12(sp)
   87374:	dc000217 	ldw	r16,8(sp)
   87378:	dec00704 	addi	sp,sp,28
   8737c:	f800283a 	ret
   87380:	2008953a 	slli	r4,r4,20
   87384:	1907c83a 	sub	r3,r3,r4
   87388:	003ff106 	br	87350 <__alt_data_end+0xfffbb860>

0008738c <_mprec_log10>:
   8738c:	defffe04 	addi	sp,sp,-8
   87390:	dc000015 	stw	r16,0(sp)
   87394:	dfc00115 	stw	ra,4(sp)
   87398:	008005c4 	movi	r2,23
   8739c:	2021883a 	mov	r16,r4
   873a0:	11000d0e 	bge	r2,r4,873d8 <_mprec_log10+0x4c>
   873a4:	0005883a 	mov	r2,zero
   873a8:	00cffc34 	movhi	r3,16368
   873ac:	843fffc4 	addi	r16,r16,-1
   873b0:	000d883a 	mov	r6,zero
   873b4:	01d00934 	movhi	r7,16420
   873b8:	1009883a 	mov	r4,r2
   873bc:	180b883a 	mov	r5,r3
   873c0:	008bd140 	call	8bd14 <__muldf3>
   873c4:	803ff91e 	bne	r16,zero,873ac <__alt_data_end+0xfffbb8bc>
   873c8:	dfc00117 	ldw	ra,4(sp)
   873cc:	dc000017 	ldw	r16,0(sp)
   873d0:	dec00204 	addi	sp,sp,8
   873d4:	f800283a 	ret
   873d8:	202090fa 	slli	r16,r4,3
   873dc:	00800274 	movhi	r2,9
   873e0:	10be7704 	addi	r2,r2,-1572
   873e4:	1421883a 	add	r16,r2,r16
   873e8:	80800017 	ldw	r2,0(r16)
   873ec:	80c00117 	ldw	r3,4(r16)
   873f0:	dfc00117 	ldw	ra,4(sp)
   873f4:	dc000017 	ldw	r16,0(sp)
   873f8:	dec00204 	addi	sp,sp,8
   873fc:	f800283a 	ret

00087400 <__copybits>:
   87400:	297fffc4 	addi	r5,r5,-1
   87404:	280fd17a 	srai	r7,r5,5
   87408:	30c00417 	ldw	r3,16(r6)
   8740c:	30800504 	addi	r2,r6,20
   87410:	39c00044 	addi	r7,r7,1
   87414:	18c7883a 	add	r3,r3,r3
   87418:	39cf883a 	add	r7,r7,r7
   8741c:	18c7883a 	add	r3,r3,r3
   87420:	39cf883a 	add	r7,r7,r7
   87424:	10c7883a 	add	r3,r2,r3
   87428:	21cf883a 	add	r7,r4,r7
   8742c:	10c00d2e 	bgeu	r2,r3,87464 <__copybits+0x64>
   87430:	200b883a 	mov	r5,r4
   87434:	12000017 	ldw	r8,0(r2)
   87438:	29400104 	addi	r5,r5,4
   8743c:	10800104 	addi	r2,r2,4
   87440:	2a3fff15 	stw	r8,-4(r5)
   87444:	10fffb36 	bltu	r2,r3,87434 <__alt_data_end+0xfffbb944>
   87448:	1985c83a 	sub	r2,r3,r6
   8744c:	10bffac4 	addi	r2,r2,-21
   87450:	1004d0ba 	srli	r2,r2,2
   87454:	10800044 	addi	r2,r2,1
   87458:	1085883a 	add	r2,r2,r2
   8745c:	1085883a 	add	r2,r2,r2
   87460:	2089883a 	add	r4,r4,r2
   87464:	21c0032e 	bgeu	r4,r7,87474 <__copybits+0x74>
   87468:	20000015 	stw	zero,0(r4)
   8746c:	21000104 	addi	r4,r4,4
   87470:	21fffd36 	bltu	r4,r7,87468 <__alt_data_end+0xfffbb978>
   87474:	f800283a 	ret

00087478 <__any_on>:
   87478:	20c00417 	ldw	r3,16(r4)
   8747c:	2805d17a 	srai	r2,r5,5
   87480:	21000504 	addi	r4,r4,20
   87484:	18800d0e 	bge	r3,r2,874bc <__any_on+0x44>
   87488:	18c7883a 	add	r3,r3,r3
   8748c:	18c7883a 	add	r3,r3,r3
   87490:	20c7883a 	add	r3,r4,r3
   87494:	20c0192e 	bgeu	r4,r3,874fc <__any_on+0x84>
   87498:	18bfff17 	ldw	r2,-4(r3)
   8749c:	18ffff04 	addi	r3,r3,-4
   874a0:	1000041e 	bne	r2,zero,874b4 <__any_on+0x3c>
   874a4:	20c0142e 	bgeu	r4,r3,874f8 <__any_on+0x80>
   874a8:	18ffff04 	addi	r3,r3,-4
   874ac:	19400017 	ldw	r5,0(r3)
   874b0:	283ffc26 	beq	r5,zero,874a4 <__alt_data_end+0xfffbb9b4>
   874b4:	00800044 	movi	r2,1
   874b8:	f800283a 	ret
   874bc:	10c00a0e 	bge	r2,r3,874e8 <__any_on+0x70>
   874c0:	1085883a 	add	r2,r2,r2
   874c4:	1085883a 	add	r2,r2,r2
   874c8:	294007cc 	andi	r5,r5,31
   874cc:	2087883a 	add	r3,r4,r2
   874d0:	283ff026 	beq	r5,zero,87494 <__alt_data_end+0xfffbb9a4>
   874d4:	19800017 	ldw	r6,0(r3)
   874d8:	3144d83a 	srl	r2,r6,r5
   874dc:	114a983a 	sll	r5,r2,r5
   874e0:	317ff41e 	bne	r6,r5,874b4 <__alt_data_end+0xfffbb9c4>
   874e4:	003feb06 	br	87494 <__alt_data_end+0xfffbb9a4>
   874e8:	1085883a 	add	r2,r2,r2
   874ec:	1085883a 	add	r2,r2,r2
   874f0:	2087883a 	add	r3,r4,r2
   874f4:	003fe706 	br	87494 <__alt_data_end+0xfffbb9a4>
   874f8:	f800283a 	ret
   874fc:	0005883a 	mov	r2,zero
   87500:	f800283a 	ret

00087504 <_realloc_r>:
   87504:	defff604 	addi	sp,sp,-40
   87508:	dc800215 	stw	r18,8(sp)
   8750c:	dfc00915 	stw	ra,36(sp)
   87510:	df000815 	stw	fp,32(sp)
   87514:	ddc00715 	stw	r23,28(sp)
   87518:	dd800615 	stw	r22,24(sp)
   8751c:	dd400515 	stw	r21,20(sp)
   87520:	dd000415 	stw	r20,16(sp)
   87524:	dcc00315 	stw	r19,12(sp)
   87528:	dc400115 	stw	r17,4(sp)
   8752c:	dc000015 	stw	r16,0(sp)
   87530:	3025883a 	mov	r18,r6
   87534:	2800b726 	beq	r5,zero,87814 <_realloc_r+0x310>
   87538:	282b883a 	mov	r21,r5
   8753c:	2029883a 	mov	r20,r4
   87540:	008d92c0 	call	8d92c <__malloc_lock>
   87544:	a8bfff17 	ldw	r2,-4(r21)
   87548:	043fff04 	movi	r16,-4
   8754c:	90c002c4 	addi	r3,r18,11
   87550:	01000584 	movi	r4,22
   87554:	acfffe04 	addi	r19,r21,-8
   87558:	1420703a 	and	r16,r2,r16
   8755c:	20c0332e 	bgeu	r4,r3,8762c <_realloc_r+0x128>
   87560:	047ffe04 	movi	r17,-8
   87564:	1c62703a 	and	r17,r3,r17
   87568:	8807883a 	mov	r3,r17
   8756c:	88005816 	blt	r17,zero,876d0 <_realloc_r+0x1cc>
   87570:	8c805736 	bltu	r17,r18,876d0 <_realloc_r+0x1cc>
   87574:	80c0300e 	bge	r16,r3,87638 <_realloc_r+0x134>
   87578:	07000274 	movhi	fp,9
   8757c:	e7002304 	addi	fp,fp,140
   87580:	e1c00217 	ldw	r7,8(fp)
   87584:	9c09883a 	add	r4,r19,r16
   87588:	22000117 	ldw	r8,4(r4)
   8758c:	21c06326 	beq	r4,r7,8771c <_realloc_r+0x218>
   87590:	017fff84 	movi	r5,-2
   87594:	414a703a 	and	r5,r8,r5
   87598:	214b883a 	add	r5,r4,r5
   8759c:	29800117 	ldw	r6,4(r5)
   875a0:	3180004c 	andi	r6,r6,1
   875a4:	30003f26 	beq	r6,zero,876a4 <_realloc_r+0x1a0>
   875a8:	1080004c 	andi	r2,r2,1
   875ac:	10008326 	beq	r2,zero,877bc <_realloc_r+0x2b8>
   875b0:	900b883a 	mov	r5,r18
   875b4:	a009883a 	mov	r4,r20
   875b8:	008584c0 	call	8584c <_malloc_r>
   875bc:	1025883a 	mov	r18,r2
   875c0:	10011e26 	beq	r2,zero,87a3c <_realloc_r+0x538>
   875c4:	a93fff17 	ldw	r4,-4(r21)
   875c8:	10fffe04 	addi	r3,r2,-8
   875cc:	00bfff84 	movi	r2,-2
   875d0:	2084703a 	and	r2,r4,r2
   875d4:	9885883a 	add	r2,r19,r2
   875d8:	1880ee26 	beq	r3,r2,87994 <_realloc_r+0x490>
   875dc:	81bfff04 	addi	r6,r16,-4
   875e0:	00800904 	movi	r2,36
   875e4:	1180b836 	bltu	r2,r6,878c8 <_realloc_r+0x3c4>
   875e8:	00c004c4 	movi	r3,19
   875ec:	19809636 	bltu	r3,r6,87848 <_realloc_r+0x344>
   875f0:	9005883a 	mov	r2,r18
   875f4:	a807883a 	mov	r3,r21
   875f8:	19000017 	ldw	r4,0(r3)
   875fc:	11000015 	stw	r4,0(r2)
   87600:	19000117 	ldw	r4,4(r3)
   87604:	11000115 	stw	r4,4(r2)
   87608:	18c00217 	ldw	r3,8(r3)
   8760c:	10c00215 	stw	r3,8(r2)
   87610:	a80b883a 	mov	r5,r21
   87614:	a009883a 	mov	r4,r20
   87618:	0084c600 	call	84c60 <_free_r>
   8761c:	a009883a 	mov	r4,r20
   87620:	008d9500 	call	8d950 <__malloc_unlock>
   87624:	9005883a 	mov	r2,r18
   87628:	00001206 	br	87674 <_realloc_r+0x170>
   8762c:	00c00404 	movi	r3,16
   87630:	1823883a 	mov	r17,r3
   87634:	003fce06 	br	87570 <__alt_data_end+0xfffbba80>
   87638:	a825883a 	mov	r18,r21
   8763c:	8445c83a 	sub	r2,r16,r17
   87640:	00c003c4 	movi	r3,15
   87644:	18802636 	bltu	r3,r2,876e0 <_realloc_r+0x1dc>
   87648:	99800117 	ldw	r6,4(r19)
   8764c:	9c07883a 	add	r3,r19,r16
   87650:	3180004c 	andi	r6,r6,1
   87654:	3420b03a 	or	r16,r6,r16
   87658:	9c000115 	stw	r16,4(r19)
   8765c:	18800117 	ldw	r2,4(r3)
   87660:	10800054 	ori	r2,r2,1
   87664:	18800115 	stw	r2,4(r3)
   87668:	a009883a 	mov	r4,r20
   8766c:	008d9500 	call	8d950 <__malloc_unlock>
   87670:	9005883a 	mov	r2,r18
   87674:	dfc00917 	ldw	ra,36(sp)
   87678:	df000817 	ldw	fp,32(sp)
   8767c:	ddc00717 	ldw	r23,28(sp)
   87680:	dd800617 	ldw	r22,24(sp)
   87684:	dd400517 	ldw	r21,20(sp)
   87688:	dd000417 	ldw	r20,16(sp)
   8768c:	dcc00317 	ldw	r19,12(sp)
   87690:	dc800217 	ldw	r18,8(sp)
   87694:	dc400117 	ldw	r17,4(sp)
   87698:	dc000017 	ldw	r16,0(sp)
   8769c:	dec00a04 	addi	sp,sp,40
   876a0:	f800283a 	ret
   876a4:	017fff04 	movi	r5,-4
   876a8:	414a703a 	and	r5,r8,r5
   876ac:	814d883a 	add	r6,r16,r5
   876b0:	30c01f16 	blt	r6,r3,87730 <_realloc_r+0x22c>
   876b4:	20800317 	ldw	r2,12(r4)
   876b8:	20c00217 	ldw	r3,8(r4)
   876bc:	a825883a 	mov	r18,r21
   876c0:	3021883a 	mov	r16,r6
   876c4:	18800315 	stw	r2,12(r3)
   876c8:	10c00215 	stw	r3,8(r2)
   876cc:	003fdb06 	br	8763c <__alt_data_end+0xfffbbb4c>
   876d0:	00800304 	movi	r2,12
   876d4:	a0800015 	stw	r2,0(r20)
   876d8:	0005883a 	mov	r2,zero
   876dc:	003fe506 	br	87674 <__alt_data_end+0xfffbbb84>
   876e0:	98c00117 	ldw	r3,4(r19)
   876e4:	9c4b883a 	add	r5,r19,r17
   876e8:	11000054 	ori	r4,r2,1
   876ec:	18c0004c 	andi	r3,r3,1
   876f0:	1c62b03a 	or	r17,r3,r17
   876f4:	9c400115 	stw	r17,4(r19)
   876f8:	29000115 	stw	r4,4(r5)
   876fc:	2885883a 	add	r2,r5,r2
   87700:	10c00117 	ldw	r3,4(r2)
   87704:	29400204 	addi	r5,r5,8
   87708:	a009883a 	mov	r4,r20
   8770c:	18c00054 	ori	r3,r3,1
   87710:	10c00115 	stw	r3,4(r2)
   87714:	0084c600 	call	84c60 <_free_r>
   87718:	003fd306 	br	87668 <__alt_data_end+0xfffbbb78>
   8771c:	017fff04 	movi	r5,-4
   87720:	414a703a 	and	r5,r8,r5
   87724:	89800404 	addi	r6,r17,16
   87728:	8151883a 	add	r8,r16,r5
   8772c:	4180590e 	bge	r8,r6,87894 <_realloc_r+0x390>
   87730:	1080004c 	andi	r2,r2,1
   87734:	103f9e1e 	bne	r2,zero,875b0 <__alt_data_end+0xfffbbac0>
   87738:	adbffe17 	ldw	r22,-8(r21)
   8773c:	00bfff04 	movi	r2,-4
   87740:	9dadc83a 	sub	r22,r19,r22
   87744:	b1800117 	ldw	r6,4(r22)
   87748:	3084703a 	and	r2,r6,r2
   8774c:	20002026 	beq	r4,zero,877d0 <_realloc_r+0x2cc>
   87750:	80af883a 	add	r23,r16,r2
   87754:	b96f883a 	add	r23,r23,r5
   87758:	21c05f26 	beq	r4,r7,878d8 <_realloc_r+0x3d4>
   8775c:	b8c01c16 	blt	r23,r3,877d0 <_realloc_r+0x2cc>
   87760:	20800317 	ldw	r2,12(r4)
   87764:	20c00217 	ldw	r3,8(r4)
   87768:	81bfff04 	addi	r6,r16,-4
   8776c:	01000904 	movi	r4,36
   87770:	18800315 	stw	r2,12(r3)
   87774:	10c00215 	stw	r3,8(r2)
   87778:	b0c00217 	ldw	r3,8(r22)
   8777c:	b0800317 	ldw	r2,12(r22)
   87780:	b4800204 	addi	r18,r22,8
   87784:	18800315 	stw	r2,12(r3)
   87788:	10c00215 	stw	r3,8(r2)
   8778c:	21801b36 	bltu	r4,r6,877fc <_realloc_r+0x2f8>
   87790:	008004c4 	movi	r2,19
   87794:	1180352e 	bgeu	r2,r6,8786c <_realloc_r+0x368>
   87798:	a8800017 	ldw	r2,0(r21)
   8779c:	b0800215 	stw	r2,8(r22)
   877a0:	a8800117 	ldw	r2,4(r21)
   877a4:	b0800315 	stw	r2,12(r22)
   877a8:	008006c4 	movi	r2,27
   877ac:	11807f36 	bltu	r2,r6,879ac <_realloc_r+0x4a8>
   877b0:	b0800404 	addi	r2,r22,16
   877b4:	ad400204 	addi	r21,r21,8
   877b8:	00002d06 	br	87870 <_realloc_r+0x36c>
   877bc:	adbffe17 	ldw	r22,-8(r21)
   877c0:	00bfff04 	movi	r2,-4
   877c4:	9dadc83a 	sub	r22,r19,r22
   877c8:	b1000117 	ldw	r4,4(r22)
   877cc:	2084703a 	and	r2,r4,r2
   877d0:	b03f7726 	beq	r22,zero,875b0 <__alt_data_end+0xfffbbac0>
   877d4:	80af883a 	add	r23,r16,r2
   877d8:	b8ff7516 	blt	r23,r3,875b0 <__alt_data_end+0xfffbbac0>
   877dc:	b0800317 	ldw	r2,12(r22)
   877e0:	b0c00217 	ldw	r3,8(r22)
   877e4:	81bfff04 	addi	r6,r16,-4
   877e8:	01000904 	movi	r4,36
   877ec:	18800315 	stw	r2,12(r3)
   877f0:	10c00215 	stw	r3,8(r2)
   877f4:	b4800204 	addi	r18,r22,8
   877f8:	21bfe52e 	bgeu	r4,r6,87790 <__alt_data_end+0xfffbbca0>
   877fc:	a80b883a 	mov	r5,r21
   87800:	9009883a 	mov	r4,r18
   87804:	00862840 	call	86284 <memmove>
   87808:	b821883a 	mov	r16,r23
   8780c:	b027883a 	mov	r19,r22
   87810:	003f8a06 	br	8763c <__alt_data_end+0xfffbbb4c>
   87814:	300b883a 	mov	r5,r6
   87818:	dfc00917 	ldw	ra,36(sp)
   8781c:	df000817 	ldw	fp,32(sp)
   87820:	ddc00717 	ldw	r23,28(sp)
   87824:	dd800617 	ldw	r22,24(sp)
   87828:	dd400517 	ldw	r21,20(sp)
   8782c:	dd000417 	ldw	r20,16(sp)
   87830:	dcc00317 	ldw	r19,12(sp)
   87834:	dc800217 	ldw	r18,8(sp)
   87838:	dc400117 	ldw	r17,4(sp)
   8783c:	dc000017 	ldw	r16,0(sp)
   87840:	dec00a04 	addi	sp,sp,40
   87844:	008584c1 	jmpi	8584c <_malloc_r>
   87848:	a8c00017 	ldw	r3,0(r21)
   8784c:	90c00015 	stw	r3,0(r18)
   87850:	a8c00117 	ldw	r3,4(r21)
   87854:	90c00115 	stw	r3,4(r18)
   87858:	00c006c4 	movi	r3,27
   8785c:	19804536 	bltu	r3,r6,87974 <_realloc_r+0x470>
   87860:	90800204 	addi	r2,r18,8
   87864:	a8c00204 	addi	r3,r21,8
   87868:	003f6306 	br	875f8 <__alt_data_end+0xfffbbb08>
   8786c:	9005883a 	mov	r2,r18
   87870:	a8c00017 	ldw	r3,0(r21)
   87874:	b821883a 	mov	r16,r23
   87878:	b027883a 	mov	r19,r22
   8787c:	10c00015 	stw	r3,0(r2)
   87880:	a8c00117 	ldw	r3,4(r21)
   87884:	10c00115 	stw	r3,4(r2)
   87888:	a8c00217 	ldw	r3,8(r21)
   8788c:	10c00215 	stw	r3,8(r2)
   87890:	003f6a06 	br	8763c <__alt_data_end+0xfffbbb4c>
   87894:	9c67883a 	add	r19,r19,r17
   87898:	4445c83a 	sub	r2,r8,r17
   8789c:	e4c00215 	stw	r19,8(fp)
   878a0:	10800054 	ori	r2,r2,1
   878a4:	98800115 	stw	r2,4(r19)
   878a8:	a8bfff17 	ldw	r2,-4(r21)
   878ac:	a009883a 	mov	r4,r20
   878b0:	1080004c 	andi	r2,r2,1
   878b4:	1462b03a 	or	r17,r2,r17
   878b8:	ac7fff15 	stw	r17,-4(r21)
   878bc:	008d9500 	call	8d950 <__malloc_unlock>
   878c0:	a805883a 	mov	r2,r21
   878c4:	003f6b06 	br	87674 <__alt_data_end+0xfffbbb84>
   878c8:	a80b883a 	mov	r5,r21
   878cc:	9009883a 	mov	r4,r18
   878d0:	00862840 	call	86284 <memmove>
   878d4:	003f4e06 	br	87610 <__alt_data_end+0xfffbbb20>
   878d8:	89000404 	addi	r4,r17,16
   878dc:	b93fbc16 	blt	r23,r4,877d0 <__alt_data_end+0xfffbbce0>
   878e0:	b0800317 	ldw	r2,12(r22)
   878e4:	b0c00217 	ldw	r3,8(r22)
   878e8:	81bfff04 	addi	r6,r16,-4
   878ec:	01000904 	movi	r4,36
   878f0:	18800315 	stw	r2,12(r3)
   878f4:	10c00215 	stw	r3,8(r2)
   878f8:	b4800204 	addi	r18,r22,8
   878fc:	21804336 	bltu	r4,r6,87a0c <_realloc_r+0x508>
   87900:	008004c4 	movi	r2,19
   87904:	11803f2e 	bgeu	r2,r6,87a04 <_realloc_r+0x500>
   87908:	a8800017 	ldw	r2,0(r21)
   8790c:	b0800215 	stw	r2,8(r22)
   87910:	a8800117 	ldw	r2,4(r21)
   87914:	b0800315 	stw	r2,12(r22)
   87918:	008006c4 	movi	r2,27
   8791c:	11803f36 	bltu	r2,r6,87a1c <_realloc_r+0x518>
   87920:	b0800404 	addi	r2,r22,16
   87924:	ad400204 	addi	r21,r21,8
   87928:	a8c00017 	ldw	r3,0(r21)
   8792c:	10c00015 	stw	r3,0(r2)
   87930:	a8c00117 	ldw	r3,4(r21)
   87934:	10c00115 	stw	r3,4(r2)
   87938:	a8c00217 	ldw	r3,8(r21)
   8793c:	10c00215 	stw	r3,8(r2)
   87940:	b447883a 	add	r3,r22,r17
   87944:	bc45c83a 	sub	r2,r23,r17
   87948:	e0c00215 	stw	r3,8(fp)
   8794c:	10800054 	ori	r2,r2,1
   87950:	18800115 	stw	r2,4(r3)
   87954:	b0800117 	ldw	r2,4(r22)
   87958:	a009883a 	mov	r4,r20
   8795c:	1080004c 	andi	r2,r2,1
   87960:	1462b03a 	or	r17,r2,r17
   87964:	b4400115 	stw	r17,4(r22)
   87968:	008d9500 	call	8d950 <__malloc_unlock>
   8796c:	9005883a 	mov	r2,r18
   87970:	003f4006 	br	87674 <__alt_data_end+0xfffbbb84>
   87974:	a8c00217 	ldw	r3,8(r21)
   87978:	90c00215 	stw	r3,8(r18)
   8797c:	a8c00317 	ldw	r3,12(r21)
   87980:	90c00315 	stw	r3,12(r18)
   87984:	30801126 	beq	r6,r2,879cc <_realloc_r+0x4c8>
   87988:	90800404 	addi	r2,r18,16
   8798c:	a8c00404 	addi	r3,r21,16
   87990:	003f1906 	br	875f8 <__alt_data_end+0xfffbbb08>
   87994:	90ffff17 	ldw	r3,-4(r18)
   87998:	00bfff04 	movi	r2,-4
   8799c:	a825883a 	mov	r18,r21
   879a0:	1884703a 	and	r2,r3,r2
   879a4:	80a1883a 	add	r16,r16,r2
   879a8:	003f2406 	br	8763c <__alt_data_end+0xfffbbb4c>
   879ac:	a8800217 	ldw	r2,8(r21)
   879b0:	b0800415 	stw	r2,16(r22)
   879b4:	a8800317 	ldw	r2,12(r21)
   879b8:	b0800515 	stw	r2,20(r22)
   879bc:	31000a26 	beq	r6,r4,879e8 <_realloc_r+0x4e4>
   879c0:	b0800604 	addi	r2,r22,24
   879c4:	ad400404 	addi	r21,r21,16
   879c8:	003fa906 	br	87870 <__alt_data_end+0xfffbbd80>
   879cc:	a9000417 	ldw	r4,16(r21)
   879d0:	90800604 	addi	r2,r18,24
   879d4:	a8c00604 	addi	r3,r21,24
   879d8:	91000415 	stw	r4,16(r18)
   879dc:	a9000517 	ldw	r4,20(r21)
   879e0:	91000515 	stw	r4,20(r18)
   879e4:	003f0406 	br	875f8 <__alt_data_end+0xfffbbb08>
   879e8:	a8c00417 	ldw	r3,16(r21)
   879ec:	ad400604 	addi	r21,r21,24
   879f0:	b0800804 	addi	r2,r22,32
   879f4:	b0c00615 	stw	r3,24(r22)
   879f8:	a8ffff17 	ldw	r3,-4(r21)
   879fc:	b0c00715 	stw	r3,28(r22)
   87a00:	003f9b06 	br	87870 <__alt_data_end+0xfffbbd80>
   87a04:	9005883a 	mov	r2,r18
   87a08:	003fc706 	br	87928 <__alt_data_end+0xfffbbe38>
   87a0c:	a80b883a 	mov	r5,r21
   87a10:	9009883a 	mov	r4,r18
   87a14:	00862840 	call	86284 <memmove>
   87a18:	003fc906 	br	87940 <__alt_data_end+0xfffbbe50>
   87a1c:	a8800217 	ldw	r2,8(r21)
   87a20:	b0800415 	stw	r2,16(r22)
   87a24:	a8800317 	ldw	r2,12(r21)
   87a28:	b0800515 	stw	r2,20(r22)
   87a2c:	31000726 	beq	r6,r4,87a4c <_realloc_r+0x548>
   87a30:	b0800604 	addi	r2,r22,24
   87a34:	ad400404 	addi	r21,r21,16
   87a38:	003fbb06 	br	87928 <__alt_data_end+0xfffbbe38>
   87a3c:	a009883a 	mov	r4,r20
   87a40:	008d9500 	call	8d950 <__malloc_unlock>
   87a44:	0005883a 	mov	r2,zero
   87a48:	003f0a06 	br	87674 <__alt_data_end+0xfffbbb84>
   87a4c:	a8c00417 	ldw	r3,16(r21)
   87a50:	ad400604 	addi	r21,r21,24
   87a54:	b0800804 	addi	r2,r22,32
   87a58:	b0c00615 	stw	r3,24(r22)
   87a5c:	a8ffff17 	ldw	r3,-4(r21)
   87a60:	b0c00715 	stw	r3,28(r22)
   87a64:	003fb006 	br	87928 <__alt_data_end+0xfffbbe38>

00087a68 <__fpclassifyd>:
   87a68:	00a00034 	movhi	r2,32768
   87a6c:	10bfffc4 	addi	r2,r2,-1
   87a70:	2884703a 	and	r2,r5,r2
   87a74:	10000726 	beq	r2,zero,87a94 <__fpclassifyd+0x2c>
   87a78:	00fffc34 	movhi	r3,65520
   87a7c:	019ff834 	movhi	r6,32736
   87a80:	28c7883a 	add	r3,r5,r3
   87a84:	31bfffc4 	addi	r6,r6,-1
   87a88:	30c00536 	bltu	r6,r3,87aa0 <__fpclassifyd+0x38>
   87a8c:	00800104 	movi	r2,4
   87a90:	f800283a 	ret
   87a94:	2000021e 	bne	r4,zero,87aa0 <__fpclassifyd+0x38>
   87a98:	00800084 	movi	r2,2
   87a9c:	f800283a 	ret
   87aa0:	00dffc34 	movhi	r3,32752
   87aa4:	019ff834 	movhi	r6,32736
   87aa8:	28cb883a 	add	r5,r5,r3
   87aac:	31bfffc4 	addi	r6,r6,-1
   87ab0:	317ff62e 	bgeu	r6,r5,87a8c <__alt_data_end+0xfffbbf9c>
   87ab4:	01400434 	movhi	r5,16
   87ab8:	297fffc4 	addi	r5,r5,-1
   87abc:	28800236 	bltu	r5,r2,87ac8 <__fpclassifyd+0x60>
   87ac0:	008000c4 	movi	r2,3
   87ac4:	f800283a 	ret
   87ac8:	10c00226 	beq	r2,r3,87ad4 <__fpclassifyd+0x6c>
   87acc:	0005883a 	mov	r2,zero
   87ad0:	f800283a 	ret
   87ad4:	2005003a 	cmpeq	r2,r4,zero
   87ad8:	f800283a 	ret

00087adc <_sbrk_r>:
   87adc:	defffd04 	addi	sp,sp,-12
   87ae0:	dc000015 	stw	r16,0(sp)
   87ae4:	04000274 	movhi	r16,9
   87ae8:	dc400115 	stw	r17,4(sp)
   87aec:	840c7d04 	addi	r16,r16,12788
   87af0:	2023883a 	mov	r17,r4
   87af4:	2809883a 	mov	r4,r5
   87af8:	dfc00215 	stw	ra,8(sp)
   87afc:	80000015 	stw	zero,0(r16)
   87b00:	008db100 	call	8db10 <sbrk>
   87b04:	00ffffc4 	movi	r3,-1
   87b08:	10c00526 	beq	r2,r3,87b20 <_sbrk_r+0x44>
   87b0c:	dfc00217 	ldw	ra,8(sp)
   87b10:	dc400117 	ldw	r17,4(sp)
   87b14:	dc000017 	ldw	r16,0(sp)
   87b18:	dec00304 	addi	sp,sp,12
   87b1c:	f800283a 	ret
   87b20:	80c00017 	ldw	r3,0(r16)
   87b24:	183ff926 	beq	r3,zero,87b0c <__alt_data_end+0xfffbc01c>
   87b28:	88c00015 	stw	r3,0(r17)
   87b2c:	003ff706 	br	87b0c <__alt_data_end+0xfffbc01c>

00087b30 <__sread>:
   87b30:	defffe04 	addi	sp,sp,-8
   87b34:	dc000015 	stw	r16,0(sp)
   87b38:	2821883a 	mov	r16,r5
   87b3c:	2940038f 	ldh	r5,14(r5)
   87b40:	dfc00115 	stw	ra,4(sp)
   87b44:	00899240 	call	89924 <_read_r>
   87b48:	10000716 	blt	r2,zero,87b68 <__sread+0x38>
   87b4c:	80c01417 	ldw	r3,80(r16)
   87b50:	1887883a 	add	r3,r3,r2
   87b54:	80c01415 	stw	r3,80(r16)
   87b58:	dfc00117 	ldw	ra,4(sp)
   87b5c:	dc000017 	ldw	r16,0(sp)
   87b60:	dec00204 	addi	sp,sp,8
   87b64:	f800283a 	ret
   87b68:	80c0030b 	ldhu	r3,12(r16)
   87b6c:	18fbffcc 	andi	r3,r3,61439
   87b70:	80c0030d 	sth	r3,12(r16)
   87b74:	dfc00117 	ldw	ra,4(sp)
   87b78:	dc000017 	ldw	r16,0(sp)
   87b7c:	dec00204 	addi	sp,sp,8
   87b80:	f800283a 	ret

00087b84 <__seofread>:
   87b84:	0005883a 	mov	r2,zero
   87b88:	f800283a 	ret

00087b8c <__swrite>:
   87b8c:	2880030b 	ldhu	r2,12(r5)
   87b90:	defffb04 	addi	sp,sp,-20
   87b94:	dcc00315 	stw	r19,12(sp)
   87b98:	dc800215 	stw	r18,8(sp)
   87b9c:	dc400115 	stw	r17,4(sp)
   87ba0:	dc000015 	stw	r16,0(sp)
   87ba4:	dfc00415 	stw	ra,16(sp)
   87ba8:	10c0400c 	andi	r3,r2,256
   87bac:	2821883a 	mov	r16,r5
   87bb0:	2023883a 	mov	r17,r4
   87bb4:	3025883a 	mov	r18,r6
   87bb8:	3827883a 	mov	r19,r7
   87bbc:	18000526 	beq	r3,zero,87bd4 <__swrite+0x48>
   87bc0:	2940038f 	ldh	r5,14(r5)
   87bc4:	01c00084 	movi	r7,2
   87bc8:	000d883a 	mov	r6,zero
   87bcc:	00898c40 	call	898c4 <_lseek_r>
   87bd0:	8080030b 	ldhu	r2,12(r16)
   87bd4:	8140038f 	ldh	r5,14(r16)
   87bd8:	10bbffcc 	andi	r2,r2,61439
   87bdc:	980f883a 	mov	r7,r19
   87be0:	900d883a 	mov	r6,r18
   87be4:	8809883a 	mov	r4,r17
   87be8:	8080030d 	sth	r2,12(r16)
   87bec:	dfc00417 	ldw	ra,16(sp)
   87bf0:	dcc00317 	ldw	r19,12(sp)
   87bf4:	dc800217 	ldw	r18,8(sp)
   87bf8:	dc400117 	ldw	r17,4(sp)
   87bfc:	dc000017 	ldw	r16,0(sp)
   87c00:	dec00504 	addi	sp,sp,20
   87c04:	00893901 	jmpi	89390 <_write_r>

00087c08 <__sseek>:
   87c08:	defffe04 	addi	sp,sp,-8
   87c0c:	dc000015 	stw	r16,0(sp)
   87c10:	2821883a 	mov	r16,r5
   87c14:	2940038f 	ldh	r5,14(r5)
   87c18:	dfc00115 	stw	ra,4(sp)
   87c1c:	00898c40 	call	898c4 <_lseek_r>
   87c20:	00ffffc4 	movi	r3,-1
   87c24:	10c00826 	beq	r2,r3,87c48 <__sseek+0x40>
   87c28:	80c0030b 	ldhu	r3,12(r16)
   87c2c:	80801415 	stw	r2,80(r16)
   87c30:	18c40014 	ori	r3,r3,4096
   87c34:	80c0030d 	sth	r3,12(r16)
   87c38:	dfc00117 	ldw	ra,4(sp)
   87c3c:	dc000017 	ldw	r16,0(sp)
   87c40:	dec00204 	addi	sp,sp,8
   87c44:	f800283a 	ret
   87c48:	80c0030b 	ldhu	r3,12(r16)
   87c4c:	18fbffcc 	andi	r3,r3,61439
   87c50:	80c0030d 	sth	r3,12(r16)
   87c54:	dfc00117 	ldw	ra,4(sp)
   87c58:	dc000017 	ldw	r16,0(sp)
   87c5c:	dec00204 	addi	sp,sp,8
   87c60:	f800283a 	ret

00087c64 <__sclose>:
   87c64:	2940038f 	ldh	r5,14(r5)
   87c68:	00893f01 	jmpi	893f0 <_close_r>

00087c6c <strcmp>:
   87c6c:	2144b03a 	or	r2,r4,r5
   87c70:	108000cc 	andi	r2,r2,3
   87c74:	1000171e 	bne	r2,zero,87cd4 <strcmp+0x68>
   87c78:	20800017 	ldw	r2,0(r4)
   87c7c:	28c00017 	ldw	r3,0(r5)
   87c80:	10c0141e 	bne	r2,r3,87cd4 <strcmp+0x68>
   87c84:	027fbff4 	movhi	r9,65279
   87c88:	4a7fbfc4 	addi	r9,r9,-257
   87c8c:	0086303a 	nor	r3,zero,r2
   87c90:	02202074 	movhi	r8,32897
   87c94:	1245883a 	add	r2,r2,r9
   87c98:	42202004 	addi	r8,r8,-32640
   87c9c:	10c4703a 	and	r2,r2,r3
   87ca0:	1204703a 	and	r2,r2,r8
   87ca4:	10000226 	beq	r2,zero,87cb0 <strcmp+0x44>
   87ca8:	00002306 	br	87d38 <strcmp+0xcc>
   87cac:	1000221e 	bne	r2,zero,87d38 <strcmp+0xcc>
   87cb0:	21000104 	addi	r4,r4,4
   87cb4:	20c00017 	ldw	r3,0(r4)
   87cb8:	29400104 	addi	r5,r5,4
   87cbc:	29800017 	ldw	r6,0(r5)
   87cc0:	1a4f883a 	add	r7,r3,r9
   87cc4:	00c4303a 	nor	r2,zero,r3
   87cc8:	3884703a 	and	r2,r7,r2
   87ccc:	1204703a 	and	r2,r2,r8
   87cd0:	19bff626 	beq	r3,r6,87cac <__alt_data_end+0xfffbc1bc>
   87cd4:	20800003 	ldbu	r2,0(r4)
   87cd8:	10c03fcc 	andi	r3,r2,255
   87cdc:	18c0201c 	xori	r3,r3,128
   87ce0:	18ffe004 	addi	r3,r3,-128
   87ce4:	18000c26 	beq	r3,zero,87d18 <strcmp+0xac>
   87ce8:	29800007 	ldb	r6,0(r5)
   87cec:	19800326 	beq	r3,r6,87cfc <strcmp+0x90>
   87cf0:	00001306 	br	87d40 <strcmp+0xd4>
   87cf4:	29800007 	ldb	r6,0(r5)
   87cf8:	11800b1e 	bne	r2,r6,87d28 <strcmp+0xbc>
   87cfc:	21000044 	addi	r4,r4,1
   87d00:	20c00003 	ldbu	r3,0(r4)
   87d04:	29400044 	addi	r5,r5,1
   87d08:	18803fcc 	andi	r2,r3,255
   87d0c:	1080201c 	xori	r2,r2,128
   87d10:	10bfe004 	addi	r2,r2,-128
   87d14:	103ff71e 	bne	r2,zero,87cf4 <__alt_data_end+0xfffbc204>
   87d18:	0007883a 	mov	r3,zero
   87d1c:	28800003 	ldbu	r2,0(r5)
   87d20:	1885c83a 	sub	r2,r3,r2
   87d24:	f800283a 	ret
   87d28:	28800003 	ldbu	r2,0(r5)
   87d2c:	18c03fcc 	andi	r3,r3,255
   87d30:	1885c83a 	sub	r2,r3,r2
   87d34:	f800283a 	ret
   87d38:	0005883a 	mov	r2,zero
   87d3c:	f800283a 	ret
   87d40:	10c03fcc 	andi	r3,r2,255
   87d44:	003ff506 	br	87d1c <__alt_data_end+0xfffbc22c>

00087d48 <__sprint_r.part.0>:
   87d48:	28801917 	ldw	r2,100(r5)
   87d4c:	defff604 	addi	sp,sp,-40
   87d50:	dd400515 	stw	r21,20(sp)
   87d54:	dfc00915 	stw	ra,36(sp)
   87d58:	df000815 	stw	fp,32(sp)
   87d5c:	ddc00715 	stw	r23,28(sp)
   87d60:	dd800615 	stw	r22,24(sp)
   87d64:	dd000415 	stw	r20,16(sp)
   87d68:	dcc00315 	stw	r19,12(sp)
   87d6c:	dc800215 	stw	r18,8(sp)
   87d70:	dc400115 	stw	r17,4(sp)
   87d74:	dc000015 	stw	r16,0(sp)
   87d78:	1088000c 	andi	r2,r2,8192
   87d7c:	302b883a 	mov	r21,r6
   87d80:	10002e26 	beq	r2,zero,87e3c <__sprint_r.part.0+0xf4>
   87d84:	30800217 	ldw	r2,8(r6)
   87d88:	35800017 	ldw	r22,0(r6)
   87d8c:	10002926 	beq	r2,zero,87e34 <__sprint_r.part.0+0xec>
   87d90:	2827883a 	mov	r19,r5
   87d94:	2029883a 	mov	r20,r4
   87d98:	b5c00104 	addi	r23,r22,4
   87d9c:	04bfffc4 	movi	r18,-1
   87da0:	bc400017 	ldw	r17,0(r23)
   87da4:	b4000017 	ldw	r16,0(r22)
   87da8:	0039883a 	mov	fp,zero
   87dac:	8822d0ba 	srli	r17,r17,2
   87db0:	8800031e 	bne	r17,zero,87dc0 <__sprint_r.part.0+0x78>
   87db4:	00001806 	br	87e18 <__sprint_r.part.0+0xd0>
   87db8:	84000104 	addi	r16,r16,4
   87dbc:	8f001526 	beq	r17,fp,87e14 <__sprint_r.part.0+0xcc>
   87dc0:	81400017 	ldw	r5,0(r16)
   87dc4:	980d883a 	mov	r6,r19
   87dc8:	a009883a 	mov	r4,r20
   87dcc:	00897700 	call	89770 <_fputwc_r>
   87dd0:	e7000044 	addi	fp,fp,1
   87dd4:	14bff81e 	bne	r2,r18,87db8 <__alt_data_end+0xfffbc2c8>
   87dd8:	9005883a 	mov	r2,r18
   87ddc:	a8000215 	stw	zero,8(r21)
   87de0:	a8000115 	stw	zero,4(r21)
   87de4:	dfc00917 	ldw	ra,36(sp)
   87de8:	df000817 	ldw	fp,32(sp)
   87dec:	ddc00717 	ldw	r23,28(sp)
   87df0:	dd800617 	ldw	r22,24(sp)
   87df4:	dd400517 	ldw	r21,20(sp)
   87df8:	dd000417 	ldw	r20,16(sp)
   87dfc:	dcc00317 	ldw	r19,12(sp)
   87e00:	dc800217 	ldw	r18,8(sp)
   87e04:	dc400117 	ldw	r17,4(sp)
   87e08:	dc000017 	ldw	r16,0(sp)
   87e0c:	dec00a04 	addi	sp,sp,40
   87e10:	f800283a 	ret
   87e14:	a8800217 	ldw	r2,8(r21)
   87e18:	8c63883a 	add	r17,r17,r17
   87e1c:	8c63883a 	add	r17,r17,r17
   87e20:	1445c83a 	sub	r2,r2,r17
   87e24:	a8800215 	stw	r2,8(r21)
   87e28:	b5800204 	addi	r22,r22,8
   87e2c:	bdc00204 	addi	r23,r23,8
   87e30:	103fdb1e 	bne	r2,zero,87da0 <__alt_data_end+0xfffbc2b0>
   87e34:	0005883a 	mov	r2,zero
   87e38:	003fe806 	br	87ddc <__alt_data_end+0xfffbc2ec>
   87e3c:	0084f700 	call	84f70 <__sfvwrite_r>
   87e40:	003fe606 	br	87ddc <__alt_data_end+0xfffbc2ec>

00087e44 <__sprint_r>:
   87e44:	30c00217 	ldw	r3,8(r6)
   87e48:	18000126 	beq	r3,zero,87e50 <__sprint_r+0xc>
   87e4c:	0087d481 	jmpi	87d48 <__sprint_r.part.0>
   87e50:	30000115 	stw	zero,4(r6)
   87e54:	0005883a 	mov	r2,zero
   87e58:	f800283a 	ret

00087e5c <___vfiprintf_internal_r>:
   87e5c:	deffc904 	addi	sp,sp,-220
   87e60:	df003515 	stw	fp,212(sp)
   87e64:	dd003115 	stw	r20,196(sp)
   87e68:	dfc03615 	stw	ra,216(sp)
   87e6c:	ddc03415 	stw	r23,208(sp)
   87e70:	dd803315 	stw	r22,204(sp)
   87e74:	dd403215 	stw	r21,200(sp)
   87e78:	dcc03015 	stw	r19,192(sp)
   87e7c:	dc802f15 	stw	r18,188(sp)
   87e80:	dc402e15 	stw	r17,184(sp)
   87e84:	dc002d15 	stw	r16,180(sp)
   87e88:	d9002015 	stw	r4,128(sp)
   87e8c:	d9c02215 	stw	r7,136(sp)
   87e90:	2829883a 	mov	r20,r5
   87e94:	3039883a 	mov	fp,r6
   87e98:	20000226 	beq	r4,zero,87ea4 <___vfiprintf_internal_r+0x48>
   87e9c:	20800e17 	ldw	r2,56(r4)
   87ea0:	1000cf26 	beq	r2,zero,881e0 <___vfiprintf_internal_r+0x384>
   87ea4:	a080030b 	ldhu	r2,12(r20)
   87ea8:	10c8000c 	andi	r3,r2,8192
   87eac:	1800061e 	bne	r3,zero,87ec8 <___vfiprintf_internal_r+0x6c>
   87eb0:	a1001917 	ldw	r4,100(r20)
   87eb4:	00f7ffc4 	movi	r3,-8193
   87eb8:	10880014 	ori	r2,r2,8192
   87ebc:	20c6703a 	and	r3,r4,r3
   87ec0:	a080030d 	sth	r2,12(r20)
   87ec4:	a0c01915 	stw	r3,100(r20)
   87ec8:	10c0020c 	andi	r3,r2,8
   87ecc:	1800a926 	beq	r3,zero,88174 <___vfiprintf_internal_r+0x318>
   87ed0:	a0c00417 	ldw	r3,16(r20)
   87ed4:	1800a726 	beq	r3,zero,88174 <___vfiprintf_internal_r+0x318>
   87ed8:	1080068c 	andi	r2,r2,26
   87edc:	00c00284 	movi	r3,10
   87ee0:	10c0ac26 	beq	r2,r3,88194 <___vfiprintf_internal_r+0x338>
   87ee4:	da801a04 	addi	r10,sp,104
   87ee8:	da801e15 	stw	r10,120(sp)
   87eec:	d8801e17 	ldw	r2,120(sp)
   87ef0:	da8019c4 	addi	r10,sp,103
   87ef4:	05800274 	movhi	r22,9
   87ef8:	05c00274 	movhi	r23,9
   87efc:	da801f15 	stw	r10,124(sp)
   87f00:	1295c83a 	sub	r10,r2,r10
   87f04:	b5bead04 	addi	r22,r22,-1356
   87f08:	bdfea904 	addi	r23,r23,-1372
   87f0c:	dec01a15 	stw	sp,104(sp)
   87f10:	d8001c15 	stw	zero,112(sp)
   87f14:	d8001b15 	stw	zero,108(sp)
   87f18:	d8002615 	stw	zero,152(sp)
   87f1c:	d8002315 	stw	zero,140(sp)
   87f20:	da802715 	stw	r10,156(sp)
   87f24:	d811883a 	mov	r8,sp
   87f28:	dd002115 	stw	r20,132(sp)
   87f2c:	e021883a 	mov	r16,fp
   87f30:	80800007 	ldb	r2,0(r16)
   87f34:	1003ea26 	beq	r2,zero,88ee0 <___vfiprintf_internal_r+0x1084>
   87f38:	00c00944 	movi	r3,37
   87f3c:	8025883a 	mov	r18,r16
   87f40:	10c0021e 	bne	r2,r3,87f4c <___vfiprintf_internal_r+0xf0>
   87f44:	00001606 	br	87fa0 <___vfiprintf_internal_r+0x144>
   87f48:	10c00326 	beq	r2,r3,87f58 <___vfiprintf_internal_r+0xfc>
   87f4c:	94800044 	addi	r18,r18,1
   87f50:	90800007 	ldb	r2,0(r18)
   87f54:	103ffc1e 	bne	r2,zero,87f48 <__alt_data_end+0xfffbc458>
   87f58:	9423c83a 	sub	r17,r18,r16
   87f5c:	88001026 	beq	r17,zero,87fa0 <___vfiprintf_internal_r+0x144>
   87f60:	d8c01c17 	ldw	r3,112(sp)
   87f64:	d8801b17 	ldw	r2,108(sp)
   87f68:	44000015 	stw	r16,0(r8)
   87f6c:	88c7883a 	add	r3,r17,r3
   87f70:	10800044 	addi	r2,r2,1
   87f74:	44400115 	stw	r17,4(r8)
   87f78:	d8c01c15 	stw	r3,112(sp)
   87f7c:	d8801b15 	stw	r2,108(sp)
   87f80:	010001c4 	movi	r4,7
   87f84:	2080760e 	bge	r4,r2,88160 <___vfiprintf_internal_r+0x304>
   87f88:	1803821e 	bne	r3,zero,88d94 <___vfiprintf_internal_r+0xf38>
   87f8c:	da802317 	ldw	r10,140(sp)
   87f90:	d8001b15 	stw	zero,108(sp)
   87f94:	d811883a 	mov	r8,sp
   87f98:	5455883a 	add	r10,r10,r17
   87f9c:	da802315 	stw	r10,140(sp)
   87fa0:	90800007 	ldb	r2,0(r18)
   87fa4:	10044626 	beq	r2,zero,890c0 <___vfiprintf_internal_r+0x1264>
   87fa8:	90c00047 	ldb	r3,1(r18)
   87fac:	94000044 	addi	r16,r18,1
   87fb0:	d8001d85 	stb	zero,118(sp)
   87fb4:	0009883a 	mov	r4,zero
   87fb8:	000f883a 	mov	r7,zero
   87fbc:	027fffc4 	movi	r9,-1
   87fc0:	0023883a 	mov	r17,zero
   87fc4:	0029883a 	mov	r20,zero
   87fc8:	01401604 	movi	r5,88
   87fcc:	01800244 	movi	r6,9
   87fd0:	03400a84 	movi	r13,42
   87fd4:	03001b04 	movi	r12,108
   87fd8:	84000044 	addi	r16,r16,1
   87fdc:	18bff804 	addi	r2,r3,-32
   87fe0:	28827336 	bltu	r5,r2,889b0 <___vfiprintf_internal_r+0xb54>
   87fe4:	100490ba 	slli	r2,r2,2
   87fe8:	02800234 	movhi	r10,8
   87fec:	529fff04 	addi	r10,r10,32764
   87ff0:	1285883a 	add	r2,r2,r10
   87ff4:	10800017 	ldw	r2,0(r2)
   87ff8:	1000683a 	jmp	r2
   87ffc:	000886e4 	muli	zero,zero,8731
   88000:	000889b0 	cmpltui	zero,zero,8742
   88004:	000889b0 	cmpltui	zero,zero,8742
   88008:	00088704 	movi	zero,8732
   8800c:	000889b0 	cmpltui	zero,zero,8742
   88010:	000889b0 	cmpltui	zero,zero,8742
   88014:	000889b0 	cmpltui	zero,zero,8742
   88018:	000889b0 	cmpltui	zero,zero,8742
   8801c:	000889b0 	cmpltui	zero,zero,8742
   88020:	000889b0 	cmpltui	zero,zero,8742
   88024:	000888ec 	andhi	zero,zero,8739
   88028:	00088908 	cmpgei	zero,zero,8740
   8802c:	000889b0 	cmpltui	zero,zero,8742
   88030:	000881f0 	cmpltui	zero,zero,8711
   88034:	00088918 	cmpnei	zero,zero,8740
   88038:	000889b0 	cmpltui	zero,zero,8742
   8803c:	00088710 	cmplti	zero,zero,8732
   88040:	0008871c 	xori	zero,zero,8732
   88044:	0008871c 	xori	zero,zero,8732
   88048:	0008871c 	xori	zero,zero,8732
   8804c:	0008871c 	xori	zero,zero,8732
   88050:	0008871c 	xori	zero,zero,8732
   88054:	0008871c 	xori	zero,zero,8732
   88058:	0008871c 	xori	zero,zero,8732
   8805c:	0008871c 	xori	zero,zero,8732
   88060:	0008871c 	xori	zero,zero,8732
   88064:	000889b0 	cmpltui	zero,zero,8742
   88068:	000889b0 	cmpltui	zero,zero,8742
   8806c:	000889b0 	cmpltui	zero,zero,8742
   88070:	000889b0 	cmpltui	zero,zero,8742
   88074:	000889b0 	cmpltui	zero,zero,8742
   88078:	000889b0 	cmpltui	zero,zero,8742
   8807c:	000889b0 	cmpltui	zero,zero,8742
   88080:	000889b0 	cmpltui	zero,zero,8742
   88084:	000889b0 	cmpltui	zero,zero,8742
   88088:	000889b0 	cmpltui	zero,zero,8742
   8808c:	00088748 	cmpgei	zero,zero,8733
   88090:	000889b0 	cmpltui	zero,zero,8742
   88094:	000889b0 	cmpltui	zero,zero,8742
   88098:	000889b0 	cmpltui	zero,zero,8742
   8809c:	000889b0 	cmpltui	zero,zero,8742
   880a0:	000889b0 	cmpltui	zero,zero,8742
   880a4:	000889b0 	cmpltui	zero,zero,8742
   880a8:	000889b0 	cmpltui	zero,zero,8742
   880ac:	000889b0 	cmpltui	zero,zero,8742
   880b0:	000889b0 	cmpltui	zero,zero,8742
   880b4:	000889b0 	cmpltui	zero,zero,8742
   880b8:	00088780 	call	8878 <__reset-0x77788>
   880bc:	000889b0 	cmpltui	zero,zero,8742
   880c0:	000889b0 	cmpltui	zero,zero,8742
   880c4:	000889b0 	cmpltui	zero,zero,8742
   880c8:	000889b0 	cmpltui	zero,zero,8742
   880cc:	000889b0 	cmpltui	zero,zero,8742
   880d0:	000887d8 	cmpnei	zero,zero,8735
   880d4:	000889b0 	cmpltui	zero,zero,8742
   880d8:	000889b0 	cmpltui	zero,zero,8742
   880dc:	00088848 	cmpgei	zero,zero,8737
   880e0:	000889b0 	cmpltui	zero,zero,8742
   880e4:	000889b0 	cmpltui	zero,zero,8742
   880e8:	000889b0 	cmpltui	zero,zero,8742
   880ec:	000889b0 	cmpltui	zero,zero,8742
   880f0:	000889b0 	cmpltui	zero,zero,8742
   880f4:	000889b0 	cmpltui	zero,zero,8742
   880f8:	000889b0 	cmpltui	zero,zero,8742
   880fc:	000889b0 	cmpltui	zero,zero,8742
   88100:	000889b0 	cmpltui	zero,zero,8742
   88104:	000889b0 	cmpltui	zero,zero,8742
   88108:	000885f4 	movhi	zero,8727
   8810c:	00088620 	cmpeqi	zero,zero,8728
   88110:	000889b0 	cmpltui	zero,zero,8742
   88114:	000889b0 	cmpltui	zero,zero,8742
   88118:	000889b0 	cmpltui	zero,zero,8742
   8811c:	00088958 	cmpnei	zero,zero,8741
   88120:	00088620 	cmpeqi	zero,zero,8728
   88124:	000889b0 	cmpltui	zero,zero,8742
   88128:	000889b0 	cmpltui	zero,zero,8742
   8812c:	000884b4 	movhi	zero,8722
   88130:	000889b0 	cmpltui	zero,zero,8742
   88134:	000884c4 	movi	zero,8723
   88138:	00088500 	call	8850 <__reset-0x777b0>
   8813c:	000881fc 	xorhi	zero,zero,8711
   88140:	000884a8 	cmpgeui	zero,zero,8722
   88144:	000889b0 	cmpltui	zero,zero,8742
   88148:	00088884 	movi	zero,8738
   8814c:	000889b0 	cmpltui	zero,zero,8742
   88150:	000888dc 	xori	zero,zero,8739
   88154:	000889b0 	cmpltui	zero,zero,8742
   88158:	000889b0 	cmpltui	zero,zero,8742
   8815c:	000885a0 	cmpeqi	zero,zero,8726
   88160:	42000204 	addi	r8,r8,8
   88164:	da802317 	ldw	r10,140(sp)
   88168:	5455883a 	add	r10,r10,r17
   8816c:	da802315 	stw	r10,140(sp)
   88170:	003f8b06 	br	87fa0 <__alt_data_end+0xfffbc4b0>
   88174:	d9002017 	ldw	r4,128(sp)
   88178:	a00b883a 	mov	r5,r20
   8817c:	0082b180 	call	82b18 <__swsetup_r>
   88180:	1003b11e 	bne	r2,zero,89048 <___vfiprintf_internal_r+0x11ec>
   88184:	a080030b 	ldhu	r2,12(r20)
   88188:	00c00284 	movi	r3,10
   8818c:	1080068c 	andi	r2,r2,26
   88190:	10ff541e 	bne	r2,r3,87ee4 <__alt_data_end+0xfffbc3f4>
   88194:	a080038f 	ldh	r2,14(r20)
   88198:	103f5216 	blt	r2,zero,87ee4 <__alt_data_end+0xfffbc3f4>
   8819c:	d9c02217 	ldw	r7,136(sp)
   881a0:	d9002017 	ldw	r4,128(sp)
   881a4:	e00d883a 	mov	r6,fp
   881a8:	a00b883a 	mov	r5,r20
   881ac:	00892d40 	call	892d4 <__sbprintf>
   881b0:	dfc03617 	ldw	ra,216(sp)
   881b4:	df003517 	ldw	fp,212(sp)
   881b8:	ddc03417 	ldw	r23,208(sp)
   881bc:	dd803317 	ldw	r22,204(sp)
   881c0:	dd403217 	ldw	r21,200(sp)
   881c4:	dd003117 	ldw	r20,196(sp)
   881c8:	dcc03017 	ldw	r19,192(sp)
   881cc:	dc802f17 	ldw	r18,188(sp)
   881d0:	dc402e17 	ldw	r17,184(sp)
   881d4:	dc002d17 	ldw	r16,180(sp)
   881d8:	dec03704 	addi	sp,sp,220
   881dc:	f800283a 	ret
   881e0:	0084aec0 	call	84aec <__sinit>
   881e4:	003f2f06 	br	87ea4 <__alt_data_end+0xfffbc3b4>
   881e8:	0463c83a 	sub	r17,zero,r17
   881ec:	d8802215 	stw	r2,136(sp)
   881f0:	a5000114 	ori	r20,r20,4
   881f4:	80c00007 	ldb	r3,0(r16)
   881f8:	003f7706 	br	87fd8 <__alt_data_end+0xfffbc4e8>
   881fc:	00800c04 	movi	r2,48
   88200:	da802217 	ldw	r10,136(sp)
   88204:	d8801d05 	stb	r2,116(sp)
   88208:	00801e04 	movi	r2,120
   8820c:	d8801d45 	stb	r2,117(sp)
   88210:	d8001d85 	stb	zero,118(sp)
   88214:	50c00104 	addi	r3,r10,4
   88218:	54800017 	ldw	r18,0(r10)
   8821c:	0027883a 	mov	r19,zero
   88220:	a0800094 	ori	r2,r20,2
   88224:	48030b16 	blt	r9,zero,88e54 <___vfiprintf_internal_r+0xff8>
   88228:	00bfdfc4 	movi	r2,-129
   8822c:	a096703a 	and	r11,r20,r2
   88230:	d8c02215 	stw	r3,136(sp)
   88234:	5d000094 	ori	r20,r11,2
   88238:	90032b1e 	bne	r18,zero,88ee8 <___vfiprintf_internal_r+0x108c>
   8823c:	00800274 	movhi	r2,9
   88240:	10be4804 	addi	r2,r2,-1760
   88244:	d8802615 	stw	r2,152(sp)
   88248:	0039883a 	mov	fp,zero
   8824c:	48017b1e 	bne	r9,zero,8883c <___vfiprintf_internal_r+0x9e0>
   88250:	0013883a 	mov	r9,zero
   88254:	0027883a 	mov	r19,zero
   88258:	dd401a04 	addi	r21,sp,104
   8825c:	4825883a 	mov	r18,r9
   88260:	4cc0010e 	bge	r9,r19,88268 <___vfiprintf_internal_r+0x40c>
   88264:	9825883a 	mov	r18,r19
   88268:	e7003fcc 	andi	fp,fp,255
   8826c:	e700201c 	xori	fp,fp,128
   88270:	e73fe004 	addi	fp,fp,-128
   88274:	e0000126 	beq	fp,zero,8827c <___vfiprintf_internal_r+0x420>
   88278:	94800044 	addi	r18,r18,1
   8827c:	a380008c 	andi	r14,r20,2
   88280:	70000126 	beq	r14,zero,88288 <___vfiprintf_internal_r+0x42c>
   88284:	94800084 	addi	r18,r18,2
   88288:	a700210c 	andi	fp,r20,132
   8828c:	e001df1e 	bne	fp,zero,88a0c <___vfiprintf_internal_r+0xbb0>
   88290:	8c87c83a 	sub	r3,r17,r18
   88294:	00c1dd0e 	bge	zero,r3,88a0c <___vfiprintf_internal_r+0xbb0>
   88298:	01c00404 	movi	r7,16
   8829c:	d8801c17 	ldw	r2,112(sp)
   882a0:	38c3ad0e 	bge	r7,r3,89158 <___vfiprintf_internal_r+0x12fc>
   882a4:	02800274 	movhi	r10,9
   882a8:	52bead04 	addi	r10,r10,-1356
   882ac:	dc002915 	stw	r16,164(sp)
   882b0:	d9801b17 	ldw	r6,108(sp)
   882b4:	da802415 	stw	r10,144(sp)
   882b8:	03c001c4 	movi	r15,7
   882bc:	da402515 	stw	r9,148(sp)
   882c0:	db802815 	stw	r14,160(sp)
   882c4:	1821883a 	mov	r16,r3
   882c8:	00000506 	br	882e0 <___vfiprintf_internal_r+0x484>
   882cc:	31400084 	addi	r5,r6,2
   882d0:	42000204 	addi	r8,r8,8
   882d4:	200d883a 	mov	r6,r4
   882d8:	843ffc04 	addi	r16,r16,-16
   882dc:	3c000d0e 	bge	r7,r16,88314 <___vfiprintf_internal_r+0x4b8>
   882e0:	10800404 	addi	r2,r2,16
   882e4:	31000044 	addi	r4,r6,1
   882e8:	45800015 	stw	r22,0(r8)
   882ec:	41c00115 	stw	r7,4(r8)
   882f0:	d8801c15 	stw	r2,112(sp)
   882f4:	d9001b15 	stw	r4,108(sp)
   882f8:	793ff40e 	bge	r15,r4,882cc <__alt_data_end+0xfffbc7dc>
   882fc:	1001b51e 	bne	r2,zero,889d4 <___vfiprintf_internal_r+0xb78>
   88300:	843ffc04 	addi	r16,r16,-16
   88304:	000d883a 	mov	r6,zero
   88308:	01400044 	movi	r5,1
   8830c:	d811883a 	mov	r8,sp
   88310:	3c3ff316 	blt	r7,r16,882e0 <__alt_data_end+0xfffbc7f0>
   88314:	8007883a 	mov	r3,r16
   88318:	da402517 	ldw	r9,148(sp)
   8831c:	db802817 	ldw	r14,160(sp)
   88320:	dc002917 	ldw	r16,164(sp)
   88324:	da802417 	ldw	r10,144(sp)
   88328:	1885883a 	add	r2,r3,r2
   8832c:	40c00115 	stw	r3,4(r8)
   88330:	42800015 	stw	r10,0(r8)
   88334:	d8801c15 	stw	r2,112(sp)
   88338:	d9401b15 	stw	r5,108(sp)
   8833c:	00c001c4 	movi	r3,7
   88340:	19426016 	blt	r3,r5,88cc4 <___vfiprintf_internal_r+0xe68>
   88344:	d8c01d87 	ldb	r3,118(sp)
   88348:	42000204 	addi	r8,r8,8
   8834c:	29000044 	addi	r4,r5,1
   88350:	1801b31e 	bne	r3,zero,88a20 <___vfiprintf_internal_r+0xbc4>
   88354:	7001c026 	beq	r14,zero,88a58 <___vfiprintf_internal_r+0xbfc>
   88358:	d8c01d04 	addi	r3,sp,116
   8835c:	10800084 	addi	r2,r2,2
   88360:	40c00015 	stw	r3,0(r8)
   88364:	00c00084 	movi	r3,2
   88368:	40c00115 	stw	r3,4(r8)
   8836c:	d8801c15 	stw	r2,112(sp)
   88370:	d9001b15 	stw	r4,108(sp)
   88374:	00c001c4 	movi	r3,7
   88378:	1902650e 	bge	r3,r4,88d10 <___vfiprintf_internal_r+0xeb4>
   8837c:	10029a1e 	bne	r2,zero,88de8 <___vfiprintf_internal_r+0xf8c>
   88380:	00c02004 	movi	r3,128
   88384:	01000044 	movi	r4,1
   88388:	000b883a 	mov	r5,zero
   8838c:	d811883a 	mov	r8,sp
   88390:	e0c1b31e 	bne	fp,r3,88a60 <___vfiprintf_internal_r+0xc04>
   88394:	8cb9c83a 	sub	fp,r17,r18
   88398:	0701b10e 	bge	zero,fp,88a60 <___vfiprintf_internal_r+0xc04>
   8839c:	01c00404 	movi	r7,16
   883a0:	3f03890e 	bge	r7,fp,891c8 <___vfiprintf_internal_r+0x136c>
   883a4:	00c00274 	movhi	r3,9
   883a8:	18fea904 	addi	r3,r3,-1372
   883ac:	d8c02415 	stw	r3,144(sp)
   883b0:	8007883a 	mov	r3,r16
   883b4:	034001c4 	movi	r13,7
   883b8:	e021883a 	mov	r16,fp
   883bc:	da402515 	stw	r9,148(sp)
   883c0:	1839883a 	mov	fp,r3
   883c4:	00000506 	br	883dc <___vfiprintf_internal_r+0x580>
   883c8:	29800084 	addi	r6,r5,2
   883cc:	42000204 	addi	r8,r8,8
   883d0:	180b883a 	mov	r5,r3
   883d4:	843ffc04 	addi	r16,r16,-16
   883d8:	3c000d0e 	bge	r7,r16,88410 <___vfiprintf_internal_r+0x5b4>
   883dc:	10800404 	addi	r2,r2,16
   883e0:	28c00044 	addi	r3,r5,1
   883e4:	45c00015 	stw	r23,0(r8)
   883e8:	41c00115 	stw	r7,4(r8)
   883ec:	d8801c15 	stw	r2,112(sp)
   883f0:	d8c01b15 	stw	r3,108(sp)
   883f4:	68fff40e 	bge	r13,r3,883c8 <__alt_data_end+0xfffbc8d8>
   883f8:	1002241e 	bne	r2,zero,88c8c <___vfiprintf_internal_r+0xe30>
   883fc:	843ffc04 	addi	r16,r16,-16
   88400:	01800044 	movi	r6,1
   88404:	000b883a 	mov	r5,zero
   88408:	d811883a 	mov	r8,sp
   8840c:	3c3ff316 	blt	r7,r16,883dc <__alt_data_end+0xfffbc8ec>
   88410:	da402517 	ldw	r9,148(sp)
   88414:	e007883a 	mov	r3,fp
   88418:	8039883a 	mov	fp,r16
   8841c:	1821883a 	mov	r16,r3
   88420:	d8c02417 	ldw	r3,144(sp)
   88424:	1705883a 	add	r2,r2,fp
   88428:	47000115 	stw	fp,4(r8)
   8842c:	40c00015 	stw	r3,0(r8)
   88430:	d8801c15 	stw	r2,112(sp)
   88434:	d9801b15 	stw	r6,108(sp)
   88438:	00c001c4 	movi	r3,7
   8843c:	19827616 	blt	r3,r6,88e18 <___vfiprintf_internal_r+0xfbc>
   88440:	4cf9c83a 	sub	fp,r9,r19
   88444:	42000204 	addi	r8,r8,8
   88448:	31000044 	addi	r4,r6,1
   8844c:	300b883a 	mov	r5,r6
   88450:	07018516 	blt	zero,fp,88a68 <___vfiprintf_internal_r+0xc0c>
   88454:	9885883a 	add	r2,r19,r2
   88458:	45400015 	stw	r21,0(r8)
   8845c:	44c00115 	stw	r19,4(r8)
   88460:	d8801c15 	stw	r2,112(sp)
   88464:	d9001b15 	stw	r4,108(sp)
   88468:	00c001c4 	movi	r3,7
   8846c:	1901dd0e 	bge	r3,r4,88be4 <___vfiprintf_internal_r+0xd88>
   88470:	1002401e 	bne	r2,zero,88d74 <___vfiprintf_internal_r+0xf18>
   88474:	d8001b15 	stw	zero,108(sp)
   88478:	a2c0010c 	andi	r11,r20,4
   8847c:	58000226 	beq	r11,zero,88488 <___vfiprintf_internal_r+0x62c>
   88480:	8ca7c83a 	sub	r19,r17,r18
   88484:	04c2f216 	blt	zero,r19,89050 <___vfiprintf_internal_r+0x11f4>
   88488:	8c80010e 	bge	r17,r18,88490 <___vfiprintf_internal_r+0x634>
   8848c:	9023883a 	mov	r17,r18
   88490:	da802317 	ldw	r10,140(sp)
   88494:	5455883a 	add	r10,r10,r17
   88498:	da802315 	stw	r10,140(sp)
   8849c:	d8001b15 	stw	zero,108(sp)
   884a0:	d811883a 	mov	r8,sp
   884a4:	003ea206 	br	87f30 <__alt_data_end+0xfffbc440>
   884a8:	a5000814 	ori	r20,r20,32
   884ac:	80c00007 	ldb	r3,0(r16)
   884b0:	003ec906 	br	87fd8 <__alt_data_end+0xfffbc4e8>
   884b4:	80c00007 	ldb	r3,0(r16)
   884b8:	1b030926 	beq	r3,r12,890e0 <___vfiprintf_internal_r+0x1284>
   884bc:	a5000414 	ori	r20,r20,16
   884c0:	003ec506 	br	87fd8 <__alt_data_end+0xfffbc4e8>
   884c4:	21003fcc 	andi	r4,r4,255
   884c8:	20035e1e 	bne	r4,zero,89244 <___vfiprintf_internal_r+0x13e8>
   884cc:	a080080c 	andi	r2,r20,32
   884d0:	1002a526 	beq	r2,zero,88f68 <___vfiprintf_internal_r+0x110c>
   884d4:	da802217 	ldw	r10,136(sp)
   884d8:	50800017 	ldw	r2,0(r10)
   884dc:	da802317 	ldw	r10,140(sp)
   884e0:	5007d7fa 	srai	r3,r10,31
   884e4:	da802217 	ldw	r10,136(sp)
   884e8:	10c00115 	stw	r3,4(r2)
   884ec:	52800104 	addi	r10,r10,4
   884f0:	da802215 	stw	r10,136(sp)
   884f4:	da802317 	ldw	r10,140(sp)
   884f8:	12800015 	stw	r10,0(r2)
   884fc:	003e8c06 	br	87f30 <__alt_data_end+0xfffbc440>
   88500:	21003fcc 	andi	r4,r4,255
   88504:	2003511e 	bne	r4,zero,8924c <___vfiprintf_internal_r+0x13f0>
   88508:	a080080c 	andi	r2,r20,32
   8850c:	1000a126 	beq	r2,zero,88794 <___vfiprintf_internal_r+0x938>
   88510:	da802217 	ldw	r10,136(sp)
   88514:	d8001d85 	stb	zero,118(sp)
   88518:	50800204 	addi	r2,r10,8
   8851c:	54800017 	ldw	r18,0(r10)
   88520:	54c00117 	ldw	r19,4(r10)
   88524:	4802b416 	blt	r9,zero,88ff8 <___vfiprintf_internal_r+0x119c>
   88528:	013fdfc4 	movi	r4,-129
   8852c:	94c6b03a 	or	r3,r18,r19
   88530:	d8802215 	stw	r2,136(sp)
   88534:	a128703a 	and	r20,r20,r4
   88538:	1800a226 	beq	r3,zero,887c4 <___vfiprintf_internal_r+0x968>
   8853c:	0039883a 	mov	fp,zero
   88540:	dd401a04 	addi	r21,sp,104
   88544:	9006d0fa 	srli	r3,r18,3
   88548:	9808977a 	slli	r4,r19,29
   8854c:	9826d0fa 	srli	r19,r19,3
   88550:	948001cc 	andi	r18,r18,7
   88554:	90800c04 	addi	r2,r18,48
   88558:	ad7fffc4 	addi	r21,r21,-1
   8855c:	20e4b03a 	or	r18,r4,r3
   88560:	a8800005 	stb	r2,0(r21)
   88564:	94c6b03a 	or	r3,r18,r19
   88568:	183ff61e 	bne	r3,zero,88544 <__alt_data_end+0xfffbca54>
   8856c:	a0c0004c 	andi	r3,r20,1
   88570:	18005926 	beq	r3,zero,886d8 <___vfiprintf_internal_r+0x87c>
   88574:	10803fcc 	andi	r2,r2,255
   88578:	1080201c 	xori	r2,r2,128
   8857c:	10bfe004 	addi	r2,r2,-128
   88580:	00c00c04 	movi	r3,48
   88584:	10c05426 	beq	r2,r3,886d8 <___vfiprintf_internal_r+0x87c>
   88588:	da801e17 	ldw	r10,120(sp)
   8858c:	a8bfffc4 	addi	r2,r21,-1
   88590:	a8ffffc5 	stb	r3,-1(r21)
   88594:	50a7c83a 	sub	r19,r10,r2
   88598:	102b883a 	mov	r21,r2
   8859c:	003f2f06 	br	8825c <__alt_data_end+0xfffbc76c>
   885a0:	21003fcc 	andi	r4,r4,255
   885a4:	2003421e 	bne	r4,zero,892b0 <___vfiprintf_internal_r+0x1454>
   885a8:	00800274 	movhi	r2,9
   885ac:	10be4804 	addi	r2,r2,-1760
   885b0:	d8802615 	stw	r2,152(sp)
   885b4:	a080080c 	andi	r2,r20,32
   885b8:	1000aa26 	beq	r2,zero,88864 <___vfiprintf_internal_r+0xa08>
   885bc:	da802217 	ldw	r10,136(sp)
   885c0:	54800017 	ldw	r18,0(r10)
   885c4:	54c00117 	ldw	r19,4(r10)
   885c8:	52800204 	addi	r10,r10,8
   885cc:	da802215 	stw	r10,136(sp)
   885d0:	a080004c 	andi	r2,r20,1
   885d4:	1001d226 	beq	r2,zero,88d20 <___vfiprintf_internal_r+0xec4>
   885d8:	94c4b03a 	or	r2,r18,r19
   885dc:	1002351e 	bne	r2,zero,88eb4 <___vfiprintf_internal_r+0x1058>
   885e0:	d8001d85 	stb	zero,118(sp)
   885e4:	48022216 	blt	r9,zero,88e70 <___vfiprintf_internal_r+0x1014>
   885e8:	00bfdfc4 	movi	r2,-129
   885ec:	a0a8703a 	and	r20,r20,r2
   885f0:	003f1506 	br	88248 <__alt_data_end+0xfffbc758>
   885f4:	da802217 	ldw	r10,136(sp)
   885f8:	04800044 	movi	r18,1
   885fc:	d8001d85 	stb	zero,118(sp)
   88600:	50800017 	ldw	r2,0(r10)
   88604:	52800104 	addi	r10,r10,4
   88608:	da802215 	stw	r10,136(sp)
   8860c:	d8801005 	stb	r2,64(sp)
   88610:	9027883a 	mov	r19,r18
   88614:	dd401004 	addi	r21,sp,64
   88618:	0013883a 	mov	r9,zero
   8861c:	003f1706 	br	8827c <__alt_data_end+0xfffbc78c>
   88620:	21003fcc 	andi	r4,r4,255
   88624:	2003201e 	bne	r4,zero,892a8 <___vfiprintf_internal_r+0x144c>
   88628:	a080080c 	andi	r2,r20,32
   8862c:	10004b26 	beq	r2,zero,8875c <___vfiprintf_internal_r+0x900>
   88630:	da802217 	ldw	r10,136(sp)
   88634:	50800117 	ldw	r2,4(r10)
   88638:	54800017 	ldw	r18,0(r10)
   8863c:	52800204 	addi	r10,r10,8
   88640:	da802215 	stw	r10,136(sp)
   88644:	1027883a 	mov	r19,r2
   88648:	10022c16 	blt	r2,zero,88efc <___vfiprintf_internal_r+0x10a0>
   8864c:	df001d83 	ldbu	fp,118(sp)
   88650:	48007216 	blt	r9,zero,8881c <___vfiprintf_internal_r+0x9c0>
   88654:	00ffdfc4 	movi	r3,-129
   88658:	94c4b03a 	or	r2,r18,r19
   8865c:	a0e8703a 	and	r20,r20,r3
   88660:	1000cc26 	beq	r2,zero,88994 <___vfiprintf_internal_r+0xb38>
   88664:	98021026 	beq	r19,zero,88ea8 <___vfiprintf_internal_r+0x104c>
   88668:	dc402415 	stw	r17,144(sp)
   8866c:	dc002515 	stw	r16,148(sp)
   88670:	9823883a 	mov	r17,r19
   88674:	9021883a 	mov	r16,r18
   88678:	dd401a04 	addi	r21,sp,104
   8867c:	4825883a 	mov	r18,r9
   88680:	4027883a 	mov	r19,r8
   88684:	8009883a 	mov	r4,r16
   88688:	880b883a 	mov	r5,r17
   8868c:	01800284 	movi	r6,10
   88690:	000f883a 	mov	r7,zero
   88694:	008a23c0 	call	8a23c <__umoddi3>
   88698:	10800c04 	addi	r2,r2,48
   8869c:	ad7fffc4 	addi	r21,r21,-1
   886a0:	8009883a 	mov	r4,r16
   886a4:	880b883a 	mov	r5,r17
   886a8:	a8800005 	stb	r2,0(r21)
   886ac:	01800284 	movi	r6,10
   886b0:	000f883a 	mov	r7,zero
   886b4:	0089cc40 	call	89cc4 <__udivdi3>
   886b8:	1021883a 	mov	r16,r2
   886bc:	10c4b03a 	or	r2,r2,r3
   886c0:	1823883a 	mov	r17,r3
   886c4:	103fef1e 	bne	r2,zero,88684 <__alt_data_end+0xfffbcb94>
   886c8:	dc402417 	ldw	r17,144(sp)
   886cc:	dc002517 	ldw	r16,148(sp)
   886d0:	9013883a 	mov	r9,r18
   886d4:	9811883a 	mov	r8,r19
   886d8:	da801e17 	ldw	r10,120(sp)
   886dc:	5567c83a 	sub	r19,r10,r21
   886e0:	003ede06 	br	8825c <__alt_data_end+0xfffbc76c>
   886e4:	38803fcc 	andi	r2,r7,255
   886e8:	1080201c 	xori	r2,r2,128
   886ec:	10bfe004 	addi	r2,r2,-128
   886f0:	1002371e 	bne	r2,zero,88fd0 <___vfiprintf_internal_r+0x1174>
   886f4:	01000044 	movi	r4,1
   886f8:	01c00804 	movi	r7,32
   886fc:	80c00007 	ldb	r3,0(r16)
   88700:	003e3506 	br	87fd8 <__alt_data_end+0xfffbc4e8>
   88704:	a5000054 	ori	r20,r20,1
   88708:	80c00007 	ldb	r3,0(r16)
   8870c:	003e3206 	br	87fd8 <__alt_data_end+0xfffbc4e8>
   88710:	a5002014 	ori	r20,r20,128
   88714:	80c00007 	ldb	r3,0(r16)
   88718:	003e2f06 	br	87fd8 <__alt_data_end+0xfffbc4e8>
   8871c:	8015883a 	mov	r10,r16
   88720:	0023883a 	mov	r17,zero
   88724:	18bff404 	addi	r2,r3,-48
   88728:	50c00007 	ldb	r3,0(r10)
   8872c:	8c4002a4 	muli	r17,r17,10
   88730:	84000044 	addi	r16,r16,1
   88734:	8015883a 	mov	r10,r16
   88738:	1463883a 	add	r17,r2,r17
   8873c:	18bff404 	addi	r2,r3,-48
   88740:	30bff92e 	bgeu	r6,r2,88728 <__alt_data_end+0xfffbcc38>
   88744:	003e2506 	br	87fdc <__alt_data_end+0xfffbc4ec>
   88748:	21003fcc 	andi	r4,r4,255
   8874c:	2002d41e 	bne	r4,zero,892a0 <___vfiprintf_internal_r+0x1444>
   88750:	a5000414 	ori	r20,r20,16
   88754:	a080080c 	andi	r2,r20,32
   88758:	103fb51e 	bne	r2,zero,88630 <__alt_data_end+0xfffbcb40>
   8875c:	a080040c 	andi	r2,r20,16
   88760:	1001f826 	beq	r2,zero,88f44 <___vfiprintf_internal_r+0x10e8>
   88764:	da802217 	ldw	r10,136(sp)
   88768:	54800017 	ldw	r18,0(r10)
   8876c:	52800104 	addi	r10,r10,4
   88770:	da802215 	stw	r10,136(sp)
   88774:	9027d7fa 	srai	r19,r18,31
   88778:	9805883a 	mov	r2,r19
   8877c:	003fb206 	br	88648 <__alt_data_end+0xfffbcb58>
   88780:	21003fcc 	andi	r4,r4,255
   88784:	2002c41e 	bne	r4,zero,89298 <___vfiprintf_internal_r+0x143c>
   88788:	a5000414 	ori	r20,r20,16
   8878c:	a080080c 	andi	r2,r20,32
   88790:	103f5f1e 	bne	r2,zero,88510 <__alt_data_end+0xfffbca20>
   88794:	a080040c 	andi	r2,r20,16
   88798:	10020f26 	beq	r2,zero,88fd8 <___vfiprintf_internal_r+0x117c>
   8879c:	da802217 	ldw	r10,136(sp)
   887a0:	d8001d85 	stb	zero,118(sp)
   887a4:	0027883a 	mov	r19,zero
   887a8:	50800104 	addi	r2,r10,4
   887ac:	54800017 	ldw	r18,0(r10)
   887b0:	48021116 	blt	r9,zero,88ff8 <___vfiprintf_internal_r+0x119c>
   887b4:	00ffdfc4 	movi	r3,-129
   887b8:	d8802215 	stw	r2,136(sp)
   887bc:	a0e8703a 	and	r20,r20,r3
   887c0:	903f5e1e 	bne	r18,zero,8853c <__alt_data_end+0xfffbca4c>
   887c4:	0039883a 	mov	fp,zero
   887c8:	4802a626 	beq	r9,zero,89264 <___vfiprintf_internal_r+0x1408>
   887cc:	0025883a 	mov	r18,zero
   887d0:	0027883a 	mov	r19,zero
   887d4:	003f5a06 	br	88540 <__alt_data_end+0xfffbca50>
   887d8:	21003fcc 	andi	r4,r4,255
   887dc:	20029f1e 	bne	r4,zero,8925c <___vfiprintf_internal_r+0x1400>
   887e0:	a5000414 	ori	r20,r20,16
   887e4:	a080080c 	andi	r2,r20,32
   887e8:	10005e1e 	bne	r2,zero,88964 <___vfiprintf_internal_r+0xb08>
   887ec:	a080040c 	andi	r2,r20,16
   887f0:	1001a21e 	bne	r2,zero,88e7c <___vfiprintf_internal_r+0x1020>
   887f4:	a080100c 	andi	r2,r20,64
   887f8:	d8001d85 	stb	zero,118(sp)
   887fc:	da802217 	ldw	r10,136(sp)
   88800:	1002231e 	bne	r2,zero,89090 <___vfiprintf_internal_r+0x1234>
   88804:	50800104 	addi	r2,r10,4
   88808:	54800017 	ldw	r18,0(r10)
   8880c:	0027883a 	mov	r19,zero
   88810:	4801a00e 	bge	r9,zero,88e94 <___vfiprintf_internal_r+0x1038>
   88814:	d8802215 	stw	r2,136(sp)
   88818:	0039883a 	mov	fp,zero
   8881c:	94c4b03a 	or	r2,r18,r19
   88820:	103f901e 	bne	r2,zero,88664 <__alt_data_end+0xfffbcb74>
   88824:	00800044 	movi	r2,1
   88828:	10803fcc 	andi	r2,r2,255
   8882c:	00c00044 	movi	r3,1
   88830:	10c05926 	beq	r2,r3,88998 <___vfiprintf_internal_r+0xb3c>
   88834:	00c00084 	movi	r3,2
   88838:	10ffe41e 	bne	r2,r3,887cc <__alt_data_end+0xfffbccdc>
   8883c:	0025883a 	mov	r18,zero
   88840:	0027883a 	mov	r19,zero
   88844:	00013d06 	br	88d3c <___vfiprintf_internal_r+0xee0>
   88848:	21003fcc 	andi	r4,r4,255
   8884c:	2002811e 	bne	r4,zero,89254 <___vfiprintf_internal_r+0x13f8>
   88850:	00800274 	movhi	r2,9
   88854:	10be4304 	addi	r2,r2,-1780
   88858:	d8802615 	stw	r2,152(sp)
   8885c:	a080080c 	andi	r2,r20,32
   88860:	103f561e 	bne	r2,zero,885bc <__alt_data_end+0xfffbcacc>
   88864:	a080040c 	andi	r2,r20,16
   88868:	1001d126 	beq	r2,zero,88fb0 <___vfiprintf_internal_r+0x1154>
   8886c:	da802217 	ldw	r10,136(sp)
   88870:	0027883a 	mov	r19,zero
   88874:	54800017 	ldw	r18,0(r10)
   88878:	52800104 	addi	r10,r10,4
   8887c:	da802215 	stw	r10,136(sp)
   88880:	003f5306 	br	885d0 <__alt_data_end+0xfffbcae0>
   88884:	da802217 	ldw	r10,136(sp)
   88888:	d8001d85 	stb	zero,118(sp)
   8888c:	55400017 	ldw	r21,0(r10)
   88890:	50c00104 	addi	r3,r10,4
   88894:	a8024226 	beq	r21,zero,891a0 <___vfiprintf_internal_r+0x1344>
   88898:	48021816 	blt	r9,zero,890fc <___vfiprintf_internal_r+0x12a0>
   8889c:	480d883a 	mov	r6,r9
   888a0:	000b883a 	mov	r5,zero
   888a4:	a809883a 	mov	r4,r21
   888a8:	d8c02a15 	stw	r3,168(sp)
   888ac:	da002b15 	stw	r8,172(sp)
   888b0:	da402c15 	stw	r9,176(sp)
   888b4:	00860580 	call	86058 <memchr>
   888b8:	d8c02a17 	ldw	r3,168(sp)
   888bc:	da002b17 	ldw	r8,172(sp)
   888c0:	da402c17 	ldw	r9,176(sp)
   888c4:	10024826 	beq	r2,zero,891e8 <___vfiprintf_internal_r+0x138c>
   888c8:	1567c83a 	sub	r19,r2,r21
   888cc:	df001d83 	ldbu	fp,118(sp)
   888d0:	d8c02215 	stw	r3,136(sp)
   888d4:	0013883a 	mov	r9,zero
   888d8:	003e6006 	br	8825c <__alt_data_end+0xfffbc76c>
   888dc:	21003fcc 	andi	r4,r4,255
   888e0:	203fc026 	beq	r4,zero,887e4 <__alt_data_end+0xfffbccf4>
   888e4:	d9c01d85 	stb	r7,118(sp)
   888e8:	003fbe06 	br	887e4 <__alt_data_end+0xfffbccf4>
   888ec:	da802217 	ldw	r10,136(sp)
   888f0:	54400017 	ldw	r17,0(r10)
   888f4:	50800104 	addi	r2,r10,4
   888f8:	883e3b16 	blt	r17,zero,881e8 <__alt_data_end+0xfffbc6f8>
   888fc:	d8802215 	stw	r2,136(sp)
   88900:	80c00007 	ldb	r3,0(r16)
   88904:	003db406 	br	87fd8 <__alt_data_end+0xfffbc4e8>
   88908:	01000044 	movi	r4,1
   8890c:	01c00ac4 	movi	r7,43
   88910:	80c00007 	ldb	r3,0(r16)
   88914:	003db006 	br	87fd8 <__alt_data_end+0xfffbc4e8>
   88918:	80c00007 	ldb	r3,0(r16)
   8891c:	82800044 	addi	r10,r16,1
   88920:	1b423c26 	beq	r3,r13,89214 <___vfiprintf_internal_r+0x13b8>
   88924:	18bff404 	addi	r2,r3,-48
   88928:	0013883a 	mov	r9,zero
   8892c:	30822b36 	bltu	r6,r2,891dc <___vfiprintf_internal_r+0x1380>
   88930:	50c00007 	ldb	r3,0(r10)
   88934:	4a4002a4 	muli	r9,r9,10
   88938:	54000044 	addi	r16,r10,1
   8893c:	8015883a 	mov	r10,r16
   88940:	4893883a 	add	r9,r9,r2
   88944:	18bff404 	addi	r2,r3,-48
   88948:	30bff92e 	bgeu	r6,r2,88930 <__alt_data_end+0xfffbce40>
   8894c:	483da30e 	bge	r9,zero,87fdc <__alt_data_end+0xfffbc4ec>
   88950:	027fffc4 	movi	r9,-1
   88954:	003da106 	br	87fdc <__alt_data_end+0xfffbc4ec>
   88958:	a5001014 	ori	r20,r20,64
   8895c:	80c00007 	ldb	r3,0(r16)
   88960:	003d9d06 	br	87fd8 <__alt_data_end+0xfffbc4e8>
   88964:	da802217 	ldw	r10,136(sp)
   88968:	d8001d85 	stb	zero,118(sp)
   8896c:	50c00204 	addi	r3,r10,8
   88970:	54800017 	ldw	r18,0(r10)
   88974:	54c00117 	ldw	r19,4(r10)
   88978:	4801ca16 	blt	r9,zero,890a4 <___vfiprintf_internal_r+0x1248>
   8897c:	013fdfc4 	movi	r4,-129
   88980:	94c4b03a 	or	r2,r18,r19
   88984:	d8c02215 	stw	r3,136(sp)
   88988:	a128703a 	and	r20,r20,r4
   8898c:	0039883a 	mov	fp,zero
   88990:	103f341e 	bne	r2,zero,88664 <__alt_data_end+0xfffbcb74>
   88994:	483e2e26 	beq	r9,zero,88250 <__alt_data_end+0xfffbc760>
   88998:	0025883a 	mov	r18,zero
   8899c:	94800c04 	addi	r18,r18,48
   889a0:	dc8019c5 	stb	r18,103(sp)
   889a4:	dcc02717 	ldw	r19,156(sp)
   889a8:	dd4019c4 	addi	r21,sp,103
   889ac:	003e2b06 	br	8825c <__alt_data_end+0xfffbc76c>
   889b0:	21003fcc 	andi	r4,r4,255
   889b4:	2002361e 	bne	r4,zero,89290 <___vfiprintf_internal_r+0x1434>
   889b8:	1801c126 	beq	r3,zero,890c0 <___vfiprintf_internal_r+0x1264>
   889bc:	04800044 	movi	r18,1
   889c0:	d8c01005 	stb	r3,64(sp)
   889c4:	d8001d85 	stb	zero,118(sp)
   889c8:	9027883a 	mov	r19,r18
   889cc:	dd401004 	addi	r21,sp,64
   889d0:	003f1106 	br	88618 <__alt_data_end+0xfffbcb28>
   889d4:	d9402117 	ldw	r5,132(sp)
   889d8:	d9002017 	ldw	r4,128(sp)
   889dc:	d9801a04 	addi	r6,sp,104
   889e0:	d9c02b15 	stw	r7,172(sp)
   889e4:	dbc02a15 	stw	r15,168(sp)
   889e8:	0087d480 	call	87d48 <__sprint_r.part.0>
   889ec:	d9c02b17 	ldw	r7,172(sp)
   889f0:	dbc02a17 	ldw	r15,168(sp)
   889f4:	10006d1e 	bne	r2,zero,88bac <___vfiprintf_internal_r+0xd50>
   889f8:	d9801b17 	ldw	r6,108(sp)
   889fc:	d8801c17 	ldw	r2,112(sp)
   88a00:	d811883a 	mov	r8,sp
   88a04:	31400044 	addi	r5,r6,1
   88a08:	003e3306 	br	882d8 <__alt_data_end+0xfffbc7e8>
   88a0c:	d9401b17 	ldw	r5,108(sp)
   88a10:	d8801c17 	ldw	r2,112(sp)
   88a14:	29000044 	addi	r4,r5,1
   88a18:	d8c01d87 	ldb	r3,118(sp)
   88a1c:	183e4d26 	beq	r3,zero,88354 <__alt_data_end+0xfffbc864>
   88a20:	00c00044 	movi	r3,1
   88a24:	d9401d84 	addi	r5,sp,118
   88a28:	10c5883a 	add	r2,r2,r3
   88a2c:	41400015 	stw	r5,0(r8)
   88a30:	40c00115 	stw	r3,4(r8)
   88a34:	d8801c15 	stw	r2,112(sp)
   88a38:	d9001b15 	stw	r4,108(sp)
   88a3c:	014001c4 	movi	r5,7
   88a40:	2900a90e 	bge	r5,r4,88ce8 <___vfiprintf_internal_r+0xe8c>
   88a44:	1000da1e 	bne	r2,zero,88db0 <___vfiprintf_internal_r+0xf54>
   88a48:	7000ab1e 	bne	r14,zero,88cf8 <___vfiprintf_internal_r+0xe9c>
   88a4c:	000b883a 	mov	r5,zero
   88a50:	1809883a 	mov	r4,r3
   88a54:	d811883a 	mov	r8,sp
   88a58:	00c02004 	movi	r3,128
   88a5c:	e0fe4d26 	beq	fp,r3,88394 <__alt_data_end+0xfffbc8a4>
   88a60:	4cf9c83a 	sub	fp,r9,r19
   88a64:	073e7b0e 	bge	zero,fp,88454 <__alt_data_end+0xfffbc964>
   88a68:	01c00404 	movi	r7,16
   88a6c:	3f01900e 	bge	r7,fp,890b0 <___vfiprintf_internal_r+0x1254>
   88a70:	00c00274 	movhi	r3,9
   88a74:	18fea904 	addi	r3,r3,-1372
   88a78:	d8c02415 	stw	r3,144(sp)
   88a7c:	034001c4 	movi	r13,7
   88a80:	00000506 	br	88a98 <___vfiprintf_internal_r+0xc3c>
   88a84:	29000084 	addi	r4,r5,2
   88a88:	42000204 	addi	r8,r8,8
   88a8c:	180b883a 	mov	r5,r3
   88a90:	e73ffc04 	addi	fp,fp,-16
   88a94:	3f000d0e 	bge	r7,fp,88acc <___vfiprintf_internal_r+0xc70>
   88a98:	10800404 	addi	r2,r2,16
   88a9c:	28c00044 	addi	r3,r5,1
   88aa0:	45c00015 	stw	r23,0(r8)
   88aa4:	41c00115 	stw	r7,4(r8)
   88aa8:	d8801c15 	stw	r2,112(sp)
   88aac:	d8c01b15 	stw	r3,108(sp)
   88ab0:	68fff40e 	bge	r13,r3,88a84 <__alt_data_end+0xfffbcf94>
   88ab4:	1000101e 	bne	r2,zero,88af8 <___vfiprintf_internal_r+0xc9c>
   88ab8:	e73ffc04 	addi	fp,fp,-16
   88abc:	01000044 	movi	r4,1
   88ac0:	000b883a 	mov	r5,zero
   88ac4:	d811883a 	mov	r8,sp
   88ac8:	3f3ff316 	blt	r7,fp,88a98 <__alt_data_end+0xfffbcfa8>
   88acc:	da802417 	ldw	r10,144(sp)
   88ad0:	1705883a 	add	r2,r2,fp
   88ad4:	47000115 	stw	fp,4(r8)
   88ad8:	42800015 	stw	r10,0(r8)
   88adc:	d8801c15 	stw	r2,112(sp)
   88ae0:	d9001b15 	stw	r4,108(sp)
   88ae4:	00c001c4 	movi	r3,7
   88ae8:	19003616 	blt	r3,r4,88bc4 <___vfiprintf_internal_r+0xd68>
   88aec:	42000204 	addi	r8,r8,8
   88af0:	21000044 	addi	r4,r4,1
   88af4:	003e5706 	br	88454 <__alt_data_end+0xfffbc964>
   88af8:	d9402117 	ldw	r5,132(sp)
   88afc:	d9002017 	ldw	r4,128(sp)
   88b00:	d9801a04 	addi	r6,sp,104
   88b04:	d9c02b15 	stw	r7,172(sp)
   88b08:	db402a15 	stw	r13,168(sp)
   88b0c:	0087d480 	call	87d48 <__sprint_r.part.0>
   88b10:	d9c02b17 	ldw	r7,172(sp)
   88b14:	db402a17 	ldw	r13,168(sp)
   88b18:	1000241e 	bne	r2,zero,88bac <___vfiprintf_internal_r+0xd50>
   88b1c:	d9401b17 	ldw	r5,108(sp)
   88b20:	d8801c17 	ldw	r2,112(sp)
   88b24:	d811883a 	mov	r8,sp
   88b28:	29000044 	addi	r4,r5,1
   88b2c:	003fd806 	br	88a90 <__alt_data_end+0xfffbcfa0>
   88b30:	d9401b17 	ldw	r5,108(sp)
   88b34:	00c00274 	movhi	r3,9
   88b38:	18fead04 	addi	r3,r3,-1356
   88b3c:	d8c02415 	stw	r3,144(sp)
   88b40:	29400044 	addi	r5,r5,1
   88b44:	d8c02417 	ldw	r3,144(sp)
   88b48:	14c5883a 	add	r2,r2,r19
   88b4c:	44c00115 	stw	r19,4(r8)
   88b50:	40c00015 	stw	r3,0(r8)
   88b54:	d8801c15 	stw	r2,112(sp)
   88b58:	d9401b15 	stw	r5,108(sp)
   88b5c:	00c001c4 	movi	r3,7
   88b60:	1940070e 	bge	r3,r5,88b80 <___vfiprintf_internal_r+0xd24>
   88b64:	103e4826 	beq	r2,zero,88488 <__alt_data_end+0xfffbc998>
   88b68:	d9402117 	ldw	r5,132(sp)
   88b6c:	d9002017 	ldw	r4,128(sp)
   88b70:	d9801a04 	addi	r6,sp,104
   88b74:	0087d480 	call	87d48 <__sprint_r.part.0>
   88b78:	10000c1e 	bne	r2,zero,88bac <___vfiprintf_internal_r+0xd50>
   88b7c:	d8801c17 	ldw	r2,112(sp)
   88b80:	8c80010e 	bge	r17,r18,88b88 <___vfiprintf_internal_r+0xd2c>
   88b84:	9023883a 	mov	r17,r18
   88b88:	da802317 	ldw	r10,140(sp)
   88b8c:	5455883a 	add	r10,r10,r17
   88b90:	da802315 	stw	r10,140(sp)
   88b94:	103e4126 	beq	r2,zero,8849c <__alt_data_end+0xfffbc9ac>
   88b98:	d9402117 	ldw	r5,132(sp)
   88b9c:	d9002017 	ldw	r4,128(sp)
   88ba0:	d9801a04 	addi	r6,sp,104
   88ba4:	0087d480 	call	87d48 <__sprint_r.part.0>
   88ba8:	103e3c26 	beq	r2,zero,8849c <__alt_data_end+0xfffbc9ac>
   88bac:	dd002117 	ldw	r20,132(sp)
   88bb0:	a080030b 	ldhu	r2,12(r20)
   88bb4:	1080100c 	andi	r2,r2,64
   88bb8:	1001231e 	bne	r2,zero,89048 <___vfiprintf_internal_r+0x11ec>
   88bbc:	d8802317 	ldw	r2,140(sp)
   88bc0:	003d7b06 	br	881b0 <__alt_data_end+0xfffbc6c0>
   88bc4:	1000991e 	bne	r2,zero,88e2c <___vfiprintf_internal_r+0xfd0>
   88bc8:	00c00044 	movi	r3,1
   88bcc:	9805883a 	mov	r2,r19
   88bd0:	dd400015 	stw	r21,0(sp)
   88bd4:	dcc00115 	stw	r19,4(sp)
   88bd8:	dcc01c15 	stw	r19,112(sp)
   88bdc:	d8c01b15 	stw	r3,108(sp)
   88be0:	d811883a 	mov	r8,sp
   88be4:	42000204 	addi	r8,r8,8
   88be8:	a2c0010c 	andi	r11,r20,4
   88bec:	583fe426 	beq	r11,zero,88b80 <__alt_data_end+0xfffbd090>
   88bf0:	8ca7c83a 	sub	r19,r17,r18
   88bf4:	04ffe20e 	bge	zero,r19,88b80 <__alt_data_end+0xfffbd090>
   88bf8:	01c00404 	movi	r7,16
   88bfc:	3cffcc0e 	bge	r7,r19,88b30 <__alt_data_end+0xfffbd040>
   88c00:	02800274 	movhi	r10,9
   88c04:	52bead04 	addi	r10,r10,-1356
   88c08:	d9001b17 	ldw	r4,108(sp)
   88c0c:	da802415 	stw	r10,144(sp)
   88c10:	382b883a 	mov	r21,r7
   88c14:	050001c4 	movi	r20,7
   88c18:	df002017 	ldw	fp,128(sp)
   88c1c:	00000506 	br	88c34 <___vfiprintf_internal_r+0xdd8>
   88c20:	21400084 	addi	r5,r4,2
   88c24:	42000204 	addi	r8,r8,8
   88c28:	1809883a 	mov	r4,r3
   88c2c:	9cfffc04 	addi	r19,r19,-16
   88c30:	acffc40e 	bge	r21,r19,88b44 <__alt_data_end+0xfffbd054>
   88c34:	10800404 	addi	r2,r2,16
   88c38:	20c00044 	addi	r3,r4,1
   88c3c:	45800015 	stw	r22,0(r8)
   88c40:	45400115 	stw	r21,4(r8)
   88c44:	d8801c15 	stw	r2,112(sp)
   88c48:	d8c01b15 	stw	r3,108(sp)
   88c4c:	a0fff40e 	bge	r20,r3,88c20 <__alt_data_end+0xfffbd130>
   88c50:	1000041e 	bne	r2,zero,88c64 <___vfiprintf_internal_r+0xe08>
   88c54:	01400044 	movi	r5,1
   88c58:	0009883a 	mov	r4,zero
   88c5c:	d811883a 	mov	r8,sp
   88c60:	003ff206 	br	88c2c <__alt_data_end+0xfffbd13c>
   88c64:	d9402117 	ldw	r5,132(sp)
   88c68:	d9801a04 	addi	r6,sp,104
   88c6c:	e009883a 	mov	r4,fp
   88c70:	0087d480 	call	87d48 <__sprint_r.part.0>
   88c74:	103fcd1e 	bne	r2,zero,88bac <__alt_data_end+0xfffbd0bc>
   88c78:	d9001b17 	ldw	r4,108(sp)
   88c7c:	d8801c17 	ldw	r2,112(sp)
   88c80:	d811883a 	mov	r8,sp
   88c84:	21400044 	addi	r5,r4,1
   88c88:	003fe806 	br	88c2c <__alt_data_end+0xfffbd13c>
   88c8c:	d9402117 	ldw	r5,132(sp)
   88c90:	d9002017 	ldw	r4,128(sp)
   88c94:	d9801a04 	addi	r6,sp,104
   88c98:	d9c02b15 	stw	r7,172(sp)
   88c9c:	db402a15 	stw	r13,168(sp)
   88ca0:	0087d480 	call	87d48 <__sprint_r.part.0>
   88ca4:	d9c02b17 	ldw	r7,172(sp)
   88ca8:	db402a17 	ldw	r13,168(sp)
   88cac:	103fbf1e 	bne	r2,zero,88bac <__alt_data_end+0xfffbd0bc>
   88cb0:	d9401b17 	ldw	r5,108(sp)
   88cb4:	d8801c17 	ldw	r2,112(sp)
   88cb8:	d811883a 	mov	r8,sp
   88cbc:	29800044 	addi	r6,r5,1
   88cc0:	003dc406 	br	883d4 <__alt_data_end+0xfffbc8e4>
   88cc4:	1000d21e 	bne	r2,zero,89010 <___vfiprintf_internal_r+0x11b4>
   88cc8:	d8c01d87 	ldb	r3,118(sp)
   88ccc:	18009526 	beq	r3,zero,88f24 <___vfiprintf_internal_r+0x10c8>
   88cd0:	00800044 	movi	r2,1
   88cd4:	d8c01d84 	addi	r3,sp,118
   88cd8:	1009883a 	mov	r4,r2
   88cdc:	d8c00015 	stw	r3,0(sp)
   88ce0:	d8800115 	stw	r2,4(sp)
   88ce4:	d811883a 	mov	r8,sp
   88ce8:	200b883a 	mov	r5,r4
   88cec:	42000204 	addi	r8,r8,8
   88cf0:	21000044 	addi	r4,r4,1
   88cf4:	003d9706 	br	88354 <__alt_data_end+0xfffbc864>
   88cf8:	d9001d04 	addi	r4,sp,116
   88cfc:	00800084 	movi	r2,2
   88d00:	d9000015 	stw	r4,0(sp)
   88d04:	d8800115 	stw	r2,4(sp)
   88d08:	1809883a 	mov	r4,r3
   88d0c:	d811883a 	mov	r8,sp
   88d10:	200b883a 	mov	r5,r4
   88d14:	42000204 	addi	r8,r8,8
   88d18:	21000044 	addi	r4,r4,1
   88d1c:	003f4e06 	br	88a58 <__alt_data_end+0xfffbcf68>
   88d20:	d8001d85 	stb	zero,118(sp)
   88d24:	48005016 	blt	r9,zero,88e68 <___vfiprintf_internal_r+0x100c>
   88d28:	00ffdfc4 	movi	r3,-129
   88d2c:	94c4b03a 	or	r2,r18,r19
   88d30:	a0e8703a 	and	r20,r20,r3
   88d34:	103d4426 	beq	r2,zero,88248 <__alt_data_end+0xfffbc758>
   88d38:	0039883a 	mov	fp,zero
   88d3c:	d9002617 	ldw	r4,152(sp)
   88d40:	dd401a04 	addi	r21,sp,104
   88d44:	908003cc 	andi	r2,r18,15
   88d48:	9806973a 	slli	r3,r19,28
   88d4c:	2085883a 	add	r2,r4,r2
   88d50:	9024d13a 	srli	r18,r18,4
   88d54:	10800003 	ldbu	r2,0(r2)
   88d58:	9826d13a 	srli	r19,r19,4
   88d5c:	ad7fffc4 	addi	r21,r21,-1
   88d60:	1ca4b03a 	or	r18,r3,r18
   88d64:	a8800005 	stb	r2,0(r21)
   88d68:	94c4b03a 	or	r2,r18,r19
   88d6c:	103ff51e 	bne	r2,zero,88d44 <__alt_data_end+0xfffbd254>
   88d70:	003e5906 	br	886d8 <__alt_data_end+0xfffbcbe8>
   88d74:	d9402117 	ldw	r5,132(sp)
   88d78:	d9002017 	ldw	r4,128(sp)
   88d7c:	d9801a04 	addi	r6,sp,104
   88d80:	0087d480 	call	87d48 <__sprint_r.part.0>
   88d84:	103f891e 	bne	r2,zero,88bac <__alt_data_end+0xfffbd0bc>
   88d88:	d8801c17 	ldw	r2,112(sp)
   88d8c:	d811883a 	mov	r8,sp
   88d90:	003f9506 	br	88be8 <__alt_data_end+0xfffbd0f8>
   88d94:	d9402117 	ldw	r5,132(sp)
   88d98:	d9002017 	ldw	r4,128(sp)
   88d9c:	d9801a04 	addi	r6,sp,104
   88da0:	0087d480 	call	87d48 <__sprint_r.part.0>
   88da4:	103f811e 	bne	r2,zero,88bac <__alt_data_end+0xfffbd0bc>
   88da8:	d811883a 	mov	r8,sp
   88dac:	003ced06 	br	88164 <__alt_data_end+0xfffbc674>
   88db0:	d9402117 	ldw	r5,132(sp)
   88db4:	d9002017 	ldw	r4,128(sp)
   88db8:	d9801a04 	addi	r6,sp,104
   88dbc:	da402c15 	stw	r9,176(sp)
   88dc0:	db802a15 	stw	r14,168(sp)
   88dc4:	0087d480 	call	87d48 <__sprint_r.part.0>
   88dc8:	da402c17 	ldw	r9,176(sp)
   88dcc:	db802a17 	ldw	r14,168(sp)
   88dd0:	103f761e 	bne	r2,zero,88bac <__alt_data_end+0xfffbd0bc>
   88dd4:	d9401b17 	ldw	r5,108(sp)
   88dd8:	d8801c17 	ldw	r2,112(sp)
   88ddc:	d811883a 	mov	r8,sp
   88de0:	29000044 	addi	r4,r5,1
   88de4:	003d5b06 	br	88354 <__alt_data_end+0xfffbc864>
   88de8:	d9402117 	ldw	r5,132(sp)
   88dec:	d9002017 	ldw	r4,128(sp)
   88df0:	d9801a04 	addi	r6,sp,104
   88df4:	da402c15 	stw	r9,176(sp)
   88df8:	0087d480 	call	87d48 <__sprint_r.part.0>
   88dfc:	da402c17 	ldw	r9,176(sp)
   88e00:	103f6a1e 	bne	r2,zero,88bac <__alt_data_end+0xfffbd0bc>
   88e04:	d9401b17 	ldw	r5,108(sp)
   88e08:	d8801c17 	ldw	r2,112(sp)
   88e0c:	d811883a 	mov	r8,sp
   88e10:	29000044 	addi	r4,r5,1
   88e14:	003f1006 	br	88a58 <__alt_data_end+0xfffbcf68>
   88e18:	1000c31e 	bne	r2,zero,89128 <___vfiprintf_internal_r+0x12cc>
   88e1c:	01000044 	movi	r4,1
   88e20:	000b883a 	mov	r5,zero
   88e24:	d811883a 	mov	r8,sp
   88e28:	003f0d06 	br	88a60 <__alt_data_end+0xfffbcf70>
   88e2c:	d9402117 	ldw	r5,132(sp)
   88e30:	d9002017 	ldw	r4,128(sp)
   88e34:	d9801a04 	addi	r6,sp,104
   88e38:	0087d480 	call	87d48 <__sprint_r.part.0>
   88e3c:	103f5b1e 	bne	r2,zero,88bac <__alt_data_end+0xfffbd0bc>
   88e40:	d9001b17 	ldw	r4,108(sp)
   88e44:	d8801c17 	ldw	r2,112(sp)
   88e48:	d811883a 	mov	r8,sp
   88e4c:	21000044 	addi	r4,r4,1
   88e50:	003d8006 	br	88454 <__alt_data_end+0xfffbc964>
   88e54:	01000274 	movhi	r4,9
   88e58:	213e4804 	addi	r4,r4,-1760
   88e5c:	d9002615 	stw	r4,152(sp)
   88e60:	d8c02215 	stw	r3,136(sp)
   88e64:	1029883a 	mov	r20,r2
   88e68:	94c4b03a 	or	r2,r18,r19
   88e6c:	103fb21e 	bne	r2,zero,88d38 <__alt_data_end+0xfffbd248>
   88e70:	0039883a 	mov	fp,zero
   88e74:	00800084 	movi	r2,2
   88e78:	003e6b06 	br	88828 <__alt_data_end+0xfffbcd38>
   88e7c:	da802217 	ldw	r10,136(sp)
   88e80:	d8001d85 	stb	zero,118(sp)
   88e84:	0027883a 	mov	r19,zero
   88e88:	50800104 	addi	r2,r10,4
   88e8c:	54800017 	ldw	r18,0(r10)
   88e90:	483e6016 	blt	r9,zero,88814 <__alt_data_end+0xfffbcd24>
   88e94:	00ffdfc4 	movi	r3,-129
   88e98:	d8802215 	stw	r2,136(sp)
   88e9c:	a0e8703a 	and	r20,r20,r3
   88ea0:	0039883a 	mov	fp,zero
   88ea4:	903ebb26 	beq	r18,zero,88994 <__alt_data_end+0xfffbcea4>
   88ea8:	00800244 	movi	r2,9
   88eac:	14bdee36 	bltu	r2,r18,88668 <__alt_data_end+0xfffbcb78>
   88eb0:	003eba06 	br	8899c <__alt_data_end+0xfffbceac>
   88eb4:	00800c04 	movi	r2,48
   88eb8:	d8c01d45 	stb	r3,117(sp)
   88ebc:	d8801d05 	stb	r2,116(sp)
   88ec0:	d8001d85 	stb	zero,118(sp)
   88ec4:	a0c00094 	ori	r3,r20,2
   88ec8:	4800a916 	blt	r9,zero,89170 <___vfiprintf_internal_r+0x1314>
   88ecc:	00bfdfc4 	movi	r2,-129
   88ed0:	a096703a 	and	r11,r20,r2
   88ed4:	5d000094 	ori	r20,r11,2
   88ed8:	0039883a 	mov	fp,zero
   88edc:	003f9706 	br	88d3c <__alt_data_end+0xfffbd24c>
   88ee0:	8025883a 	mov	r18,r16
   88ee4:	003c2e06 	br	87fa0 <__alt_data_end+0xfffbc4b0>
   88ee8:	00800274 	movhi	r2,9
   88eec:	10be4804 	addi	r2,r2,-1760
   88ef0:	0039883a 	mov	fp,zero
   88ef4:	d8802615 	stw	r2,152(sp)
   88ef8:	003f9006 	br	88d3c <__alt_data_end+0xfffbd24c>
   88efc:	04a5c83a 	sub	r18,zero,r18
   88f00:	07000b44 	movi	fp,45
   88f04:	9004c03a 	cmpne	r2,r18,zero
   88f08:	04e7c83a 	sub	r19,zero,r19
   88f0c:	df001d85 	stb	fp,118(sp)
   88f10:	98a7c83a 	sub	r19,r19,r2
   88f14:	48009f16 	blt	r9,zero,89194 <___vfiprintf_internal_r+0x1338>
   88f18:	00bfdfc4 	movi	r2,-129
   88f1c:	a0a8703a 	and	r20,r20,r2
   88f20:	003dd006 	br	88664 <__alt_data_end+0xfffbcb74>
   88f24:	70004c26 	beq	r14,zero,89058 <___vfiprintf_internal_r+0x11fc>
   88f28:	00800084 	movi	r2,2
   88f2c:	d8c01d04 	addi	r3,sp,116
   88f30:	d8c00015 	stw	r3,0(sp)
   88f34:	d8800115 	stw	r2,4(sp)
   88f38:	01000044 	movi	r4,1
   88f3c:	d811883a 	mov	r8,sp
   88f40:	003f7306 	br	88d10 <__alt_data_end+0xfffbd220>
   88f44:	a080100c 	andi	r2,r20,64
   88f48:	da802217 	ldw	r10,136(sp)
   88f4c:	103e0626 	beq	r2,zero,88768 <__alt_data_end+0xfffbcc78>
   88f50:	5480000f 	ldh	r18,0(r10)
   88f54:	52800104 	addi	r10,r10,4
   88f58:	da802215 	stw	r10,136(sp)
   88f5c:	9027d7fa 	srai	r19,r18,31
   88f60:	9805883a 	mov	r2,r19
   88f64:	003db806 	br	88648 <__alt_data_end+0xfffbcb58>
   88f68:	a080040c 	andi	r2,r20,16
   88f6c:	1000091e 	bne	r2,zero,88f94 <___vfiprintf_internal_r+0x1138>
   88f70:	a2c0100c 	andi	r11,r20,64
   88f74:	58000726 	beq	r11,zero,88f94 <___vfiprintf_internal_r+0x1138>
   88f78:	da802217 	ldw	r10,136(sp)
   88f7c:	50800017 	ldw	r2,0(r10)
   88f80:	52800104 	addi	r10,r10,4
   88f84:	da802215 	stw	r10,136(sp)
   88f88:	da802317 	ldw	r10,140(sp)
   88f8c:	1280000d 	sth	r10,0(r2)
   88f90:	003be706 	br	87f30 <__alt_data_end+0xfffbc440>
   88f94:	da802217 	ldw	r10,136(sp)
   88f98:	50800017 	ldw	r2,0(r10)
   88f9c:	52800104 	addi	r10,r10,4
   88fa0:	da802215 	stw	r10,136(sp)
   88fa4:	da802317 	ldw	r10,140(sp)
   88fa8:	12800015 	stw	r10,0(r2)
   88fac:	003be006 	br	87f30 <__alt_data_end+0xfffbc440>
   88fb0:	a080100c 	andi	r2,r20,64
   88fb4:	da802217 	ldw	r10,136(sp)
   88fb8:	10003026 	beq	r2,zero,8907c <___vfiprintf_internal_r+0x1220>
   88fbc:	5480000b 	ldhu	r18,0(r10)
   88fc0:	52800104 	addi	r10,r10,4
   88fc4:	0027883a 	mov	r19,zero
   88fc8:	da802215 	stw	r10,136(sp)
   88fcc:	003d8006 	br	885d0 <__alt_data_end+0xfffbcae0>
   88fd0:	80c00007 	ldb	r3,0(r16)
   88fd4:	003c0006 	br	87fd8 <__alt_data_end+0xfffbc4e8>
   88fd8:	a080100c 	andi	r2,r20,64
   88fdc:	d8001d85 	stb	zero,118(sp)
   88fe0:	da802217 	ldw	r10,136(sp)
   88fe4:	1000201e 	bne	r2,zero,89068 <___vfiprintf_internal_r+0x120c>
   88fe8:	50800104 	addi	r2,r10,4
   88fec:	54800017 	ldw	r18,0(r10)
   88ff0:	0027883a 	mov	r19,zero
   88ff4:	483def0e 	bge	r9,zero,887b4 <__alt_data_end+0xfffbccc4>
   88ff8:	94c6b03a 	or	r3,r18,r19
   88ffc:	d8802215 	stw	r2,136(sp)
   89000:	183d4e1e 	bne	r3,zero,8853c <__alt_data_end+0xfffbca4c>
   89004:	0039883a 	mov	fp,zero
   89008:	0005883a 	mov	r2,zero
   8900c:	003e0606 	br	88828 <__alt_data_end+0xfffbcd38>
   89010:	d9402117 	ldw	r5,132(sp)
   89014:	d9002017 	ldw	r4,128(sp)
   89018:	d9801a04 	addi	r6,sp,104
   8901c:	da402c15 	stw	r9,176(sp)
   89020:	db802a15 	stw	r14,168(sp)
   89024:	0087d480 	call	87d48 <__sprint_r.part.0>
   89028:	da402c17 	ldw	r9,176(sp)
   8902c:	db802a17 	ldw	r14,168(sp)
   89030:	103ede1e 	bne	r2,zero,88bac <__alt_data_end+0xfffbd0bc>
   89034:	d9401b17 	ldw	r5,108(sp)
   89038:	d8801c17 	ldw	r2,112(sp)
   8903c:	d811883a 	mov	r8,sp
   89040:	29000044 	addi	r4,r5,1
   89044:	003e7406 	br	88a18 <__alt_data_end+0xfffbcf28>
   89048:	00bfffc4 	movi	r2,-1
   8904c:	003c5806 	br	881b0 <__alt_data_end+0xfffbc6c0>
   89050:	d811883a 	mov	r8,sp
   89054:	003ee806 	br	88bf8 <__alt_data_end+0xfffbd108>
   89058:	000b883a 	mov	r5,zero
   8905c:	01000044 	movi	r4,1
   89060:	d811883a 	mov	r8,sp
   89064:	003e7c06 	br	88a58 <__alt_data_end+0xfffbcf68>
   89068:	50800104 	addi	r2,r10,4
   8906c:	5480000b 	ldhu	r18,0(r10)
   89070:	0027883a 	mov	r19,zero
   89074:	483dcf0e 	bge	r9,zero,887b4 <__alt_data_end+0xfffbccc4>
   89078:	003fdf06 	br	88ff8 <__alt_data_end+0xfffbd508>
   8907c:	54800017 	ldw	r18,0(r10)
   89080:	52800104 	addi	r10,r10,4
   89084:	0027883a 	mov	r19,zero
   89088:	da802215 	stw	r10,136(sp)
   8908c:	003d5006 	br	885d0 <__alt_data_end+0xfffbcae0>
   89090:	50800104 	addi	r2,r10,4
   89094:	5480000b 	ldhu	r18,0(r10)
   89098:	0027883a 	mov	r19,zero
   8909c:	483f7d0e 	bge	r9,zero,88e94 <__alt_data_end+0xfffbd3a4>
   890a0:	003ddc06 	br	88814 <__alt_data_end+0xfffbcd24>
   890a4:	d8c02215 	stw	r3,136(sp)
   890a8:	0039883a 	mov	fp,zero
   890ac:	003ddb06 	br	8881c <__alt_data_end+0xfffbcd2c>
   890b0:	02800274 	movhi	r10,9
   890b4:	52bea904 	addi	r10,r10,-1372
   890b8:	da802415 	stw	r10,144(sp)
   890bc:	003e8306 	br	88acc <__alt_data_end+0xfffbcfdc>
   890c0:	d8801c17 	ldw	r2,112(sp)
   890c4:	dd002117 	ldw	r20,132(sp)
   890c8:	103eb926 	beq	r2,zero,88bb0 <__alt_data_end+0xfffbd0c0>
   890cc:	d9002017 	ldw	r4,128(sp)
   890d0:	d9801a04 	addi	r6,sp,104
   890d4:	a00b883a 	mov	r5,r20
   890d8:	0087d480 	call	87d48 <__sprint_r.part.0>
   890dc:	003eb406 	br	88bb0 <__alt_data_end+0xfffbd0c0>
   890e0:	80c00043 	ldbu	r3,1(r16)
   890e4:	a5000814 	ori	r20,r20,32
   890e8:	84000044 	addi	r16,r16,1
   890ec:	18c03fcc 	andi	r3,r3,255
   890f0:	18c0201c 	xori	r3,r3,128
   890f4:	18ffe004 	addi	r3,r3,-128
   890f8:	003bb706 	br	87fd8 <__alt_data_end+0xfffbc4e8>
   890fc:	a809883a 	mov	r4,r21
   89100:	d8c02a15 	stw	r3,168(sp)
   89104:	da002b15 	stw	r8,172(sp)
   89108:	00807b00 	call	807b0 <strlen>
   8910c:	d8c02a17 	ldw	r3,168(sp)
   89110:	1027883a 	mov	r19,r2
   89114:	df001d83 	ldbu	fp,118(sp)
   89118:	d8c02215 	stw	r3,136(sp)
   8911c:	0013883a 	mov	r9,zero
   89120:	da002b17 	ldw	r8,172(sp)
   89124:	003c4d06 	br	8825c <__alt_data_end+0xfffbc76c>
   89128:	d9402117 	ldw	r5,132(sp)
   8912c:	d9002017 	ldw	r4,128(sp)
   89130:	d9801a04 	addi	r6,sp,104
   89134:	da402c15 	stw	r9,176(sp)
   89138:	0087d480 	call	87d48 <__sprint_r.part.0>
   8913c:	da402c17 	ldw	r9,176(sp)
   89140:	103e9a1e 	bne	r2,zero,88bac <__alt_data_end+0xfffbd0bc>
   89144:	d9401b17 	ldw	r5,108(sp)
   89148:	d8801c17 	ldw	r2,112(sp)
   8914c:	d811883a 	mov	r8,sp
   89150:	29000044 	addi	r4,r5,1
   89154:	003e4206 	br	88a60 <__alt_data_end+0xfffbcf70>
   89158:	d9401b17 	ldw	r5,108(sp)
   8915c:	01000274 	movhi	r4,9
   89160:	213ead04 	addi	r4,r4,-1356
   89164:	d9002415 	stw	r4,144(sp)
   89168:	29400044 	addi	r5,r5,1
   8916c:	003c6d06 	br	88324 <__alt_data_end+0xfffbc834>
   89170:	0039883a 	mov	fp,zero
   89174:	00800084 	movi	r2,2
   89178:	10803fcc 	andi	r2,r2,255
   8917c:	01000044 	movi	r4,1
   89180:	11001e26 	beq	r2,r4,891fc <___vfiprintf_internal_r+0x13a0>
   89184:	01000084 	movi	r4,2
   89188:	11001e1e 	bne	r2,r4,89204 <___vfiprintf_internal_r+0x13a8>
   8918c:	1829883a 	mov	r20,r3
   89190:	003eea06 	br	88d3c <__alt_data_end+0xfffbd24c>
   89194:	a007883a 	mov	r3,r20
   89198:	00800044 	movi	r2,1
   8919c:	003ff606 	br	89178 <__alt_data_end+0xfffbd688>
   891a0:	00800184 	movi	r2,6
   891a4:	1240012e 	bgeu	r2,r9,891ac <___vfiprintf_internal_r+0x1350>
   891a8:	1013883a 	mov	r9,r2
   891ac:	4827883a 	mov	r19,r9
   891b0:	4825883a 	mov	r18,r9
   891b4:	48001516 	blt	r9,zero,8920c <___vfiprintf_internal_r+0x13b0>
   891b8:	05400274 	movhi	r21,9
   891bc:	d8c02215 	stw	r3,136(sp)
   891c0:	ad7e4d04 	addi	r21,r21,-1740
   891c4:	003d1406 	br	88618 <__alt_data_end+0xfffbcb28>
   891c8:	02800274 	movhi	r10,9
   891cc:	52bea904 	addi	r10,r10,-1372
   891d0:	da802415 	stw	r10,144(sp)
   891d4:	200d883a 	mov	r6,r4
   891d8:	003c9106 	br	88420 <__alt_data_end+0xfffbc930>
   891dc:	5021883a 	mov	r16,r10
   891e0:	0013883a 	mov	r9,zero
   891e4:	003b7d06 	br	87fdc <__alt_data_end+0xfffbc4ec>
   891e8:	4827883a 	mov	r19,r9
   891ec:	df001d83 	ldbu	fp,118(sp)
   891f0:	d8c02215 	stw	r3,136(sp)
   891f4:	0013883a 	mov	r9,zero
   891f8:	003c1806 	br	8825c <__alt_data_end+0xfffbc76c>
   891fc:	1829883a 	mov	r20,r3
   89200:	003d1806 	br	88664 <__alt_data_end+0xfffbcb74>
   89204:	1829883a 	mov	r20,r3
   89208:	003ccd06 	br	88540 <__alt_data_end+0xfffbca50>
   8920c:	0025883a 	mov	r18,zero
   89210:	003fe906 	br	891b8 <__alt_data_end+0xfffbd6c8>
   89214:	d8802217 	ldw	r2,136(sp)
   89218:	80c00043 	ldbu	r3,1(r16)
   8921c:	5021883a 	mov	r16,r10
   89220:	12400017 	ldw	r9,0(r2)
   89224:	10800104 	addi	r2,r2,4
   89228:	d8802215 	stw	r2,136(sp)
   8922c:	483faf0e 	bge	r9,zero,890ec <__alt_data_end+0xfffbd5fc>
   89230:	18c03fcc 	andi	r3,r3,255
   89234:	18c0201c 	xori	r3,r3,128
   89238:	027fffc4 	movi	r9,-1
   8923c:	18ffe004 	addi	r3,r3,-128
   89240:	003b6506 	br	87fd8 <__alt_data_end+0xfffbc4e8>
   89244:	d9c01d85 	stb	r7,118(sp)
   89248:	003ca006 	br	884cc <__alt_data_end+0xfffbc9dc>
   8924c:	d9c01d85 	stb	r7,118(sp)
   89250:	003cad06 	br	88508 <__alt_data_end+0xfffbca18>
   89254:	d9c01d85 	stb	r7,118(sp)
   89258:	003d7d06 	br	88850 <__alt_data_end+0xfffbcd60>
   8925c:	d9c01d85 	stb	r7,118(sp)
   89260:	003d5f06 	br	887e0 <__alt_data_end+0xfffbccf0>
   89264:	a080004c 	andi	r2,r20,1
   89268:	0039883a 	mov	fp,zero
   8926c:	10000526 	beq	r2,zero,89284 <___vfiprintf_internal_r+0x1428>
   89270:	00800c04 	movi	r2,48
   89274:	d88019c5 	stb	r2,103(sp)
   89278:	dcc02717 	ldw	r19,156(sp)
   8927c:	dd4019c4 	addi	r21,sp,103
   89280:	003bf606 	br	8825c <__alt_data_end+0xfffbc76c>
   89284:	0027883a 	mov	r19,zero
   89288:	dd401a04 	addi	r21,sp,104
   8928c:	003bf306 	br	8825c <__alt_data_end+0xfffbc76c>
   89290:	d9c01d85 	stb	r7,118(sp)
   89294:	003dc806 	br	889b8 <__alt_data_end+0xfffbcec8>
   89298:	d9c01d85 	stb	r7,118(sp)
   8929c:	003d3a06 	br	88788 <__alt_data_end+0xfffbcc98>
   892a0:	d9c01d85 	stb	r7,118(sp)
   892a4:	003d2a06 	br	88750 <__alt_data_end+0xfffbcc60>
   892a8:	d9c01d85 	stb	r7,118(sp)
   892ac:	003cde06 	br	88628 <__alt_data_end+0xfffbcb38>
   892b0:	d9c01d85 	stb	r7,118(sp)
   892b4:	003cbc06 	br	885a8 <__alt_data_end+0xfffbcab8>

000892b8 <__vfiprintf_internal>:
   892b8:	00800274 	movhi	r2,9
   892bc:	1085a904 	addi	r2,r2,5796
   892c0:	300f883a 	mov	r7,r6
   892c4:	280d883a 	mov	r6,r5
   892c8:	200b883a 	mov	r5,r4
   892cc:	11000017 	ldw	r4,0(r2)
   892d0:	0087e5c1 	jmpi	87e5c <___vfiprintf_internal_r>

000892d4 <__sbprintf>:
   892d4:	2880030b 	ldhu	r2,12(r5)
   892d8:	2ac01917 	ldw	r11,100(r5)
   892dc:	2a80038b 	ldhu	r10,14(r5)
   892e0:	2a400717 	ldw	r9,28(r5)
   892e4:	2a000917 	ldw	r8,36(r5)
   892e8:	defee204 	addi	sp,sp,-1144
   892ec:	00c10004 	movi	r3,1024
   892f0:	dc011a15 	stw	r16,1128(sp)
   892f4:	10bfff4c 	andi	r2,r2,65533
   892f8:	2821883a 	mov	r16,r5
   892fc:	d8cb883a 	add	r5,sp,r3
   89300:	dc811c15 	stw	r18,1136(sp)
   89304:	dc411b15 	stw	r17,1132(sp)
   89308:	dfc11d15 	stw	ra,1140(sp)
   8930c:	2025883a 	mov	r18,r4
   89310:	d881030d 	sth	r2,1036(sp)
   89314:	dac11915 	stw	r11,1124(sp)
   89318:	da81038d 	sth	r10,1038(sp)
   8931c:	da410715 	stw	r9,1052(sp)
   89320:	da010915 	stw	r8,1060(sp)
   89324:	dec10015 	stw	sp,1024(sp)
   89328:	dec10415 	stw	sp,1040(sp)
   8932c:	d8c10215 	stw	r3,1032(sp)
   89330:	d8c10515 	stw	r3,1044(sp)
   89334:	d8010615 	stw	zero,1048(sp)
   89338:	0087e5c0 	call	87e5c <___vfiprintf_internal_r>
   8933c:	1023883a 	mov	r17,r2
   89340:	10000416 	blt	r2,zero,89354 <__sbprintf+0x80>
   89344:	d9410004 	addi	r5,sp,1024
   89348:	9009883a 	mov	r4,r18
   8934c:	00847100 	call	84710 <_fflush_r>
   89350:	10000d1e 	bne	r2,zero,89388 <__sbprintf+0xb4>
   89354:	d881030b 	ldhu	r2,1036(sp)
   89358:	1080100c 	andi	r2,r2,64
   8935c:	10000326 	beq	r2,zero,8936c <__sbprintf+0x98>
   89360:	8080030b 	ldhu	r2,12(r16)
   89364:	10801014 	ori	r2,r2,64
   89368:	8080030d 	sth	r2,12(r16)
   8936c:	8805883a 	mov	r2,r17
   89370:	dfc11d17 	ldw	ra,1140(sp)
   89374:	dc811c17 	ldw	r18,1136(sp)
   89378:	dc411b17 	ldw	r17,1132(sp)
   8937c:	dc011a17 	ldw	r16,1128(sp)
   89380:	dec11e04 	addi	sp,sp,1144
   89384:	f800283a 	ret
   89388:	047fffc4 	movi	r17,-1
   8938c:	003ff106 	br	89354 <__alt_data_end+0xfffbd864>

00089390 <_write_r>:
   89390:	defffd04 	addi	sp,sp,-12
   89394:	2805883a 	mov	r2,r5
   89398:	dc000015 	stw	r16,0(sp)
   8939c:	04000274 	movhi	r16,9
   893a0:	dc400115 	stw	r17,4(sp)
   893a4:	300b883a 	mov	r5,r6
   893a8:	840c7d04 	addi	r16,r16,12788
   893ac:	2023883a 	mov	r17,r4
   893b0:	380d883a 	mov	r6,r7
   893b4:	1009883a 	mov	r4,r2
   893b8:	dfc00215 	stw	ra,8(sp)
   893bc:	80000015 	stw	zero,0(r16)
   893c0:	008dbfc0 	call	8dbfc <write>
   893c4:	00ffffc4 	movi	r3,-1
   893c8:	10c00526 	beq	r2,r3,893e0 <_write_r+0x50>
   893cc:	dfc00217 	ldw	ra,8(sp)
   893d0:	dc400117 	ldw	r17,4(sp)
   893d4:	dc000017 	ldw	r16,0(sp)
   893d8:	dec00304 	addi	sp,sp,12
   893dc:	f800283a 	ret
   893e0:	80c00017 	ldw	r3,0(r16)
   893e4:	183ff926 	beq	r3,zero,893cc <__alt_data_end+0xfffbd8dc>
   893e8:	88c00015 	stw	r3,0(r17)
   893ec:	003ff706 	br	893cc <__alt_data_end+0xfffbd8dc>

000893f0 <_close_r>:
   893f0:	defffd04 	addi	sp,sp,-12
   893f4:	dc000015 	stw	r16,0(sp)
   893f8:	04000274 	movhi	r16,9
   893fc:	dc400115 	stw	r17,4(sp)
   89400:	840c7d04 	addi	r16,r16,12788
   89404:	2023883a 	mov	r17,r4
   89408:	2809883a 	mov	r4,r5
   8940c:	dfc00215 	stw	ra,8(sp)
   89410:	80000015 	stw	zero,0(r16)
   89414:	008cfcc0 	call	8cfcc <close>
   89418:	00ffffc4 	movi	r3,-1
   8941c:	10c00526 	beq	r2,r3,89434 <_close_r+0x44>
   89420:	dfc00217 	ldw	ra,8(sp)
   89424:	dc400117 	ldw	r17,4(sp)
   89428:	dc000017 	ldw	r16,0(sp)
   8942c:	dec00304 	addi	sp,sp,12
   89430:	f800283a 	ret
   89434:	80c00017 	ldw	r3,0(r16)
   89438:	183ff926 	beq	r3,zero,89420 <__alt_data_end+0xfffbd930>
   8943c:	88c00015 	stw	r3,0(r17)
   89440:	003ff706 	br	89420 <__alt_data_end+0xfffbd930>

00089444 <_calloc_r>:
   89444:	298b383a 	mul	r5,r5,r6
   89448:	defffe04 	addi	sp,sp,-8
   8944c:	dfc00115 	stw	ra,4(sp)
   89450:	dc000015 	stw	r16,0(sp)
   89454:	008584c0 	call	8584c <_malloc_r>
   89458:	10002926 	beq	r2,zero,89500 <_calloc_r+0xbc>
   8945c:	11bfff17 	ldw	r6,-4(r2)
   89460:	1021883a 	mov	r16,r2
   89464:	00bfff04 	movi	r2,-4
   89468:	308c703a 	and	r6,r6,r2
   8946c:	00c00904 	movi	r3,36
   89470:	308d883a 	add	r6,r6,r2
   89474:	19801636 	bltu	r3,r6,894d0 <_calloc_r+0x8c>
   89478:	008004c4 	movi	r2,19
   8947c:	11800b2e 	bgeu	r2,r6,894ac <_calloc_r+0x68>
   89480:	80000015 	stw	zero,0(r16)
   89484:	80000115 	stw	zero,4(r16)
   89488:	008006c4 	movi	r2,27
   8948c:	11801a2e 	bgeu	r2,r6,894f8 <_calloc_r+0xb4>
   89490:	80000215 	stw	zero,8(r16)
   89494:	80000315 	stw	zero,12(r16)
   89498:	30c0151e 	bne	r6,r3,894f0 <_calloc_r+0xac>
   8949c:	80000415 	stw	zero,16(r16)
   894a0:	80800604 	addi	r2,r16,24
   894a4:	80000515 	stw	zero,20(r16)
   894a8:	00000106 	br	894b0 <_calloc_r+0x6c>
   894ac:	8005883a 	mov	r2,r16
   894b0:	10000015 	stw	zero,0(r2)
   894b4:	10000115 	stw	zero,4(r2)
   894b8:	10000215 	stw	zero,8(r2)
   894bc:	8005883a 	mov	r2,r16
   894c0:	dfc00117 	ldw	ra,4(sp)
   894c4:	dc000017 	ldw	r16,0(sp)
   894c8:	dec00204 	addi	sp,sp,8
   894cc:	f800283a 	ret
   894d0:	000b883a 	mov	r5,zero
   894d4:	8009883a 	mov	r4,r16
   894d8:	00863e00 	call	863e0 <memset>
   894dc:	8005883a 	mov	r2,r16
   894e0:	dfc00117 	ldw	ra,4(sp)
   894e4:	dc000017 	ldw	r16,0(sp)
   894e8:	dec00204 	addi	sp,sp,8
   894ec:	f800283a 	ret
   894f0:	80800404 	addi	r2,r16,16
   894f4:	003fee06 	br	894b0 <__alt_data_end+0xfffbd9c0>
   894f8:	80800204 	addi	r2,r16,8
   894fc:	003fec06 	br	894b0 <__alt_data_end+0xfffbd9c0>
   89500:	0005883a 	mov	r2,zero
   89504:	003fee06 	br	894c0 <__alt_data_end+0xfffbd9d0>

00089508 <_fclose_r>:
   89508:	28003926 	beq	r5,zero,895f0 <_fclose_r+0xe8>
   8950c:	defffc04 	addi	sp,sp,-16
   89510:	dc400115 	stw	r17,4(sp)
   89514:	dc000015 	stw	r16,0(sp)
   89518:	dfc00315 	stw	ra,12(sp)
   8951c:	dc800215 	stw	r18,8(sp)
   89520:	2023883a 	mov	r17,r4
   89524:	2821883a 	mov	r16,r5
   89528:	20000226 	beq	r4,zero,89534 <_fclose_r+0x2c>
   8952c:	20800e17 	ldw	r2,56(r4)
   89530:	10002726 	beq	r2,zero,895d0 <_fclose_r+0xc8>
   89534:	8080030f 	ldh	r2,12(r16)
   89538:	1000071e 	bne	r2,zero,89558 <_fclose_r+0x50>
   8953c:	0005883a 	mov	r2,zero
   89540:	dfc00317 	ldw	ra,12(sp)
   89544:	dc800217 	ldw	r18,8(sp)
   89548:	dc400117 	ldw	r17,4(sp)
   8954c:	dc000017 	ldw	r16,0(sp)
   89550:	dec00404 	addi	sp,sp,16
   89554:	f800283a 	ret
   89558:	800b883a 	mov	r5,r16
   8955c:	8809883a 	mov	r4,r17
   89560:	00844f40 	call	844f4 <__sflush_r>
   89564:	1025883a 	mov	r18,r2
   89568:	80800b17 	ldw	r2,44(r16)
   8956c:	10000426 	beq	r2,zero,89580 <_fclose_r+0x78>
   89570:	81400717 	ldw	r5,28(r16)
   89574:	8809883a 	mov	r4,r17
   89578:	103ee83a 	callr	r2
   8957c:	10001616 	blt	r2,zero,895d8 <_fclose_r+0xd0>
   89580:	8080030b 	ldhu	r2,12(r16)
   89584:	1080200c 	andi	r2,r2,128
   89588:	1000151e 	bne	r2,zero,895e0 <_fclose_r+0xd8>
   8958c:	81400c17 	ldw	r5,48(r16)
   89590:	28000526 	beq	r5,zero,895a8 <_fclose_r+0xa0>
   89594:	80801004 	addi	r2,r16,64
   89598:	28800226 	beq	r5,r2,895a4 <_fclose_r+0x9c>
   8959c:	8809883a 	mov	r4,r17
   895a0:	0084c600 	call	84c60 <_free_r>
   895a4:	80000c15 	stw	zero,48(r16)
   895a8:	81401117 	ldw	r5,68(r16)
   895ac:	28000326 	beq	r5,zero,895bc <_fclose_r+0xb4>
   895b0:	8809883a 	mov	r4,r17
   895b4:	0084c600 	call	84c60 <_free_r>
   895b8:	80001115 	stw	zero,68(r16)
   895bc:	0084afc0 	call	84afc <__sfp_lock_acquire>
   895c0:	8000030d 	sth	zero,12(r16)
   895c4:	0084b000 	call	84b00 <__sfp_lock_release>
   895c8:	9005883a 	mov	r2,r18
   895cc:	003fdc06 	br	89540 <__alt_data_end+0xfffbda50>
   895d0:	0084aec0 	call	84aec <__sinit>
   895d4:	003fd706 	br	89534 <__alt_data_end+0xfffbda44>
   895d8:	04bfffc4 	movi	r18,-1
   895dc:	003fe806 	br	89580 <__alt_data_end+0xfffbda90>
   895e0:	81400417 	ldw	r5,16(r16)
   895e4:	8809883a 	mov	r4,r17
   895e8:	0084c600 	call	84c60 <_free_r>
   895ec:	003fe706 	br	8958c <__alt_data_end+0xfffbda9c>
   895f0:	0005883a 	mov	r2,zero
   895f4:	f800283a 	ret

000895f8 <fclose>:
   895f8:	00800274 	movhi	r2,9
   895fc:	1085a904 	addi	r2,r2,5796
   89600:	200b883a 	mov	r5,r4
   89604:	11000017 	ldw	r4,0(r2)
   89608:	00895081 	jmpi	89508 <_fclose_r>

0008960c <__fputwc>:
   8960c:	defff804 	addi	sp,sp,-32
   89610:	dcc00415 	stw	r19,16(sp)
   89614:	dc800315 	stw	r18,12(sp)
   89618:	dc000115 	stw	r16,4(sp)
   8961c:	dfc00715 	stw	ra,28(sp)
   89620:	dd400615 	stw	r21,24(sp)
   89624:	dd000515 	stw	r20,20(sp)
   89628:	dc400215 	stw	r17,8(sp)
   8962c:	2027883a 	mov	r19,r4
   89630:	2825883a 	mov	r18,r5
   89634:	3021883a 	mov	r16,r6
   89638:	008563c0 	call	8563c <__locale_mb_cur_max>
   8963c:	00c00044 	movi	r3,1
   89640:	10c03e26 	beq	r2,r3,8973c <__fputwc+0x130>
   89644:	81c01704 	addi	r7,r16,92
   89648:	900d883a 	mov	r6,r18
   8964c:	d80b883a 	mov	r5,sp
   89650:	9809883a 	mov	r4,r19
   89654:	0089adc0 	call	89adc <_wcrtomb_r>
   89658:	1029883a 	mov	r20,r2
   8965c:	00bfffc4 	movi	r2,-1
   89660:	a0802026 	beq	r20,r2,896e4 <__fputwc+0xd8>
   89664:	d9400003 	ldbu	r5,0(sp)
   89668:	a0001c26 	beq	r20,zero,896dc <__fputwc+0xd0>
   8966c:	0023883a 	mov	r17,zero
   89670:	05400284 	movi	r21,10
   89674:	00000906 	br	8969c <__fputwc+0x90>
   89678:	80800017 	ldw	r2,0(r16)
   8967c:	11400005 	stb	r5,0(r2)
   89680:	80c00017 	ldw	r3,0(r16)
   89684:	18c00044 	addi	r3,r3,1
   89688:	80c00015 	stw	r3,0(r16)
   8968c:	8c400044 	addi	r17,r17,1
   89690:	dc45883a 	add	r2,sp,r17
   89694:	8d00112e 	bgeu	r17,r20,896dc <__fputwc+0xd0>
   89698:	11400003 	ldbu	r5,0(r2)
   8969c:	80c00217 	ldw	r3,8(r16)
   896a0:	18ffffc4 	addi	r3,r3,-1
   896a4:	80c00215 	stw	r3,8(r16)
   896a8:	183ff30e 	bge	r3,zero,89678 <__alt_data_end+0xfffbdb88>
   896ac:	80800617 	ldw	r2,24(r16)
   896b0:	18801916 	blt	r3,r2,89718 <__fputwc+0x10c>
   896b4:	80800017 	ldw	r2,0(r16)
   896b8:	11400005 	stb	r5,0(r2)
   896bc:	80800017 	ldw	r2,0(r16)
   896c0:	10c00003 	ldbu	r3,0(r2)
   896c4:	10800044 	addi	r2,r2,1
   896c8:	1d402326 	beq	r3,r21,89758 <__fputwc+0x14c>
   896cc:	80800015 	stw	r2,0(r16)
   896d0:	8c400044 	addi	r17,r17,1
   896d4:	dc45883a 	add	r2,sp,r17
   896d8:	8d3fef36 	bltu	r17,r20,89698 <__alt_data_end+0xfffbdba8>
   896dc:	9005883a 	mov	r2,r18
   896e0:	00000406 	br	896f4 <__fputwc+0xe8>
   896e4:	80c0030b 	ldhu	r3,12(r16)
   896e8:	a005883a 	mov	r2,r20
   896ec:	18c01014 	ori	r3,r3,64
   896f0:	80c0030d 	sth	r3,12(r16)
   896f4:	dfc00717 	ldw	ra,28(sp)
   896f8:	dd400617 	ldw	r21,24(sp)
   896fc:	dd000517 	ldw	r20,20(sp)
   89700:	dcc00417 	ldw	r19,16(sp)
   89704:	dc800317 	ldw	r18,12(sp)
   89708:	dc400217 	ldw	r17,8(sp)
   8970c:	dc000117 	ldw	r16,4(sp)
   89710:	dec00804 	addi	sp,sp,32
   89714:	f800283a 	ret
   89718:	800d883a 	mov	r6,r16
   8971c:	29403fcc 	andi	r5,r5,255
   89720:	9809883a 	mov	r4,r19
   89724:	00899840 	call	89984 <__swbuf_r>
   89728:	10bfffe0 	cmpeqi	r2,r2,-1
   8972c:	10803fcc 	andi	r2,r2,255
   89730:	103fd626 	beq	r2,zero,8968c <__alt_data_end+0xfffbdb9c>
   89734:	00bfffc4 	movi	r2,-1
   89738:	003fee06 	br	896f4 <__alt_data_end+0xfffbdc04>
   8973c:	90ffffc4 	addi	r3,r18,-1
   89740:	01003f84 	movi	r4,254
   89744:	20ffbf36 	bltu	r4,r3,89644 <__alt_data_end+0xfffbdb54>
   89748:	900b883a 	mov	r5,r18
   8974c:	dc800005 	stb	r18,0(sp)
   89750:	1029883a 	mov	r20,r2
   89754:	003fc506 	br	8966c <__alt_data_end+0xfffbdb7c>
   89758:	800d883a 	mov	r6,r16
   8975c:	a80b883a 	mov	r5,r21
   89760:	9809883a 	mov	r4,r19
   89764:	00899840 	call	89984 <__swbuf_r>
   89768:	10bfffe0 	cmpeqi	r2,r2,-1
   8976c:	003fef06 	br	8972c <__alt_data_end+0xfffbdc3c>

00089770 <_fputwc_r>:
   89770:	3080030b 	ldhu	r2,12(r6)
   89774:	10c8000c 	andi	r3,r2,8192
   89778:	1800051e 	bne	r3,zero,89790 <_fputwc_r+0x20>
   8977c:	30c01917 	ldw	r3,100(r6)
   89780:	10880014 	ori	r2,r2,8192
   89784:	3080030d 	sth	r2,12(r6)
   89788:	18880014 	ori	r2,r3,8192
   8978c:	30801915 	stw	r2,100(r6)
   89790:	008960c1 	jmpi	8960c <__fputwc>

00089794 <fputwc>:
   89794:	00800274 	movhi	r2,9
   89798:	defffc04 	addi	sp,sp,-16
   8979c:	1085a904 	addi	r2,r2,5796
   897a0:	dc000115 	stw	r16,4(sp)
   897a4:	14000017 	ldw	r16,0(r2)
   897a8:	dc400215 	stw	r17,8(sp)
   897ac:	dfc00315 	stw	ra,12(sp)
   897b0:	2023883a 	mov	r17,r4
   897b4:	80000226 	beq	r16,zero,897c0 <fputwc+0x2c>
   897b8:	80800e17 	ldw	r2,56(r16)
   897bc:	10001026 	beq	r2,zero,89800 <fputwc+0x6c>
   897c0:	2880030b 	ldhu	r2,12(r5)
   897c4:	10c8000c 	andi	r3,r2,8192
   897c8:	1800051e 	bne	r3,zero,897e0 <fputwc+0x4c>
   897cc:	28c01917 	ldw	r3,100(r5)
   897d0:	10880014 	ori	r2,r2,8192
   897d4:	2880030d 	sth	r2,12(r5)
   897d8:	18880014 	ori	r2,r3,8192
   897dc:	28801915 	stw	r2,100(r5)
   897e0:	280d883a 	mov	r6,r5
   897e4:	8009883a 	mov	r4,r16
   897e8:	880b883a 	mov	r5,r17
   897ec:	dfc00317 	ldw	ra,12(sp)
   897f0:	dc400217 	ldw	r17,8(sp)
   897f4:	dc000117 	ldw	r16,4(sp)
   897f8:	dec00404 	addi	sp,sp,16
   897fc:	008960c1 	jmpi	8960c <__fputwc>
   89800:	8009883a 	mov	r4,r16
   89804:	d9400015 	stw	r5,0(sp)
   89808:	0084aec0 	call	84aec <__sinit>
   8980c:	d9400017 	ldw	r5,0(sp)
   89810:	003feb06 	br	897c0 <__alt_data_end+0xfffbdcd0>

00089814 <_fstat_r>:
   89814:	defffd04 	addi	sp,sp,-12
   89818:	2805883a 	mov	r2,r5
   8981c:	dc000015 	stw	r16,0(sp)
   89820:	04000274 	movhi	r16,9
   89824:	dc400115 	stw	r17,4(sp)
   89828:	840c7d04 	addi	r16,r16,12788
   8982c:	2023883a 	mov	r17,r4
   89830:	300b883a 	mov	r5,r6
   89834:	1009883a 	mov	r4,r2
   89838:	dfc00215 	stw	ra,8(sp)
   8983c:	80000015 	stw	zero,0(r16)
   89840:	008d1040 	call	8d104 <fstat>
   89844:	00ffffc4 	movi	r3,-1
   89848:	10c00526 	beq	r2,r3,89860 <_fstat_r+0x4c>
   8984c:	dfc00217 	ldw	ra,8(sp)
   89850:	dc400117 	ldw	r17,4(sp)
   89854:	dc000017 	ldw	r16,0(sp)
   89858:	dec00304 	addi	sp,sp,12
   8985c:	f800283a 	ret
   89860:	80c00017 	ldw	r3,0(r16)
   89864:	183ff926 	beq	r3,zero,8984c <__alt_data_end+0xfffbdd5c>
   89868:	88c00015 	stw	r3,0(r17)
   8986c:	003ff706 	br	8984c <__alt_data_end+0xfffbdd5c>

00089870 <_isatty_r>:
   89870:	defffd04 	addi	sp,sp,-12
   89874:	dc000015 	stw	r16,0(sp)
   89878:	04000274 	movhi	r16,9
   8987c:	dc400115 	stw	r17,4(sp)
   89880:	840c7d04 	addi	r16,r16,12788
   89884:	2023883a 	mov	r17,r4
   89888:	2809883a 	mov	r4,r5
   8988c:	dfc00215 	stw	ra,8(sp)
   89890:	80000015 	stw	zero,0(r16)
   89894:	008d6100 	call	8d610 <isatty>
   89898:	00ffffc4 	movi	r3,-1
   8989c:	10c00526 	beq	r2,r3,898b4 <_isatty_r+0x44>
   898a0:	dfc00217 	ldw	ra,8(sp)
   898a4:	dc400117 	ldw	r17,4(sp)
   898a8:	dc000017 	ldw	r16,0(sp)
   898ac:	dec00304 	addi	sp,sp,12
   898b0:	f800283a 	ret
   898b4:	80c00017 	ldw	r3,0(r16)
   898b8:	183ff926 	beq	r3,zero,898a0 <__alt_data_end+0xfffbddb0>
   898bc:	88c00015 	stw	r3,0(r17)
   898c0:	003ff706 	br	898a0 <__alt_data_end+0xfffbddb0>

000898c4 <_lseek_r>:
   898c4:	defffd04 	addi	sp,sp,-12
   898c8:	2805883a 	mov	r2,r5
   898cc:	dc000015 	stw	r16,0(sp)
   898d0:	04000274 	movhi	r16,9
   898d4:	dc400115 	stw	r17,4(sp)
   898d8:	300b883a 	mov	r5,r6
   898dc:	840c7d04 	addi	r16,r16,12788
   898e0:	2023883a 	mov	r17,r4
   898e4:	380d883a 	mov	r6,r7
   898e8:	1009883a 	mov	r4,r2
   898ec:	dfc00215 	stw	ra,8(sp)
   898f0:	80000015 	stw	zero,0(r16)
   898f4:	008d7dc0 	call	8d7dc <lseek>
   898f8:	00ffffc4 	movi	r3,-1
   898fc:	10c00526 	beq	r2,r3,89914 <_lseek_r+0x50>
   89900:	dfc00217 	ldw	ra,8(sp)
   89904:	dc400117 	ldw	r17,4(sp)
   89908:	dc000017 	ldw	r16,0(sp)
   8990c:	dec00304 	addi	sp,sp,12
   89910:	f800283a 	ret
   89914:	80c00017 	ldw	r3,0(r16)
   89918:	183ff926 	beq	r3,zero,89900 <__alt_data_end+0xfffbde10>
   8991c:	88c00015 	stw	r3,0(r17)
   89920:	003ff706 	br	89900 <__alt_data_end+0xfffbde10>

00089924 <_read_r>:
   89924:	defffd04 	addi	sp,sp,-12
   89928:	2805883a 	mov	r2,r5
   8992c:	dc000015 	stw	r16,0(sp)
   89930:	04000274 	movhi	r16,9
   89934:	dc400115 	stw	r17,4(sp)
   89938:	300b883a 	mov	r5,r6
   8993c:	840c7d04 	addi	r16,r16,12788
   89940:	2023883a 	mov	r17,r4
   89944:	380d883a 	mov	r6,r7
   89948:	1009883a 	mov	r4,r2
   8994c:	dfc00215 	stw	ra,8(sp)
   89950:	80000015 	stw	zero,0(r16)
   89954:	008d9b00 	call	8d9b0 <read>
   89958:	00ffffc4 	movi	r3,-1
   8995c:	10c00526 	beq	r2,r3,89974 <_read_r+0x50>
   89960:	dfc00217 	ldw	ra,8(sp)
   89964:	dc400117 	ldw	r17,4(sp)
   89968:	dc000017 	ldw	r16,0(sp)
   8996c:	dec00304 	addi	sp,sp,12
   89970:	f800283a 	ret
   89974:	80c00017 	ldw	r3,0(r16)
   89978:	183ff926 	beq	r3,zero,89960 <__alt_data_end+0xfffbde70>
   8997c:	88c00015 	stw	r3,0(r17)
   89980:	003ff706 	br	89960 <__alt_data_end+0xfffbde70>

00089984 <__swbuf_r>:
   89984:	defffb04 	addi	sp,sp,-20
   89988:	dcc00315 	stw	r19,12(sp)
   8998c:	dc800215 	stw	r18,8(sp)
   89990:	dc000015 	stw	r16,0(sp)
   89994:	dfc00415 	stw	ra,16(sp)
   89998:	dc400115 	stw	r17,4(sp)
   8999c:	2025883a 	mov	r18,r4
   899a0:	2827883a 	mov	r19,r5
   899a4:	3021883a 	mov	r16,r6
   899a8:	20000226 	beq	r4,zero,899b4 <__swbuf_r+0x30>
   899ac:	20800e17 	ldw	r2,56(r4)
   899b0:	10004226 	beq	r2,zero,89abc <__swbuf_r+0x138>
   899b4:	80800617 	ldw	r2,24(r16)
   899b8:	8100030b 	ldhu	r4,12(r16)
   899bc:	80800215 	stw	r2,8(r16)
   899c0:	2080020c 	andi	r2,r4,8
   899c4:	10003626 	beq	r2,zero,89aa0 <__swbuf_r+0x11c>
   899c8:	80c00417 	ldw	r3,16(r16)
   899cc:	18003426 	beq	r3,zero,89aa0 <__swbuf_r+0x11c>
   899d0:	2088000c 	andi	r2,r4,8192
   899d4:	9c403fcc 	andi	r17,r19,255
   899d8:	10001a26 	beq	r2,zero,89a44 <__swbuf_r+0xc0>
   899dc:	80800017 	ldw	r2,0(r16)
   899e0:	81000517 	ldw	r4,20(r16)
   899e4:	10c7c83a 	sub	r3,r2,r3
   899e8:	1900200e 	bge	r3,r4,89a6c <__swbuf_r+0xe8>
   899ec:	18c00044 	addi	r3,r3,1
   899f0:	81000217 	ldw	r4,8(r16)
   899f4:	11400044 	addi	r5,r2,1
   899f8:	81400015 	stw	r5,0(r16)
   899fc:	213fffc4 	addi	r4,r4,-1
   89a00:	81000215 	stw	r4,8(r16)
   89a04:	14c00005 	stb	r19,0(r2)
   89a08:	80800517 	ldw	r2,20(r16)
   89a0c:	10c01e26 	beq	r2,r3,89a88 <__swbuf_r+0x104>
   89a10:	8080030b 	ldhu	r2,12(r16)
   89a14:	1080004c 	andi	r2,r2,1
   89a18:	10000226 	beq	r2,zero,89a24 <__swbuf_r+0xa0>
   89a1c:	00800284 	movi	r2,10
   89a20:	88801926 	beq	r17,r2,89a88 <__swbuf_r+0x104>
   89a24:	8805883a 	mov	r2,r17
   89a28:	dfc00417 	ldw	ra,16(sp)
   89a2c:	dcc00317 	ldw	r19,12(sp)
   89a30:	dc800217 	ldw	r18,8(sp)
   89a34:	dc400117 	ldw	r17,4(sp)
   89a38:	dc000017 	ldw	r16,0(sp)
   89a3c:	dec00504 	addi	sp,sp,20
   89a40:	f800283a 	ret
   89a44:	81401917 	ldw	r5,100(r16)
   89a48:	00b7ffc4 	movi	r2,-8193
   89a4c:	21080014 	ori	r4,r4,8192
   89a50:	2884703a 	and	r2,r5,r2
   89a54:	80801915 	stw	r2,100(r16)
   89a58:	80800017 	ldw	r2,0(r16)
   89a5c:	8100030d 	sth	r4,12(r16)
   89a60:	81000517 	ldw	r4,20(r16)
   89a64:	10c7c83a 	sub	r3,r2,r3
   89a68:	193fe016 	blt	r3,r4,899ec <__alt_data_end+0xfffbdefc>
   89a6c:	800b883a 	mov	r5,r16
   89a70:	9009883a 	mov	r4,r18
   89a74:	00847100 	call	84710 <_fflush_r>
   89a78:	1000071e 	bne	r2,zero,89a98 <__swbuf_r+0x114>
   89a7c:	80800017 	ldw	r2,0(r16)
   89a80:	00c00044 	movi	r3,1
   89a84:	003fda06 	br	899f0 <__alt_data_end+0xfffbdf00>
   89a88:	800b883a 	mov	r5,r16
   89a8c:	9009883a 	mov	r4,r18
   89a90:	00847100 	call	84710 <_fflush_r>
   89a94:	103fe326 	beq	r2,zero,89a24 <__alt_data_end+0xfffbdf34>
   89a98:	00bfffc4 	movi	r2,-1
   89a9c:	003fe206 	br	89a28 <__alt_data_end+0xfffbdf38>
   89aa0:	800b883a 	mov	r5,r16
   89aa4:	9009883a 	mov	r4,r18
   89aa8:	0082b180 	call	82b18 <__swsetup_r>
   89aac:	103ffa1e 	bne	r2,zero,89a98 <__alt_data_end+0xfffbdfa8>
   89ab0:	8100030b 	ldhu	r4,12(r16)
   89ab4:	80c00417 	ldw	r3,16(r16)
   89ab8:	003fc506 	br	899d0 <__alt_data_end+0xfffbdee0>
   89abc:	0084aec0 	call	84aec <__sinit>
   89ac0:	003fbc06 	br	899b4 <__alt_data_end+0xfffbdec4>

00089ac4 <__swbuf>:
   89ac4:	00800274 	movhi	r2,9
   89ac8:	1085a904 	addi	r2,r2,5796
   89acc:	280d883a 	mov	r6,r5
   89ad0:	200b883a 	mov	r5,r4
   89ad4:	11000017 	ldw	r4,0(r2)
   89ad8:	00899841 	jmpi	89984 <__swbuf_r>

00089adc <_wcrtomb_r>:
   89adc:	defff604 	addi	sp,sp,-40
   89ae0:	00800274 	movhi	r2,9
   89ae4:	dc800815 	stw	r18,32(sp)
   89ae8:	dc400715 	stw	r17,28(sp)
   89aec:	dc000615 	stw	r16,24(sp)
   89af0:	1085ad04 	addi	r2,r2,5812
   89af4:	dfc00915 	stw	ra,36(sp)
   89af8:	2021883a 	mov	r16,r4
   89afc:	3823883a 	mov	r17,r7
   89b00:	14800017 	ldw	r18,0(r2)
   89b04:	28001426 	beq	r5,zero,89b58 <_wcrtomb_r+0x7c>
   89b08:	d9400415 	stw	r5,16(sp)
   89b0c:	d9800515 	stw	r6,20(sp)
   89b10:	00856300 	call	85630 <__locale_charset>
   89b14:	d9800517 	ldw	r6,20(sp)
   89b18:	d9400417 	ldw	r5,16(sp)
   89b1c:	100f883a 	mov	r7,r2
   89b20:	dc400015 	stw	r17,0(sp)
   89b24:	8009883a 	mov	r4,r16
   89b28:	903ee83a 	callr	r18
   89b2c:	00ffffc4 	movi	r3,-1
   89b30:	10c0031e 	bne	r2,r3,89b40 <_wcrtomb_r+0x64>
   89b34:	88000015 	stw	zero,0(r17)
   89b38:	00c02284 	movi	r3,138
   89b3c:	80c00015 	stw	r3,0(r16)
   89b40:	dfc00917 	ldw	ra,36(sp)
   89b44:	dc800817 	ldw	r18,32(sp)
   89b48:	dc400717 	ldw	r17,28(sp)
   89b4c:	dc000617 	ldw	r16,24(sp)
   89b50:	dec00a04 	addi	sp,sp,40
   89b54:	f800283a 	ret
   89b58:	00856300 	call	85630 <__locale_charset>
   89b5c:	100f883a 	mov	r7,r2
   89b60:	dc400015 	stw	r17,0(sp)
   89b64:	000d883a 	mov	r6,zero
   89b68:	d9400104 	addi	r5,sp,4
   89b6c:	8009883a 	mov	r4,r16
   89b70:	903ee83a 	callr	r18
   89b74:	003fed06 	br	89b2c <__alt_data_end+0xfffbe03c>

00089b78 <wcrtomb>:
   89b78:	defff604 	addi	sp,sp,-40
   89b7c:	00800274 	movhi	r2,9
   89b80:	dc800615 	stw	r18,24(sp)
   89b84:	dc400515 	stw	r17,20(sp)
   89b88:	1085a904 	addi	r2,r2,5796
   89b8c:	dfc00915 	stw	ra,36(sp)
   89b90:	dd000815 	stw	r20,32(sp)
   89b94:	dcc00715 	stw	r19,28(sp)
   89b98:	dc000415 	stw	r16,16(sp)
   89b9c:	3025883a 	mov	r18,r6
   89ba0:	14400017 	ldw	r17,0(r2)
   89ba4:	20001926 	beq	r4,zero,89c0c <wcrtomb+0x94>
   89ba8:	00800274 	movhi	r2,9
   89bac:	1085ad04 	addi	r2,r2,5812
   89bb0:	15000017 	ldw	r20,0(r2)
   89bb4:	2021883a 	mov	r16,r4
   89bb8:	2827883a 	mov	r19,r5
   89bbc:	00856300 	call	85630 <__locale_charset>
   89bc0:	100f883a 	mov	r7,r2
   89bc4:	dc800015 	stw	r18,0(sp)
   89bc8:	980d883a 	mov	r6,r19
   89bcc:	800b883a 	mov	r5,r16
   89bd0:	8809883a 	mov	r4,r17
   89bd4:	a03ee83a 	callr	r20
   89bd8:	00ffffc4 	movi	r3,-1
   89bdc:	10c0031e 	bne	r2,r3,89bec <wcrtomb+0x74>
   89be0:	90000015 	stw	zero,0(r18)
   89be4:	00c02284 	movi	r3,138
   89be8:	88c00015 	stw	r3,0(r17)
   89bec:	dfc00917 	ldw	ra,36(sp)
   89bf0:	dd000817 	ldw	r20,32(sp)
   89bf4:	dcc00717 	ldw	r19,28(sp)
   89bf8:	dc800617 	ldw	r18,24(sp)
   89bfc:	dc400517 	ldw	r17,20(sp)
   89c00:	dc000417 	ldw	r16,16(sp)
   89c04:	dec00a04 	addi	sp,sp,40
   89c08:	f800283a 	ret
   89c0c:	00800274 	movhi	r2,9
   89c10:	1085ad04 	addi	r2,r2,5812
   89c14:	14000017 	ldw	r16,0(r2)
   89c18:	00856300 	call	85630 <__locale_charset>
   89c1c:	100f883a 	mov	r7,r2
   89c20:	dc800015 	stw	r18,0(sp)
   89c24:	000d883a 	mov	r6,zero
   89c28:	d9400104 	addi	r5,sp,4
   89c2c:	8809883a 	mov	r4,r17
   89c30:	803ee83a 	callr	r16
   89c34:	003fe806 	br	89bd8 <__alt_data_end+0xfffbe0e8>

00089c38 <__ascii_wctomb>:
   89c38:	28000526 	beq	r5,zero,89c50 <__ascii_wctomb+0x18>
   89c3c:	00803fc4 	movi	r2,255
   89c40:	11800536 	bltu	r2,r6,89c58 <__ascii_wctomb+0x20>
   89c44:	29800005 	stb	r6,0(r5)
   89c48:	00800044 	movi	r2,1
   89c4c:	f800283a 	ret
   89c50:	0005883a 	mov	r2,zero
   89c54:	f800283a 	ret
   89c58:	00802284 	movi	r2,138
   89c5c:	20800015 	stw	r2,0(r4)
   89c60:	00bfffc4 	movi	r2,-1
   89c64:	f800283a 	ret

00089c68 <_wctomb_r>:
   89c68:	00800274 	movhi	r2,9
   89c6c:	defff904 	addi	sp,sp,-28
   89c70:	1085ad04 	addi	r2,r2,5812
   89c74:	dfc00615 	stw	ra,24(sp)
   89c78:	dc400515 	stw	r17,20(sp)
   89c7c:	dc000415 	stw	r16,16(sp)
   89c80:	3823883a 	mov	r17,r7
   89c84:	14000017 	ldw	r16,0(r2)
   89c88:	d9000115 	stw	r4,4(sp)
   89c8c:	d9400215 	stw	r5,8(sp)
   89c90:	d9800315 	stw	r6,12(sp)
   89c94:	00856300 	call	85630 <__locale_charset>
   89c98:	d9800317 	ldw	r6,12(sp)
   89c9c:	d9400217 	ldw	r5,8(sp)
   89ca0:	d9000117 	ldw	r4,4(sp)
   89ca4:	100f883a 	mov	r7,r2
   89ca8:	dc400015 	stw	r17,0(sp)
   89cac:	803ee83a 	callr	r16
   89cb0:	dfc00617 	ldw	ra,24(sp)
   89cb4:	dc400517 	ldw	r17,20(sp)
   89cb8:	dc000417 	ldw	r16,16(sp)
   89cbc:	dec00704 	addi	sp,sp,28
   89cc0:	f800283a 	ret

00089cc4 <__udivdi3>:
   89cc4:	defff504 	addi	sp,sp,-44
   89cc8:	dcc00415 	stw	r19,16(sp)
   89ccc:	dc000115 	stw	r16,4(sp)
   89cd0:	dfc00a15 	stw	ra,40(sp)
   89cd4:	df000915 	stw	fp,36(sp)
   89cd8:	ddc00815 	stw	r23,32(sp)
   89cdc:	dd800715 	stw	r22,28(sp)
   89ce0:	dd400615 	stw	r21,24(sp)
   89ce4:	dd000515 	stw	r20,20(sp)
   89ce8:	dc800315 	stw	r18,12(sp)
   89cec:	dc400215 	stw	r17,8(sp)
   89cf0:	2027883a 	mov	r19,r4
   89cf4:	2821883a 	mov	r16,r5
   89cf8:	3800411e 	bne	r7,zero,89e00 <__udivdi3+0x13c>
   89cfc:	3023883a 	mov	r17,r6
   89d00:	2025883a 	mov	r18,r4
   89d04:	2980522e 	bgeu	r5,r6,89e50 <__udivdi3+0x18c>
   89d08:	00bfffd4 	movui	r2,65535
   89d0c:	282d883a 	mov	r22,r5
   89d10:	1180a836 	bltu	r2,r6,89fb4 <__udivdi3+0x2f0>
   89d14:	00803fc4 	movi	r2,255
   89d18:	1185803a 	cmpltu	r2,r2,r6
   89d1c:	100490fa 	slli	r2,r2,3
   89d20:	3086d83a 	srl	r3,r6,r2
   89d24:	01000274 	movhi	r4,9
   89d28:	213eb104 	addi	r4,r4,-1340
   89d2c:	20c7883a 	add	r3,r4,r3
   89d30:	18c00003 	ldbu	r3,0(r3)
   89d34:	1885883a 	add	r2,r3,r2
   89d38:	00c00804 	movi	r3,32
   89d3c:	1887c83a 	sub	r3,r3,r2
   89d40:	18000526 	beq	r3,zero,89d58 <__udivdi3+0x94>
   89d44:	80e0983a 	sll	r16,r16,r3
   89d48:	9884d83a 	srl	r2,r19,r2
   89d4c:	30e2983a 	sll	r17,r6,r3
   89d50:	98e4983a 	sll	r18,r19,r3
   89d54:	142cb03a 	or	r22,r2,r16
   89d58:	882ad43a 	srli	r21,r17,16
   89d5c:	b009883a 	mov	r4,r22
   89d60:	8d3fffcc 	andi	r20,r17,65535
   89d64:	a80b883a 	mov	r5,r21
   89d68:	008a8d00 	call	8a8d0 <__umodsi3>
   89d6c:	b009883a 	mov	r4,r22
   89d70:	a80b883a 	mov	r5,r21
   89d74:	1027883a 	mov	r19,r2
   89d78:	008a86c0 	call	8a86c <__udivsi3>
   89d7c:	102d883a 	mov	r22,r2
   89d80:	9826943a 	slli	r19,r19,16
   89d84:	9004d43a 	srli	r2,r18,16
   89d88:	a5a1383a 	mul	r16,r20,r22
   89d8c:	14c4b03a 	or	r2,r2,r19
   89d90:	1400052e 	bgeu	r2,r16,89da8 <__udivdi3+0xe4>
   89d94:	1445883a 	add	r2,r2,r17
   89d98:	b0ffffc4 	addi	r3,r22,-1
   89d9c:	14400136 	bltu	r2,r17,89da4 <__udivdi3+0xe0>
   89da0:	14012336 	bltu	r2,r16,8a230 <__udivdi3+0x56c>
   89da4:	182d883a 	mov	r22,r3
   89da8:	1421c83a 	sub	r16,r2,r16
   89dac:	a80b883a 	mov	r5,r21
   89db0:	8009883a 	mov	r4,r16
   89db4:	008a8d00 	call	8a8d0 <__umodsi3>
   89db8:	1027883a 	mov	r19,r2
   89dbc:	a80b883a 	mov	r5,r21
   89dc0:	8009883a 	mov	r4,r16
   89dc4:	008a86c0 	call	8a86c <__udivsi3>
   89dc8:	9826943a 	slli	r19,r19,16
   89dcc:	a0a9383a 	mul	r20,r20,r2
   89dd0:	94bfffcc 	andi	r18,r18,65535
   89dd4:	94e4b03a 	or	r18,r18,r19
   89dd8:	9500052e 	bgeu	r18,r20,89df0 <__udivdi3+0x12c>
   89ddc:	8ca5883a 	add	r18,r17,r18
   89de0:	10ffffc4 	addi	r3,r2,-1
   89de4:	9440f136 	bltu	r18,r17,8a1ac <__udivdi3+0x4e8>
   89de8:	9500f02e 	bgeu	r18,r20,8a1ac <__udivdi3+0x4e8>
   89dec:	10bfff84 	addi	r2,r2,-2
   89df0:	b00c943a 	slli	r6,r22,16
   89df4:	0007883a 	mov	r3,zero
   89df8:	3084b03a 	or	r2,r6,r2
   89dfc:	00005906 	br	89f64 <__udivdi3+0x2a0>
   89e00:	29c05636 	bltu	r5,r7,89f5c <__udivdi3+0x298>
   89e04:	00bfffd4 	movui	r2,65535
   89e08:	11c0622e 	bgeu	r2,r7,89f94 <__udivdi3+0x2d0>
   89e0c:	00804034 	movhi	r2,256
   89e10:	10bfffc4 	addi	r2,r2,-1
   89e14:	11c0ee36 	bltu	r2,r7,8a1d0 <__udivdi3+0x50c>
   89e18:	00800404 	movi	r2,16
   89e1c:	3886d83a 	srl	r3,r7,r2
   89e20:	01000274 	movhi	r4,9
   89e24:	213eb104 	addi	r4,r4,-1340
   89e28:	20c7883a 	add	r3,r4,r3
   89e2c:	18c00003 	ldbu	r3,0(r3)
   89e30:	05400804 	movi	r21,32
   89e34:	1885883a 	add	r2,r3,r2
   89e38:	a8abc83a 	sub	r21,r21,r2
   89e3c:	a800621e 	bne	r21,zero,89fc8 <__udivdi3+0x304>
   89e40:	3c00e936 	bltu	r7,r16,8a1e8 <__udivdi3+0x524>
   89e44:	9985403a 	cmpgeu	r2,r19,r6
   89e48:	0007883a 	mov	r3,zero
   89e4c:	00004506 	br	89f64 <__udivdi3+0x2a0>
   89e50:	3000041e 	bne	r6,zero,89e64 <__udivdi3+0x1a0>
   89e54:	000b883a 	mov	r5,zero
   89e58:	01000044 	movi	r4,1
   89e5c:	008a86c0 	call	8a86c <__udivsi3>
   89e60:	1023883a 	mov	r17,r2
   89e64:	00bfffd4 	movui	r2,65535
   89e68:	14404e2e 	bgeu	r2,r17,89fa4 <__udivdi3+0x2e0>
   89e6c:	00804034 	movhi	r2,256
   89e70:	10bfffc4 	addi	r2,r2,-1
   89e74:	1440d836 	bltu	r2,r17,8a1d8 <__udivdi3+0x514>
   89e78:	00800404 	movi	r2,16
   89e7c:	8886d83a 	srl	r3,r17,r2
   89e80:	01000274 	movhi	r4,9
   89e84:	213eb104 	addi	r4,r4,-1340
   89e88:	20c7883a 	add	r3,r4,r3
   89e8c:	18c00003 	ldbu	r3,0(r3)
   89e90:	1885883a 	add	r2,r3,r2
   89e94:	00c00804 	movi	r3,32
   89e98:	1887c83a 	sub	r3,r3,r2
   89e9c:	18008f1e 	bne	r3,zero,8a0dc <__udivdi3+0x418>
   89ea0:	882ad43a 	srli	r21,r17,16
   89ea4:	8461c83a 	sub	r16,r16,r17
   89ea8:	8d3fffcc 	andi	r20,r17,65535
   89eac:	00c00044 	movi	r3,1
   89eb0:	8009883a 	mov	r4,r16
   89eb4:	a80b883a 	mov	r5,r21
   89eb8:	d8c00015 	stw	r3,0(sp)
   89ebc:	008a8d00 	call	8a8d0 <__umodsi3>
   89ec0:	8009883a 	mov	r4,r16
   89ec4:	a80b883a 	mov	r5,r21
   89ec8:	1027883a 	mov	r19,r2
   89ecc:	008a86c0 	call	8a86c <__udivsi3>
   89ed0:	9826943a 	slli	r19,r19,16
   89ed4:	9008d43a 	srli	r4,r18,16
   89ed8:	1521383a 	mul	r16,r2,r20
   89edc:	102d883a 	mov	r22,r2
   89ee0:	24c8b03a 	or	r4,r4,r19
   89ee4:	d8c00017 	ldw	r3,0(sp)
   89ee8:	2400052e 	bgeu	r4,r16,89f00 <__udivdi3+0x23c>
   89eec:	2449883a 	add	r4,r4,r17
   89ef0:	b0bfffc4 	addi	r2,r22,-1
   89ef4:	24400136 	bltu	r4,r17,89efc <__udivdi3+0x238>
   89ef8:	2400ca36 	bltu	r4,r16,8a224 <__udivdi3+0x560>
   89efc:	102d883a 	mov	r22,r2
   89f00:	2421c83a 	sub	r16,r4,r16
   89f04:	a80b883a 	mov	r5,r21
   89f08:	8009883a 	mov	r4,r16
   89f0c:	d8c00015 	stw	r3,0(sp)
   89f10:	008a8d00 	call	8a8d0 <__umodsi3>
   89f14:	1027883a 	mov	r19,r2
   89f18:	a80b883a 	mov	r5,r21
   89f1c:	8009883a 	mov	r4,r16
   89f20:	008a86c0 	call	8a86c <__udivsi3>
   89f24:	9826943a 	slli	r19,r19,16
   89f28:	1529383a 	mul	r20,r2,r20
   89f2c:	94bfffcc 	andi	r18,r18,65535
   89f30:	94e4b03a 	or	r18,r18,r19
   89f34:	d8c00017 	ldw	r3,0(sp)
   89f38:	9500052e 	bgeu	r18,r20,89f50 <__udivdi3+0x28c>
   89f3c:	8ca5883a 	add	r18,r17,r18
   89f40:	113fffc4 	addi	r4,r2,-1
   89f44:	94409736 	bltu	r18,r17,8a1a4 <__udivdi3+0x4e0>
   89f48:	9500962e 	bgeu	r18,r20,8a1a4 <__udivdi3+0x4e0>
   89f4c:	10bfff84 	addi	r2,r2,-2
   89f50:	b00c943a 	slli	r6,r22,16
   89f54:	3084b03a 	or	r2,r6,r2
   89f58:	00000206 	br	89f64 <__udivdi3+0x2a0>
   89f5c:	0007883a 	mov	r3,zero
   89f60:	0005883a 	mov	r2,zero
   89f64:	dfc00a17 	ldw	ra,40(sp)
   89f68:	df000917 	ldw	fp,36(sp)
   89f6c:	ddc00817 	ldw	r23,32(sp)
   89f70:	dd800717 	ldw	r22,28(sp)
   89f74:	dd400617 	ldw	r21,24(sp)
   89f78:	dd000517 	ldw	r20,20(sp)
   89f7c:	dcc00417 	ldw	r19,16(sp)
   89f80:	dc800317 	ldw	r18,12(sp)
   89f84:	dc400217 	ldw	r17,8(sp)
   89f88:	dc000117 	ldw	r16,4(sp)
   89f8c:	dec00b04 	addi	sp,sp,44
   89f90:	f800283a 	ret
   89f94:	00803fc4 	movi	r2,255
   89f98:	11c5803a 	cmpltu	r2,r2,r7
   89f9c:	100490fa 	slli	r2,r2,3
   89fa0:	003f9e06 	br	89e1c <__alt_data_end+0xfffbe32c>
   89fa4:	00803fc4 	movi	r2,255
   89fa8:	1445803a 	cmpltu	r2,r2,r17
   89fac:	100490fa 	slli	r2,r2,3
   89fb0:	003fb206 	br	89e7c <__alt_data_end+0xfffbe38c>
   89fb4:	00804034 	movhi	r2,256
   89fb8:	10bfffc4 	addi	r2,r2,-1
   89fbc:	11808836 	bltu	r2,r6,8a1e0 <__udivdi3+0x51c>
   89fc0:	00800404 	movi	r2,16
   89fc4:	003f5606 	br	89d20 <__alt_data_end+0xfffbe230>
   89fc8:	30aed83a 	srl	r23,r6,r2
   89fcc:	3d4e983a 	sll	r7,r7,r21
   89fd0:	80acd83a 	srl	r22,r16,r2
   89fd4:	9884d83a 	srl	r2,r19,r2
   89fd8:	3deeb03a 	or	r23,r7,r23
   89fdc:	b824d43a 	srli	r18,r23,16
   89fe0:	8560983a 	sll	r16,r16,r21
   89fe4:	b009883a 	mov	r4,r22
   89fe8:	900b883a 	mov	r5,r18
   89fec:	3568983a 	sll	r20,r6,r21
   89ff0:	1420b03a 	or	r16,r2,r16
   89ff4:	008a8d00 	call	8a8d0 <__umodsi3>
   89ff8:	b009883a 	mov	r4,r22
   89ffc:	900b883a 	mov	r5,r18
   8a000:	1023883a 	mov	r17,r2
   8a004:	008a86c0 	call	8a86c <__udivsi3>
   8a008:	8808943a 	slli	r4,r17,16
   8a00c:	bf3fffcc 	andi	fp,r23,65535
   8a010:	8006d43a 	srli	r3,r16,16
   8a014:	e0a3383a 	mul	r17,fp,r2
   8a018:	100d883a 	mov	r6,r2
   8a01c:	1906b03a 	or	r3,r3,r4
   8a020:	1c40042e 	bgeu	r3,r17,8a034 <__udivdi3+0x370>
   8a024:	1dc7883a 	add	r3,r3,r23
   8a028:	10bfffc4 	addi	r2,r2,-1
   8a02c:	1dc0752e 	bgeu	r3,r23,8a204 <__udivdi3+0x540>
   8a030:	100d883a 	mov	r6,r2
   8a034:	1c63c83a 	sub	r17,r3,r17
   8a038:	900b883a 	mov	r5,r18
   8a03c:	8809883a 	mov	r4,r17
   8a040:	d9800015 	stw	r6,0(sp)
   8a044:	008a8d00 	call	8a8d0 <__umodsi3>
   8a048:	102d883a 	mov	r22,r2
   8a04c:	8809883a 	mov	r4,r17
   8a050:	900b883a 	mov	r5,r18
   8a054:	008a86c0 	call	8a86c <__udivsi3>
   8a058:	b02c943a 	slli	r22,r22,16
   8a05c:	e089383a 	mul	r4,fp,r2
   8a060:	843fffcc 	andi	r16,r16,65535
   8a064:	85a0b03a 	or	r16,r16,r22
   8a068:	d9800017 	ldw	r6,0(sp)
   8a06c:	8100042e 	bgeu	r16,r4,8a080 <__udivdi3+0x3bc>
   8a070:	85e1883a 	add	r16,r16,r23
   8a074:	10ffffc4 	addi	r3,r2,-1
   8a078:	85c05e2e 	bgeu	r16,r23,8a1f4 <__udivdi3+0x530>
   8a07c:	1805883a 	mov	r2,r3
   8a080:	300c943a 	slli	r6,r6,16
   8a084:	a17fffcc 	andi	r5,r20,65535
   8a088:	a028d43a 	srli	r20,r20,16
   8a08c:	3084b03a 	or	r2,r6,r2
   8a090:	10ffffcc 	andi	r3,r2,65535
   8a094:	100cd43a 	srli	r6,r2,16
   8a098:	194f383a 	mul	r7,r3,r5
   8a09c:	1d07383a 	mul	r3,r3,r20
   8a0a0:	314b383a 	mul	r5,r6,r5
   8a0a4:	3810d43a 	srli	r8,r7,16
   8a0a8:	8121c83a 	sub	r16,r16,r4
   8a0ac:	1947883a 	add	r3,r3,r5
   8a0b0:	40c7883a 	add	r3,r8,r3
   8a0b4:	350d383a 	mul	r6,r6,r20
   8a0b8:	1940022e 	bgeu	r3,r5,8a0c4 <__udivdi3+0x400>
   8a0bc:	01000074 	movhi	r4,1
   8a0c0:	310d883a 	add	r6,r6,r4
   8a0c4:	1828d43a 	srli	r20,r3,16
   8a0c8:	a18d883a 	add	r6,r20,r6
   8a0cc:	81803e36 	bltu	r16,r6,8a1c8 <__udivdi3+0x504>
   8a0d0:	81803826 	beq	r16,r6,8a1b4 <__udivdi3+0x4f0>
   8a0d4:	0007883a 	mov	r3,zero
   8a0d8:	003fa206 	br	89f64 <__alt_data_end+0xfffbe474>
   8a0dc:	88e2983a 	sll	r17,r17,r3
   8a0e0:	80a8d83a 	srl	r20,r16,r2
   8a0e4:	80e0983a 	sll	r16,r16,r3
   8a0e8:	882ad43a 	srli	r21,r17,16
   8a0ec:	9884d83a 	srl	r2,r19,r2
   8a0f0:	a009883a 	mov	r4,r20
   8a0f4:	a80b883a 	mov	r5,r21
   8a0f8:	142eb03a 	or	r23,r2,r16
   8a0fc:	98e4983a 	sll	r18,r19,r3
   8a100:	008a8d00 	call	8a8d0 <__umodsi3>
   8a104:	a009883a 	mov	r4,r20
   8a108:	a80b883a 	mov	r5,r21
   8a10c:	1021883a 	mov	r16,r2
   8a110:	008a86c0 	call	8a86c <__udivsi3>
   8a114:	1039883a 	mov	fp,r2
   8a118:	8d3fffcc 	andi	r20,r17,65535
   8a11c:	8020943a 	slli	r16,r16,16
   8a120:	b804d43a 	srli	r2,r23,16
   8a124:	a72d383a 	mul	r22,r20,fp
   8a128:	1404b03a 	or	r2,r2,r16
   8a12c:	1580062e 	bgeu	r2,r22,8a148 <__udivdi3+0x484>
   8a130:	1445883a 	add	r2,r2,r17
   8a134:	e0ffffc4 	addi	r3,fp,-1
   8a138:	14403836 	bltu	r2,r17,8a21c <__udivdi3+0x558>
   8a13c:	1580372e 	bgeu	r2,r22,8a21c <__udivdi3+0x558>
   8a140:	e73fff84 	addi	fp,fp,-2
   8a144:	1445883a 	add	r2,r2,r17
   8a148:	15adc83a 	sub	r22,r2,r22
   8a14c:	a80b883a 	mov	r5,r21
   8a150:	b009883a 	mov	r4,r22
   8a154:	008a8d00 	call	8a8d0 <__umodsi3>
   8a158:	1027883a 	mov	r19,r2
   8a15c:	b009883a 	mov	r4,r22
   8a160:	a80b883a 	mov	r5,r21
   8a164:	008a86c0 	call	8a86c <__udivsi3>
   8a168:	9826943a 	slli	r19,r19,16
   8a16c:	a0a1383a 	mul	r16,r20,r2
   8a170:	b93fffcc 	andi	r4,r23,65535
   8a174:	24c8b03a 	or	r4,r4,r19
   8a178:	2400062e 	bgeu	r4,r16,8a194 <__udivdi3+0x4d0>
   8a17c:	2449883a 	add	r4,r4,r17
   8a180:	10ffffc4 	addi	r3,r2,-1
   8a184:	24402336 	bltu	r4,r17,8a214 <__udivdi3+0x550>
   8a188:	2400222e 	bgeu	r4,r16,8a214 <__udivdi3+0x550>
   8a18c:	10bfff84 	addi	r2,r2,-2
   8a190:	2449883a 	add	r4,r4,r17
   8a194:	e038943a 	slli	fp,fp,16
   8a198:	2421c83a 	sub	r16,r4,r16
   8a19c:	e086b03a 	or	r3,fp,r2
   8a1a0:	003f4306 	br	89eb0 <__alt_data_end+0xfffbe3c0>
   8a1a4:	2005883a 	mov	r2,r4
   8a1a8:	003f6906 	br	89f50 <__alt_data_end+0xfffbe460>
   8a1ac:	1805883a 	mov	r2,r3
   8a1b0:	003f0f06 	br	89df0 <__alt_data_end+0xfffbe300>
   8a1b4:	1806943a 	slli	r3,r3,16
   8a1b8:	9d66983a 	sll	r19,r19,r21
   8a1bc:	39ffffcc 	andi	r7,r7,65535
   8a1c0:	19c7883a 	add	r3,r3,r7
   8a1c4:	98ffc32e 	bgeu	r19,r3,8a0d4 <__alt_data_end+0xfffbe5e4>
   8a1c8:	10bfffc4 	addi	r2,r2,-1
   8a1cc:	003fc106 	br	8a0d4 <__alt_data_end+0xfffbe5e4>
   8a1d0:	00800604 	movi	r2,24
   8a1d4:	003f1106 	br	89e1c <__alt_data_end+0xfffbe32c>
   8a1d8:	00800604 	movi	r2,24
   8a1dc:	003f2706 	br	89e7c <__alt_data_end+0xfffbe38c>
   8a1e0:	00800604 	movi	r2,24
   8a1e4:	003ece06 	br	89d20 <__alt_data_end+0xfffbe230>
   8a1e8:	0007883a 	mov	r3,zero
   8a1ec:	00800044 	movi	r2,1
   8a1f0:	003f5c06 	br	89f64 <__alt_data_end+0xfffbe474>
   8a1f4:	813fa12e 	bgeu	r16,r4,8a07c <__alt_data_end+0xfffbe58c>
   8a1f8:	10bfff84 	addi	r2,r2,-2
   8a1fc:	85e1883a 	add	r16,r16,r23
   8a200:	003f9f06 	br	8a080 <__alt_data_end+0xfffbe590>
   8a204:	1c7f8a2e 	bgeu	r3,r17,8a030 <__alt_data_end+0xfffbe540>
   8a208:	31bfff84 	addi	r6,r6,-2
   8a20c:	1dc7883a 	add	r3,r3,r23
   8a210:	003f8806 	br	8a034 <__alt_data_end+0xfffbe544>
   8a214:	1805883a 	mov	r2,r3
   8a218:	003fde06 	br	8a194 <__alt_data_end+0xfffbe6a4>
   8a21c:	1839883a 	mov	fp,r3
   8a220:	003fc906 	br	8a148 <__alt_data_end+0xfffbe658>
   8a224:	b5bfff84 	addi	r22,r22,-2
   8a228:	2449883a 	add	r4,r4,r17
   8a22c:	003f3406 	br	89f00 <__alt_data_end+0xfffbe410>
   8a230:	b5bfff84 	addi	r22,r22,-2
   8a234:	1445883a 	add	r2,r2,r17
   8a238:	003edb06 	br	89da8 <__alt_data_end+0xfffbe2b8>

0008a23c <__umoddi3>:
   8a23c:	defff404 	addi	sp,sp,-48
   8a240:	df000a15 	stw	fp,40(sp)
   8a244:	dc400315 	stw	r17,12(sp)
   8a248:	dc000215 	stw	r16,8(sp)
   8a24c:	dfc00b15 	stw	ra,44(sp)
   8a250:	ddc00915 	stw	r23,36(sp)
   8a254:	dd800815 	stw	r22,32(sp)
   8a258:	dd400715 	stw	r21,28(sp)
   8a25c:	dd000615 	stw	r20,24(sp)
   8a260:	dcc00515 	stw	r19,20(sp)
   8a264:	dc800415 	stw	r18,16(sp)
   8a268:	2021883a 	mov	r16,r4
   8a26c:	2823883a 	mov	r17,r5
   8a270:	2839883a 	mov	fp,r5
   8a274:	38003c1e 	bne	r7,zero,8a368 <__umoddi3+0x12c>
   8a278:	3027883a 	mov	r19,r6
   8a27c:	2029883a 	mov	r20,r4
   8a280:	2980512e 	bgeu	r5,r6,8a3c8 <__umoddi3+0x18c>
   8a284:	00bfffd4 	movui	r2,65535
   8a288:	11809a36 	bltu	r2,r6,8a4f4 <__umoddi3+0x2b8>
   8a28c:	01003fc4 	movi	r4,255
   8a290:	2189803a 	cmpltu	r4,r4,r6
   8a294:	200890fa 	slli	r4,r4,3
   8a298:	3104d83a 	srl	r2,r6,r4
   8a29c:	00c00274 	movhi	r3,9
   8a2a0:	18feb104 	addi	r3,r3,-1340
   8a2a4:	1885883a 	add	r2,r3,r2
   8a2a8:	10c00003 	ldbu	r3,0(r2)
   8a2ac:	00800804 	movi	r2,32
   8a2b0:	1909883a 	add	r4,r3,r4
   8a2b4:	1125c83a 	sub	r18,r2,r4
   8a2b8:	90000526 	beq	r18,zero,8a2d0 <__umoddi3+0x94>
   8a2bc:	8ca2983a 	sll	r17,r17,r18
   8a2c0:	8108d83a 	srl	r4,r16,r4
   8a2c4:	34a6983a 	sll	r19,r6,r18
   8a2c8:	84a8983a 	sll	r20,r16,r18
   8a2cc:	2478b03a 	or	fp,r4,r17
   8a2d0:	982ed43a 	srli	r23,r19,16
   8a2d4:	e009883a 	mov	r4,fp
   8a2d8:	9dbfffcc 	andi	r22,r19,65535
   8a2dc:	b80b883a 	mov	r5,r23
   8a2e0:	008a8d00 	call	8a8d0 <__umodsi3>
   8a2e4:	e009883a 	mov	r4,fp
   8a2e8:	b80b883a 	mov	r5,r23
   8a2ec:	102b883a 	mov	r21,r2
   8a2f0:	008a86c0 	call	8a86c <__udivsi3>
   8a2f4:	a806943a 	slli	r3,r21,16
   8a2f8:	a008d43a 	srli	r4,r20,16
   8a2fc:	b085383a 	mul	r2,r22,r2
   8a300:	20c8b03a 	or	r4,r4,r3
   8a304:	2080032e 	bgeu	r4,r2,8a314 <__umoddi3+0xd8>
   8a308:	24c9883a 	add	r4,r4,r19
   8a30c:	24c00136 	bltu	r4,r19,8a314 <__umoddi3+0xd8>
   8a310:	20811036 	bltu	r4,r2,8a754 <__umoddi3+0x518>
   8a314:	20abc83a 	sub	r21,r4,r2
   8a318:	b80b883a 	mov	r5,r23
   8a31c:	a809883a 	mov	r4,r21
   8a320:	008a8d00 	call	8a8d0 <__umodsi3>
   8a324:	1023883a 	mov	r17,r2
   8a328:	b80b883a 	mov	r5,r23
   8a32c:	a809883a 	mov	r4,r21
   8a330:	008a86c0 	call	8a86c <__udivsi3>
   8a334:	8822943a 	slli	r17,r17,16
   8a338:	b085383a 	mul	r2,r22,r2
   8a33c:	a0ffffcc 	andi	r3,r20,65535
   8a340:	1c46b03a 	or	r3,r3,r17
   8a344:	1880042e 	bgeu	r3,r2,8a358 <__umoddi3+0x11c>
   8a348:	1cc7883a 	add	r3,r3,r19
   8a34c:	1cc00236 	bltu	r3,r19,8a358 <__umoddi3+0x11c>
   8a350:	1880012e 	bgeu	r3,r2,8a358 <__umoddi3+0x11c>
   8a354:	1cc7883a 	add	r3,r3,r19
   8a358:	1885c83a 	sub	r2,r3,r2
   8a35c:	1484d83a 	srl	r2,r2,r18
   8a360:	0007883a 	mov	r3,zero
   8a364:	00004f06 	br	8a4a4 <__umoddi3+0x268>
   8a368:	29c04c36 	bltu	r5,r7,8a49c <__umoddi3+0x260>
   8a36c:	00bfffd4 	movui	r2,65535
   8a370:	11c0582e 	bgeu	r2,r7,8a4d4 <__umoddi3+0x298>
   8a374:	00804034 	movhi	r2,256
   8a378:	10bfffc4 	addi	r2,r2,-1
   8a37c:	11c0e736 	bltu	r2,r7,8a71c <__umoddi3+0x4e0>
   8a380:	01000404 	movi	r4,16
   8a384:	3904d83a 	srl	r2,r7,r4
   8a388:	00c00274 	movhi	r3,9
   8a38c:	18feb104 	addi	r3,r3,-1340
   8a390:	1885883a 	add	r2,r3,r2
   8a394:	14c00003 	ldbu	r19,0(r2)
   8a398:	00c00804 	movi	r3,32
   8a39c:	9927883a 	add	r19,r19,r4
   8a3a0:	1ce9c83a 	sub	r20,r3,r19
   8a3a4:	a000581e 	bne	r20,zero,8a508 <__umoddi3+0x2cc>
   8a3a8:	3c400136 	bltu	r7,r17,8a3b0 <__umoddi3+0x174>
   8a3ac:	8180eb36 	bltu	r16,r6,8a75c <__umoddi3+0x520>
   8a3b0:	8185c83a 	sub	r2,r16,r6
   8a3b4:	89e3c83a 	sub	r17,r17,r7
   8a3b8:	8089803a 	cmpltu	r4,r16,r2
   8a3bc:	8939c83a 	sub	fp,r17,r4
   8a3c0:	e007883a 	mov	r3,fp
   8a3c4:	00003706 	br	8a4a4 <__umoddi3+0x268>
   8a3c8:	3000041e 	bne	r6,zero,8a3dc <__umoddi3+0x1a0>
   8a3cc:	000b883a 	mov	r5,zero
   8a3d0:	01000044 	movi	r4,1
   8a3d4:	008a86c0 	call	8a86c <__udivsi3>
   8a3d8:	1027883a 	mov	r19,r2
   8a3dc:	00bfffd4 	movui	r2,65535
   8a3e0:	14c0402e 	bgeu	r2,r19,8a4e4 <__umoddi3+0x2a8>
   8a3e4:	00804034 	movhi	r2,256
   8a3e8:	10bfffc4 	addi	r2,r2,-1
   8a3ec:	14c0cd36 	bltu	r2,r19,8a724 <__umoddi3+0x4e8>
   8a3f0:	00800404 	movi	r2,16
   8a3f4:	9886d83a 	srl	r3,r19,r2
   8a3f8:	01000274 	movhi	r4,9
   8a3fc:	213eb104 	addi	r4,r4,-1340
   8a400:	20c7883a 	add	r3,r4,r3
   8a404:	18c00003 	ldbu	r3,0(r3)
   8a408:	1887883a 	add	r3,r3,r2
   8a40c:	00800804 	movi	r2,32
   8a410:	10e5c83a 	sub	r18,r2,r3
   8a414:	9000901e 	bne	r18,zero,8a658 <__umoddi3+0x41c>
   8a418:	982cd43a 	srli	r22,r19,16
   8a41c:	8ce3c83a 	sub	r17,r17,r19
   8a420:	9d7fffcc 	andi	r21,r19,65535
   8a424:	b00b883a 	mov	r5,r22
   8a428:	8809883a 	mov	r4,r17
   8a42c:	008a8d00 	call	8a8d0 <__umodsi3>
   8a430:	8809883a 	mov	r4,r17
   8a434:	b00b883a 	mov	r5,r22
   8a438:	1021883a 	mov	r16,r2
   8a43c:	008a86c0 	call	8a86c <__udivsi3>
   8a440:	8006943a 	slli	r3,r16,16
   8a444:	a008d43a 	srli	r4,r20,16
   8a448:	1545383a 	mul	r2,r2,r21
   8a44c:	20c8b03a 	or	r4,r4,r3
   8a450:	2080042e 	bgeu	r4,r2,8a464 <__umoddi3+0x228>
   8a454:	24c9883a 	add	r4,r4,r19
   8a458:	24c00236 	bltu	r4,r19,8a464 <__umoddi3+0x228>
   8a45c:	2080012e 	bgeu	r4,r2,8a464 <__umoddi3+0x228>
   8a460:	24c9883a 	add	r4,r4,r19
   8a464:	20a1c83a 	sub	r16,r4,r2
   8a468:	b00b883a 	mov	r5,r22
   8a46c:	8009883a 	mov	r4,r16
   8a470:	008a8d00 	call	8a8d0 <__umodsi3>
   8a474:	1023883a 	mov	r17,r2
   8a478:	b00b883a 	mov	r5,r22
   8a47c:	8009883a 	mov	r4,r16
   8a480:	008a86c0 	call	8a86c <__udivsi3>
   8a484:	8822943a 	slli	r17,r17,16
   8a488:	1545383a 	mul	r2,r2,r21
   8a48c:	a53fffcc 	andi	r20,r20,65535
   8a490:	a446b03a 	or	r3,r20,r17
   8a494:	18bfb02e 	bgeu	r3,r2,8a358 <__alt_data_end+0xfffbe868>
   8a498:	003fab06 	br	8a348 <__alt_data_end+0xfffbe858>
   8a49c:	2005883a 	mov	r2,r4
   8a4a0:	2807883a 	mov	r3,r5
   8a4a4:	dfc00b17 	ldw	ra,44(sp)
   8a4a8:	df000a17 	ldw	fp,40(sp)
   8a4ac:	ddc00917 	ldw	r23,36(sp)
   8a4b0:	dd800817 	ldw	r22,32(sp)
   8a4b4:	dd400717 	ldw	r21,28(sp)
   8a4b8:	dd000617 	ldw	r20,24(sp)
   8a4bc:	dcc00517 	ldw	r19,20(sp)
   8a4c0:	dc800417 	ldw	r18,16(sp)
   8a4c4:	dc400317 	ldw	r17,12(sp)
   8a4c8:	dc000217 	ldw	r16,8(sp)
   8a4cc:	dec00c04 	addi	sp,sp,48
   8a4d0:	f800283a 	ret
   8a4d4:	04c03fc4 	movi	r19,255
   8a4d8:	99c9803a 	cmpltu	r4,r19,r7
   8a4dc:	200890fa 	slli	r4,r4,3
   8a4e0:	003fa806 	br	8a384 <__alt_data_end+0xfffbe894>
   8a4e4:	00803fc4 	movi	r2,255
   8a4e8:	14c5803a 	cmpltu	r2,r2,r19
   8a4ec:	100490fa 	slli	r2,r2,3
   8a4f0:	003fc006 	br	8a3f4 <__alt_data_end+0xfffbe904>
   8a4f4:	00804034 	movhi	r2,256
   8a4f8:	10bfffc4 	addi	r2,r2,-1
   8a4fc:	11808b36 	bltu	r2,r6,8a72c <__umoddi3+0x4f0>
   8a500:	01000404 	movi	r4,16
   8a504:	003f6406 	br	8a298 <__alt_data_end+0xfffbe7a8>
   8a508:	34c4d83a 	srl	r2,r6,r19
   8a50c:	3d0e983a 	sll	r7,r7,r20
   8a510:	8cf8d83a 	srl	fp,r17,r19
   8a514:	8d10983a 	sll	r8,r17,r20
   8a518:	38aab03a 	or	r21,r7,r2
   8a51c:	a82cd43a 	srli	r22,r21,16
   8a520:	84e2d83a 	srl	r17,r16,r19
   8a524:	e009883a 	mov	r4,fp
   8a528:	b00b883a 	mov	r5,r22
   8a52c:	8a22b03a 	or	r17,r17,r8
   8a530:	3524983a 	sll	r18,r6,r20
   8a534:	008a8d00 	call	8a8d0 <__umodsi3>
   8a538:	e009883a 	mov	r4,fp
   8a53c:	b00b883a 	mov	r5,r22
   8a540:	102f883a 	mov	r23,r2
   8a544:	008a86c0 	call	8a86c <__udivsi3>
   8a548:	100d883a 	mov	r6,r2
   8a54c:	b808943a 	slli	r4,r23,16
   8a550:	aa3fffcc 	andi	r8,r21,65535
   8a554:	8804d43a 	srli	r2,r17,16
   8a558:	41af383a 	mul	r23,r8,r6
   8a55c:	8520983a 	sll	r16,r16,r20
   8a560:	1104b03a 	or	r2,r2,r4
   8a564:	15c0042e 	bgeu	r2,r23,8a578 <__umoddi3+0x33c>
   8a568:	1545883a 	add	r2,r2,r21
   8a56c:	30ffffc4 	addi	r3,r6,-1
   8a570:	1540742e 	bgeu	r2,r21,8a744 <__umoddi3+0x508>
   8a574:	180d883a 	mov	r6,r3
   8a578:	15efc83a 	sub	r23,r2,r23
   8a57c:	b00b883a 	mov	r5,r22
   8a580:	b809883a 	mov	r4,r23
   8a584:	d9800115 	stw	r6,4(sp)
   8a588:	da000015 	stw	r8,0(sp)
   8a58c:	008a8d00 	call	8a8d0 <__umodsi3>
   8a590:	b00b883a 	mov	r5,r22
   8a594:	b809883a 	mov	r4,r23
   8a598:	1039883a 	mov	fp,r2
   8a59c:	008a86c0 	call	8a86c <__udivsi3>
   8a5a0:	da000017 	ldw	r8,0(sp)
   8a5a4:	e038943a 	slli	fp,fp,16
   8a5a8:	100b883a 	mov	r5,r2
   8a5ac:	4089383a 	mul	r4,r8,r2
   8a5b0:	8a3fffcc 	andi	r8,r17,65535
   8a5b4:	4710b03a 	or	r8,r8,fp
   8a5b8:	d9800117 	ldw	r6,4(sp)
   8a5bc:	4100042e 	bgeu	r8,r4,8a5d0 <__umoddi3+0x394>
   8a5c0:	4551883a 	add	r8,r8,r21
   8a5c4:	10bfffc4 	addi	r2,r2,-1
   8a5c8:	45405a2e 	bgeu	r8,r21,8a734 <__umoddi3+0x4f8>
   8a5cc:	100b883a 	mov	r5,r2
   8a5d0:	300c943a 	slli	r6,r6,16
   8a5d4:	91ffffcc 	andi	r7,r18,65535
   8a5d8:	9004d43a 	srli	r2,r18,16
   8a5dc:	314cb03a 	or	r6,r6,r5
   8a5e0:	317fffcc 	andi	r5,r6,65535
   8a5e4:	300cd43a 	srli	r6,r6,16
   8a5e8:	29d3383a 	mul	r9,r5,r7
   8a5ec:	288b383a 	mul	r5,r5,r2
   8a5f0:	31cf383a 	mul	r7,r6,r7
   8a5f4:	4806d43a 	srli	r3,r9,16
   8a5f8:	4111c83a 	sub	r8,r8,r4
   8a5fc:	29cb883a 	add	r5,r5,r7
   8a600:	194b883a 	add	r5,r3,r5
   8a604:	3085383a 	mul	r2,r6,r2
   8a608:	29c0022e 	bgeu	r5,r7,8a614 <__umoddi3+0x3d8>
   8a60c:	00c00074 	movhi	r3,1
   8a610:	10c5883a 	add	r2,r2,r3
   8a614:	2808d43a 	srli	r4,r5,16
   8a618:	280a943a 	slli	r5,r5,16
   8a61c:	4a7fffcc 	andi	r9,r9,65535
   8a620:	2085883a 	add	r2,r4,r2
   8a624:	2a4b883a 	add	r5,r5,r9
   8a628:	40803636 	bltu	r8,r2,8a704 <__umoddi3+0x4c8>
   8a62c:	40804d26 	beq	r8,r2,8a764 <__umoddi3+0x528>
   8a630:	4089c83a 	sub	r4,r8,r2
   8a634:	280f883a 	mov	r7,r5
   8a638:	81cfc83a 	sub	r7,r16,r7
   8a63c:	81c7803a 	cmpltu	r3,r16,r7
   8a640:	20c7c83a 	sub	r3,r4,r3
   8a644:	1cc4983a 	sll	r2,r3,r19
   8a648:	3d0ed83a 	srl	r7,r7,r20
   8a64c:	1d06d83a 	srl	r3,r3,r20
   8a650:	11c4b03a 	or	r2,r2,r7
   8a654:	003f9306 	br	8a4a4 <__alt_data_end+0xfffbe9b4>
   8a658:	9ca6983a 	sll	r19,r19,r18
   8a65c:	88e8d83a 	srl	r20,r17,r3
   8a660:	80c4d83a 	srl	r2,r16,r3
   8a664:	982cd43a 	srli	r22,r19,16
   8a668:	8ca2983a 	sll	r17,r17,r18
   8a66c:	a009883a 	mov	r4,r20
   8a670:	b00b883a 	mov	r5,r22
   8a674:	1478b03a 	or	fp,r2,r17
   8a678:	008a8d00 	call	8a8d0 <__umodsi3>
   8a67c:	a009883a 	mov	r4,r20
   8a680:	b00b883a 	mov	r5,r22
   8a684:	1023883a 	mov	r17,r2
   8a688:	008a86c0 	call	8a86c <__udivsi3>
   8a68c:	9d7fffcc 	andi	r21,r19,65535
   8a690:	880a943a 	slli	r5,r17,16
   8a694:	e008d43a 	srli	r4,fp,16
   8a698:	a885383a 	mul	r2,r21,r2
   8a69c:	84a8983a 	sll	r20,r16,r18
   8a6a0:	2148b03a 	or	r4,r4,r5
   8a6a4:	2080042e 	bgeu	r4,r2,8a6b8 <__umoddi3+0x47c>
   8a6a8:	24c9883a 	add	r4,r4,r19
   8a6ac:	24c00236 	bltu	r4,r19,8a6b8 <__umoddi3+0x47c>
   8a6b0:	2080012e 	bgeu	r4,r2,8a6b8 <__umoddi3+0x47c>
   8a6b4:	24c9883a 	add	r4,r4,r19
   8a6b8:	20a3c83a 	sub	r17,r4,r2
   8a6bc:	b00b883a 	mov	r5,r22
   8a6c0:	8809883a 	mov	r4,r17
   8a6c4:	008a8d00 	call	8a8d0 <__umodsi3>
   8a6c8:	102f883a 	mov	r23,r2
   8a6cc:	8809883a 	mov	r4,r17
   8a6d0:	b00b883a 	mov	r5,r22
   8a6d4:	008a86c0 	call	8a86c <__udivsi3>
   8a6d8:	b82e943a 	slli	r23,r23,16
   8a6dc:	a885383a 	mul	r2,r21,r2
   8a6e0:	e13fffcc 	andi	r4,fp,65535
   8a6e4:	25c8b03a 	or	r4,r4,r23
   8a6e8:	2080042e 	bgeu	r4,r2,8a6fc <__umoddi3+0x4c0>
   8a6ec:	24c9883a 	add	r4,r4,r19
   8a6f0:	24c00236 	bltu	r4,r19,8a6fc <__umoddi3+0x4c0>
   8a6f4:	2080012e 	bgeu	r4,r2,8a6fc <__umoddi3+0x4c0>
   8a6f8:	24c9883a 	add	r4,r4,r19
   8a6fc:	20a3c83a 	sub	r17,r4,r2
   8a700:	003f4806 	br	8a424 <__alt_data_end+0xfffbe934>
   8a704:	2c8fc83a 	sub	r7,r5,r18
   8a708:	1545c83a 	sub	r2,r2,r21
   8a70c:	29cb803a 	cmpltu	r5,r5,r7
   8a710:	1145c83a 	sub	r2,r2,r5
   8a714:	4089c83a 	sub	r4,r8,r2
   8a718:	003fc706 	br	8a638 <__alt_data_end+0xfffbeb48>
   8a71c:	01000604 	movi	r4,24
   8a720:	003f1806 	br	8a384 <__alt_data_end+0xfffbe894>
   8a724:	00800604 	movi	r2,24
   8a728:	003f3206 	br	8a3f4 <__alt_data_end+0xfffbe904>
   8a72c:	01000604 	movi	r4,24
   8a730:	003ed906 	br	8a298 <__alt_data_end+0xfffbe7a8>
   8a734:	413fa52e 	bgeu	r8,r4,8a5cc <__alt_data_end+0xfffbeadc>
   8a738:	297fff84 	addi	r5,r5,-2
   8a73c:	4551883a 	add	r8,r8,r21
   8a740:	003fa306 	br	8a5d0 <__alt_data_end+0xfffbeae0>
   8a744:	15ff8b2e 	bgeu	r2,r23,8a574 <__alt_data_end+0xfffbea84>
   8a748:	31bfff84 	addi	r6,r6,-2
   8a74c:	1545883a 	add	r2,r2,r21
   8a750:	003f8906 	br	8a578 <__alt_data_end+0xfffbea88>
   8a754:	24c9883a 	add	r4,r4,r19
   8a758:	003eee06 	br	8a314 <__alt_data_end+0xfffbe824>
   8a75c:	8005883a 	mov	r2,r16
   8a760:	003f1706 	br	8a3c0 <__alt_data_end+0xfffbe8d0>
   8a764:	817fe736 	bltu	r16,r5,8a704 <__alt_data_end+0xfffbec14>
   8a768:	280f883a 	mov	r7,r5
   8a76c:	0009883a 	mov	r4,zero
   8a770:	003fb106 	br	8a638 <__alt_data_end+0xfffbeb48>

0008a774 <__divsi3>:
   8a774:	20001b16 	blt	r4,zero,8a7e4 <__divsi3+0x70>
   8a778:	000f883a 	mov	r7,zero
   8a77c:	28001616 	blt	r5,zero,8a7d8 <__divsi3+0x64>
   8a780:	200d883a 	mov	r6,r4
   8a784:	29001a2e 	bgeu	r5,r4,8a7f0 <__divsi3+0x7c>
   8a788:	00800804 	movi	r2,32
   8a78c:	00c00044 	movi	r3,1
   8a790:	00000106 	br	8a798 <__divsi3+0x24>
   8a794:	10000d26 	beq	r2,zero,8a7cc <__divsi3+0x58>
   8a798:	294b883a 	add	r5,r5,r5
   8a79c:	10bfffc4 	addi	r2,r2,-1
   8a7a0:	18c7883a 	add	r3,r3,r3
   8a7a4:	293ffb36 	bltu	r5,r4,8a794 <__alt_data_end+0xfffbeca4>
   8a7a8:	0005883a 	mov	r2,zero
   8a7ac:	18000726 	beq	r3,zero,8a7cc <__divsi3+0x58>
   8a7b0:	0005883a 	mov	r2,zero
   8a7b4:	31400236 	bltu	r6,r5,8a7c0 <__divsi3+0x4c>
   8a7b8:	314dc83a 	sub	r6,r6,r5
   8a7bc:	10c4b03a 	or	r2,r2,r3
   8a7c0:	1806d07a 	srli	r3,r3,1
   8a7c4:	280ad07a 	srli	r5,r5,1
   8a7c8:	183ffa1e 	bne	r3,zero,8a7b4 <__alt_data_end+0xfffbecc4>
   8a7cc:	38000126 	beq	r7,zero,8a7d4 <__divsi3+0x60>
   8a7d0:	0085c83a 	sub	r2,zero,r2
   8a7d4:	f800283a 	ret
   8a7d8:	014bc83a 	sub	r5,zero,r5
   8a7dc:	39c0005c 	xori	r7,r7,1
   8a7e0:	003fe706 	br	8a780 <__alt_data_end+0xfffbec90>
   8a7e4:	0109c83a 	sub	r4,zero,r4
   8a7e8:	01c00044 	movi	r7,1
   8a7ec:	003fe306 	br	8a77c <__alt_data_end+0xfffbec8c>
   8a7f0:	00c00044 	movi	r3,1
   8a7f4:	003fee06 	br	8a7b0 <__alt_data_end+0xfffbecc0>

0008a7f8 <__modsi3>:
   8a7f8:	20001716 	blt	r4,zero,8a858 <__modsi3+0x60>
   8a7fc:	000f883a 	mov	r7,zero
   8a800:	2005883a 	mov	r2,r4
   8a804:	28001216 	blt	r5,zero,8a850 <__modsi3+0x58>
   8a808:	2900162e 	bgeu	r5,r4,8a864 <__modsi3+0x6c>
   8a80c:	01800804 	movi	r6,32
   8a810:	00c00044 	movi	r3,1
   8a814:	00000106 	br	8a81c <__modsi3+0x24>
   8a818:	30000a26 	beq	r6,zero,8a844 <__modsi3+0x4c>
   8a81c:	294b883a 	add	r5,r5,r5
   8a820:	31bfffc4 	addi	r6,r6,-1
   8a824:	18c7883a 	add	r3,r3,r3
   8a828:	293ffb36 	bltu	r5,r4,8a818 <__alt_data_end+0xfffbed28>
   8a82c:	18000526 	beq	r3,zero,8a844 <__modsi3+0x4c>
   8a830:	1806d07a 	srli	r3,r3,1
   8a834:	11400136 	bltu	r2,r5,8a83c <__modsi3+0x44>
   8a838:	1145c83a 	sub	r2,r2,r5
   8a83c:	280ad07a 	srli	r5,r5,1
   8a840:	183ffb1e 	bne	r3,zero,8a830 <__alt_data_end+0xfffbed40>
   8a844:	38000126 	beq	r7,zero,8a84c <__modsi3+0x54>
   8a848:	0085c83a 	sub	r2,zero,r2
   8a84c:	f800283a 	ret
   8a850:	014bc83a 	sub	r5,zero,r5
   8a854:	003fec06 	br	8a808 <__alt_data_end+0xfffbed18>
   8a858:	0109c83a 	sub	r4,zero,r4
   8a85c:	01c00044 	movi	r7,1
   8a860:	003fe706 	br	8a800 <__alt_data_end+0xfffbed10>
   8a864:	00c00044 	movi	r3,1
   8a868:	003ff106 	br	8a830 <__alt_data_end+0xfffbed40>

0008a86c <__udivsi3>:
   8a86c:	200d883a 	mov	r6,r4
   8a870:	2900152e 	bgeu	r5,r4,8a8c8 <__udivsi3+0x5c>
   8a874:	28001416 	blt	r5,zero,8a8c8 <__udivsi3+0x5c>
   8a878:	00800804 	movi	r2,32
   8a87c:	00c00044 	movi	r3,1
   8a880:	00000206 	br	8a88c <__udivsi3+0x20>
   8a884:	10000e26 	beq	r2,zero,8a8c0 <__udivsi3+0x54>
   8a888:	28000516 	blt	r5,zero,8a8a0 <__udivsi3+0x34>
   8a88c:	294b883a 	add	r5,r5,r5
   8a890:	10bfffc4 	addi	r2,r2,-1
   8a894:	18c7883a 	add	r3,r3,r3
   8a898:	293ffa36 	bltu	r5,r4,8a884 <__alt_data_end+0xfffbed94>
   8a89c:	18000826 	beq	r3,zero,8a8c0 <__udivsi3+0x54>
   8a8a0:	0005883a 	mov	r2,zero
   8a8a4:	31400236 	bltu	r6,r5,8a8b0 <__udivsi3+0x44>
   8a8a8:	314dc83a 	sub	r6,r6,r5
   8a8ac:	10c4b03a 	or	r2,r2,r3
   8a8b0:	1806d07a 	srli	r3,r3,1
   8a8b4:	280ad07a 	srli	r5,r5,1
   8a8b8:	183ffa1e 	bne	r3,zero,8a8a4 <__alt_data_end+0xfffbedb4>
   8a8bc:	f800283a 	ret
   8a8c0:	0005883a 	mov	r2,zero
   8a8c4:	f800283a 	ret
   8a8c8:	00c00044 	movi	r3,1
   8a8cc:	003ff406 	br	8a8a0 <__alt_data_end+0xfffbedb0>

0008a8d0 <__umodsi3>:
   8a8d0:	2005883a 	mov	r2,r4
   8a8d4:	2900122e 	bgeu	r5,r4,8a920 <__umodsi3+0x50>
   8a8d8:	28001116 	blt	r5,zero,8a920 <__umodsi3+0x50>
   8a8dc:	01800804 	movi	r6,32
   8a8e0:	00c00044 	movi	r3,1
   8a8e4:	00000206 	br	8a8f0 <__umodsi3+0x20>
   8a8e8:	30000c26 	beq	r6,zero,8a91c <__umodsi3+0x4c>
   8a8ec:	28000516 	blt	r5,zero,8a904 <__umodsi3+0x34>
   8a8f0:	294b883a 	add	r5,r5,r5
   8a8f4:	31bfffc4 	addi	r6,r6,-1
   8a8f8:	18c7883a 	add	r3,r3,r3
   8a8fc:	293ffa36 	bltu	r5,r4,8a8e8 <__alt_data_end+0xfffbedf8>
   8a900:	18000626 	beq	r3,zero,8a91c <__umodsi3+0x4c>
   8a904:	1806d07a 	srli	r3,r3,1
   8a908:	11400136 	bltu	r2,r5,8a910 <__umodsi3+0x40>
   8a90c:	1145c83a 	sub	r2,r2,r5
   8a910:	280ad07a 	srli	r5,r5,1
   8a914:	183ffb1e 	bne	r3,zero,8a904 <__alt_data_end+0xfffbee14>
   8a918:	f800283a 	ret
   8a91c:	f800283a 	ret
   8a920:	00c00044 	movi	r3,1
   8a924:	003ff706 	br	8a904 <__alt_data_end+0xfffbee14>

0008a928 <__adddf3>:
   8a928:	02c00434 	movhi	r11,16
   8a92c:	5affffc4 	addi	r11,r11,-1
   8a930:	2806d7fa 	srli	r3,r5,31
   8a934:	2ad4703a 	and	r10,r5,r11
   8a938:	3ad2703a 	and	r9,r7,r11
   8a93c:	3804d53a 	srli	r2,r7,20
   8a940:	3018d77a 	srli	r12,r6,29
   8a944:	280ad53a 	srli	r5,r5,20
   8a948:	501490fa 	slli	r10,r10,3
   8a94c:	2010d77a 	srli	r8,r4,29
   8a950:	481290fa 	slli	r9,r9,3
   8a954:	380ed7fa 	srli	r7,r7,31
   8a958:	defffb04 	addi	sp,sp,-20
   8a95c:	dc800215 	stw	r18,8(sp)
   8a960:	dc400115 	stw	r17,4(sp)
   8a964:	dc000015 	stw	r16,0(sp)
   8a968:	dfc00415 	stw	ra,16(sp)
   8a96c:	dcc00315 	stw	r19,12(sp)
   8a970:	1c803fcc 	andi	r18,r3,255
   8a974:	2c01ffcc 	andi	r16,r5,2047
   8a978:	5210b03a 	or	r8,r10,r8
   8a97c:	202290fa 	slli	r17,r4,3
   8a980:	1081ffcc 	andi	r2,r2,2047
   8a984:	4b12b03a 	or	r9,r9,r12
   8a988:	300c90fa 	slli	r6,r6,3
   8a98c:	91c07526 	beq	r18,r7,8ab64 <__adddf3+0x23c>
   8a990:	8087c83a 	sub	r3,r16,r2
   8a994:	00c0ab0e 	bge	zero,r3,8ac44 <__adddf3+0x31c>
   8a998:	10002a1e 	bne	r2,zero,8aa44 <__adddf3+0x11c>
   8a99c:	4984b03a 	or	r2,r9,r6
   8a9a0:	1000961e 	bne	r2,zero,8abfc <__adddf3+0x2d4>
   8a9a4:	888001cc 	andi	r2,r17,7
   8a9a8:	10000726 	beq	r2,zero,8a9c8 <__adddf3+0xa0>
   8a9ac:	888003cc 	andi	r2,r17,15
   8a9b0:	00c00104 	movi	r3,4
   8a9b4:	10c00426 	beq	r2,r3,8a9c8 <__adddf3+0xa0>
   8a9b8:	88c7883a 	add	r3,r17,r3
   8a9bc:	1c63803a 	cmpltu	r17,r3,r17
   8a9c0:	4451883a 	add	r8,r8,r17
   8a9c4:	1823883a 	mov	r17,r3
   8a9c8:	4080202c 	andhi	r2,r8,128
   8a9cc:	10005926 	beq	r2,zero,8ab34 <__adddf3+0x20c>
   8a9d0:	84000044 	addi	r16,r16,1
   8a9d4:	0081ffc4 	movi	r2,2047
   8a9d8:	8080ba26 	beq	r16,r2,8acc4 <__adddf3+0x39c>
   8a9dc:	00bfe034 	movhi	r2,65408
   8a9e0:	10bfffc4 	addi	r2,r2,-1
   8a9e4:	4090703a 	and	r8,r8,r2
   8a9e8:	4004977a 	slli	r2,r8,29
   8a9ec:	4010927a 	slli	r8,r8,9
   8a9f0:	8822d0fa 	srli	r17,r17,3
   8a9f4:	8401ffcc 	andi	r16,r16,2047
   8a9f8:	4010d33a 	srli	r8,r8,12
   8a9fc:	9007883a 	mov	r3,r18
   8aa00:	1444b03a 	or	r2,r2,r17
   8aa04:	8401ffcc 	andi	r16,r16,2047
   8aa08:	8020953a 	slli	r16,r16,20
   8aa0c:	18c03fcc 	andi	r3,r3,255
   8aa10:	01000434 	movhi	r4,16
   8aa14:	213fffc4 	addi	r4,r4,-1
   8aa18:	180697fa 	slli	r3,r3,31
   8aa1c:	4110703a 	and	r8,r8,r4
   8aa20:	4410b03a 	or	r8,r8,r16
   8aa24:	40c6b03a 	or	r3,r8,r3
   8aa28:	dfc00417 	ldw	ra,16(sp)
   8aa2c:	dcc00317 	ldw	r19,12(sp)
   8aa30:	dc800217 	ldw	r18,8(sp)
   8aa34:	dc400117 	ldw	r17,4(sp)
   8aa38:	dc000017 	ldw	r16,0(sp)
   8aa3c:	dec00504 	addi	sp,sp,20
   8aa40:	f800283a 	ret
   8aa44:	0081ffc4 	movi	r2,2047
   8aa48:	80bfd626 	beq	r16,r2,8a9a4 <__alt_data_end+0xfffbeeb4>
   8aa4c:	4a402034 	orhi	r9,r9,128
   8aa50:	00800e04 	movi	r2,56
   8aa54:	10c09f16 	blt	r2,r3,8acd4 <__adddf3+0x3ac>
   8aa58:	008007c4 	movi	r2,31
   8aa5c:	10c0c216 	blt	r2,r3,8ad68 <__adddf3+0x440>
   8aa60:	00800804 	movi	r2,32
   8aa64:	10c5c83a 	sub	r2,r2,r3
   8aa68:	488a983a 	sll	r5,r9,r2
   8aa6c:	30c8d83a 	srl	r4,r6,r3
   8aa70:	3084983a 	sll	r2,r6,r2
   8aa74:	48c6d83a 	srl	r3,r9,r3
   8aa78:	290cb03a 	or	r6,r5,r4
   8aa7c:	1004c03a 	cmpne	r2,r2,zero
   8aa80:	308cb03a 	or	r6,r6,r2
   8aa84:	898dc83a 	sub	r6,r17,r6
   8aa88:	89a3803a 	cmpltu	r17,r17,r6
   8aa8c:	40d1c83a 	sub	r8,r8,r3
   8aa90:	4451c83a 	sub	r8,r8,r17
   8aa94:	3023883a 	mov	r17,r6
   8aa98:	4080202c 	andhi	r2,r8,128
   8aa9c:	10002326 	beq	r2,zero,8ab2c <__adddf3+0x204>
   8aaa0:	04c02034 	movhi	r19,128
   8aaa4:	9cffffc4 	addi	r19,r19,-1
   8aaa8:	44e6703a 	and	r19,r8,r19
   8aaac:	98007626 	beq	r19,zero,8ac88 <__adddf3+0x360>
   8aab0:	9809883a 	mov	r4,r19
   8aab4:	008cf2c0 	call	8cf2c <__clzsi2>
   8aab8:	10fffe04 	addi	r3,r2,-8
   8aabc:	010007c4 	movi	r4,31
   8aac0:	20c07716 	blt	r4,r3,8aca0 <__adddf3+0x378>
   8aac4:	00800804 	movi	r2,32
   8aac8:	10c5c83a 	sub	r2,r2,r3
   8aacc:	8884d83a 	srl	r2,r17,r2
   8aad0:	98d0983a 	sll	r8,r19,r3
   8aad4:	88e2983a 	sll	r17,r17,r3
   8aad8:	1204b03a 	or	r2,r2,r8
   8aadc:	1c007416 	blt	r3,r16,8acb0 <__adddf3+0x388>
   8aae0:	1c21c83a 	sub	r16,r3,r16
   8aae4:	82000044 	addi	r8,r16,1
   8aae8:	00c007c4 	movi	r3,31
   8aaec:	1a009116 	blt	r3,r8,8ad34 <__adddf3+0x40c>
   8aaf0:	00c00804 	movi	r3,32
   8aaf4:	1a07c83a 	sub	r3,r3,r8
   8aaf8:	8a08d83a 	srl	r4,r17,r8
   8aafc:	88e2983a 	sll	r17,r17,r3
   8ab00:	10c6983a 	sll	r3,r2,r3
   8ab04:	1210d83a 	srl	r8,r2,r8
   8ab08:	8804c03a 	cmpne	r2,r17,zero
   8ab0c:	1906b03a 	or	r3,r3,r4
   8ab10:	18a2b03a 	or	r17,r3,r2
   8ab14:	0021883a 	mov	r16,zero
   8ab18:	003fa206 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8ab1c:	1890b03a 	or	r8,r3,r2
   8ab20:	40017d26 	beq	r8,zero,8b118 <__adddf3+0x7f0>
   8ab24:	1011883a 	mov	r8,r2
   8ab28:	1823883a 	mov	r17,r3
   8ab2c:	888001cc 	andi	r2,r17,7
   8ab30:	103f9e1e 	bne	r2,zero,8a9ac <__alt_data_end+0xfffbeebc>
   8ab34:	4004977a 	slli	r2,r8,29
   8ab38:	8822d0fa 	srli	r17,r17,3
   8ab3c:	4010d0fa 	srli	r8,r8,3
   8ab40:	9007883a 	mov	r3,r18
   8ab44:	1444b03a 	or	r2,r2,r17
   8ab48:	0101ffc4 	movi	r4,2047
   8ab4c:	81002426 	beq	r16,r4,8abe0 <__adddf3+0x2b8>
   8ab50:	8120703a 	and	r16,r16,r4
   8ab54:	01000434 	movhi	r4,16
   8ab58:	213fffc4 	addi	r4,r4,-1
   8ab5c:	4110703a 	and	r8,r8,r4
   8ab60:	003fa806 	br	8aa04 <__alt_data_end+0xfffbef14>
   8ab64:	8089c83a 	sub	r4,r16,r2
   8ab68:	01005e0e 	bge	zero,r4,8ace4 <__adddf3+0x3bc>
   8ab6c:	10002b26 	beq	r2,zero,8ac1c <__adddf3+0x2f4>
   8ab70:	0081ffc4 	movi	r2,2047
   8ab74:	80bf8b26 	beq	r16,r2,8a9a4 <__alt_data_end+0xfffbeeb4>
   8ab78:	4a402034 	orhi	r9,r9,128
   8ab7c:	00800e04 	movi	r2,56
   8ab80:	1100a40e 	bge	r2,r4,8ae14 <__adddf3+0x4ec>
   8ab84:	498cb03a 	or	r6,r9,r6
   8ab88:	300ac03a 	cmpne	r5,r6,zero
   8ab8c:	0013883a 	mov	r9,zero
   8ab90:	2c4b883a 	add	r5,r5,r17
   8ab94:	2c63803a 	cmpltu	r17,r5,r17
   8ab98:	4a11883a 	add	r8,r9,r8
   8ab9c:	8a11883a 	add	r8,r17,r8
   8aba0:	2823883a 	mov	r17,r5
   8aba4:	4080202c 	andhi	r2,r8,128
   8aba8:	103fe026 	beq	r2,zero,8ab2c <__alt_data_end+0xfffbf03c>
   8abac:	84000044 	addi	r16,r16,1
   8abb0:	0081ffc4 	movi	r2,2047
   8abb4:	8080d226 	beq	r16,r2,8af00 <__adddf3+0x5d8>
   8abb8:	00bfe034 	movhi	r2,65408
   8abbc:	10bfffc4 	addi	r2,r2,-1
   8abc0:	4090703a 	and	r8,r8,r2
   8abc4:	880ad07a 	srli	r5,r17,1
   8abc8:	400897fa 	slli	r4,r8,31
   8abcc:	88c0004c 	andi	r3,r17,1
   8abd0:	28e2b03a 	or	r17,r5,r3
   8abd4:	4010d07a 	srli	r8,r8,1
   8abd8:	2462b03a 	or	r17,r4,r17
   8abdc:	003f7106 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8abe0:	4088b03a 	or	r4,r8,r2
   8abe4:	20014526 	beq	r4,zero,8b0fc <__adddf3+0x7d4>
   8abe8:	01000434 	movhi	r4,16
   8abec:	42000234 	orhi	r8,r8,8
   8abf0:	213fffc4 	addi	r4,r4,-1
   8abf4:	4110703a 	and	r8,r8,r4
   8abf8:	003f8206 	br	8aa04 <__alt_data_end+0xfffbef14>
   8abfc:	18ffffc4 	addi	r3,r3,-1
   8ac00:	1800491e 	bne	r3,zero,8ad28 <__adddf3+0x400>
   8ac04:	898bc83a 	sub	r5,r17,r6
   8ac08:	8963803a 	cmpltu	r17,r17,r5
   8ac0c:	4251c83a 	sub	r8,r8,r9
   8ac10:	4451c83a 	sub	r8,r8,r17
   8ac14:	2823883a 	mov	r17,r5
   8ac18:	003f9f06 	br	8aa98 <__alt_data_end+0xfffbefa8>
   8ac1c:	4984b03a 	or	r2,r9,r6
   8ac20:	103f6026 	beq	r2,zero,8a9a4 <__alt_data_end+0xfffbeeb4>
   8ac24:	213fffc4 	addi	r4,r4,-1
   8ac28:	2000931e 	bne	r4,zero,8ae78 <__adddf3+0x550>
   8ac2c:	898d883a 	add	r6,r17,r6
   8ac30:	3463803a 	cmpltu	r17,r6,r17
   8ac34:	4251883a 	add	r8,r8,r9
   8ac38:	8a11883a 	add	r8,r17,r8
   8ac3c:	3023883a 	mov	r17,r6
   8ac40:	003fd806 	br	8aba4 <__alt_data_end+0xfffbf0b4>
   8ac44:	1800541e 	bne	r3,zero,8ad98 <__adddf3+0x470>
   8ac48:	80800044 	addi	r2,r16,1
   8ac4c:	1081ffcc 	andi	r2,r2,2047
   8ac50:	00c00044 	movi	r3,1
   8ac54:	1880a00e 	bge	r3,r2,8aed8 <__adddf3+0x5b0>
   8ac58:	8989c83a 	sub	r4,r17,r6
   8ac5c:	8905803a 	cmpltu	r2,r17,r4
   8ac60:	4267c83a 	sub	r19,r8,r9
   8ac64:	98a7c83a 	sub	r19,r19,r2
   8ac68:	9880202c 	andhi	r2,r19,128
   8ac6c:	10006326 	beq	r2,zero,8adfc <__adddf3+0x4d4>
   8ac70:	3463c83a 	sub	r17,r6,r17
   8ac74:	4a07c83a 	sub	r3,r9,r8
   8ac78:	344d803a 	cmpltu	r6,r6,r17
   8ac7c:	19a7c83a 	sub	r19,r3,r6
   8ac80:	3825883a 	mov	r18,r7
   8ac84:	983f8a1e 	bne	r19,zero,8aab0 <__alt_data_end+0xfffbefc0>
   8ac88:	8809883a 	mov	r4,r17
   8ac8c:	008cf2c0 	call	8cf2c <__clzsi2>
   8ac90:	10800804 	addi	r2,r2,32
   8ac94:	10fffe04 	addi	r3,r2,-8
   8ac98:	010007c4 	movi	r4,31
   8ac9c:	20ff890e 	bge	r4,r3,8aac4 <__alt_data_end+0xfffbefd4>
   8aca0:	10bff604 	addi	r2,r2,-40
   8aca4:	8884983a 	sll	r2,r17,r2
   8aca8:	0023883a 	mov	r17,zero
   8acac:	1c3f8c0e 	bge	r3,r16,8aae0 <__alt_data_end+0xfffbeff0>
   8acb0:	023fe034 	movhi	r8,65408
   8acb4:	423fffc4 	addi	r8,r8,-1
   8acb8:	80e1c83a 	sub	r16,r16,r3
   8acbc:	1210703a 	and	r8,r2,r8
   8acc0:	003f3806 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8acc4:	9007883a 	mov	r3,r18
   8acc8:	0011883a 	mov	r8,zero
   8accc:	0005883a 	mov	r2,zero
   8acd0:	003f4c06 	br	8aa04 <__alt_data_end+0xfffbef14>
   8acd4:	498cb03a 	or	r6,r9,r6
   8acd8:	300cc03a 	cmpne	r6,r6,zero
   8acdc:	0007883a 	mov	r3,zero
   8ace0:	003f6806 	br	8aa84 <__alt_data_end+0xfffbef94>
   8ace4:	20009c1e 	bne	r4,zero,8af58 <__adddf3+0x630>
   8ace8:	80800044 	addi	r2,r16,1
   8acec:	1141ffcc 	andi	r5,r2,2047
   8acf0:	01000044 	movi	r4,1
   8acf4:	2140670e 	bge	r4,r5,8ae94 <__adddf3+0x56c>
   8acf8:	0101ffc4 	movi	r4,2047
   8acfc:	11007f26 	beq	r2,r4,8aefc <__adddf3+0x5d4>
   8ad00:	898d883a 	add	r6,r17,r6
   8ad04:	4247883a 	add	r3,r8,r9
   8ad08:	3451803a 	cmpltu	r8,r6,r17
   8ad0c:	40d1883a 	add	r8,r8,r3
   8ad10:	402297fa 	slli	r17,r8,31
   8ad14:	300cd07a 	srli	r6,r6,1
   8ad18:	4010d07a 	srli	r8,r8,1
   8ad1c:	1021883a 	mov	r16,r2
   8ad20:	89a2b03a 	or	r17,r17,r6
   8ad24:	003f1f06 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8ad28:	0081ffc4 	movi	r2,2047
   8ad2c:	80bf481e 	bne	r16,r2,8aa50 <__alt_data_end+0xfffbef60>
   8ad30:	003f1c06 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8ad34:	843ff844 	addi	r16,r16,-31
   8ad38:	01000804 	movi	r4,32
   8ad3c:	1406d83a 	srl	r3,r2,r16
   8ad40:	41005026 	beq	r8,r4,8ae84 <__adddf3+0x55c>
   8ad44:	01001004 	movi	r4,64
   8ad48:	2211c83a 	sub	r8,r4,r8
   8ad4c:	1204983a 	sll	r2,r2,r8
   8ad50:	88a2b03a 	or	r17,r17,r2
   8ad54:	8822c03a 	cmpne	r17,r17,zero
   8ad58:	1c62b03a 	or	r17,r3,r17
   8ad5c:	0011883a 	mov	r8,zero
   8ad60:	0021883a 	mov	r16,zero
   8ad64:	003f7106 	br	8ab2c <__alt_data_end+0xfffbf03c>
   8ad68:	193ff804 	addi	r4,r3,-32
   8ad6c:	00800804 	movi	r2,32
   8ad70:	4908d83a 	srl	r4,r9,r4
   8ad74:	18804526 	beq	r3,r2,8ae8c <__adddf3+0x564>
   8ad78:	00801004 	movi	r2,64
   8ad7c:	10c5c83a 	sub	r2,r2,r3
   8ad80:	4886983a 	sll	r3,r9,r2
   8ad84:	198cb03a 	or	r6,r3,r6
   8ad88:	300cc03a 	cmpne	r6,r6,zero
   8ad8c:	218cb03a 	or	r6,r4,r6
   8ad90:	0007883a 	mov	r3,zero
   8ad94:	003f3b06 	br	8aa84 <__alt_data_end+0xfffbef94>
   8ad98:	80002a26 	beq	r16,zero,8ae44 <__adddf3+0x51c>
   8ad9c:	0101ffc4 	movi	r4,2047
   8ada0:	11006826 	beq	r2,r4,8af44 <__adddf3+0x61c>
   8ada4:	00c7c83a 	sub	r3,zero,r3
   8ada8:	42002034 	orhi	r8,r8,128
   8adac:	01000e04 	movi	r4,56
   8adb0:	20c07c16 	blt	r4,r3,8afa4 <__adddf3+0x67c>
   8adb4:	010007c4 	movi	r4,31
   8adb8:	20c0da16 	blt	r4,r3,8b124 <__adddf3+0x7fc>
   8adbc:	01000804 	movi	r4,32
   8adc0:	20c9c83a 	sub	r4,r4,r3
   8adc4:	4114983a 	sll	r10,r8,r4
   8adc8:	88cad83a 	srl	r5,r17,r3
   8adcc:	8908983a 	sll	r4,r17,r4
   8add0:	40c6d83a 	srl	r3,r8,r3
   8add4:	5162b03a 	or	r17,r10,r5
   8add8:	2008c03a 	cmpne	r4,r4,zero
   8addc:	8922b03a 	or	r17,r17,r4
   8ade0:	3463c83a 	sub	r17,r6,r17
   8ade4:	48c7c83a 	sub	r3,r9,r3
   8ade8:	344d803a 	cmpltu	r6,r6,r17
   8adec:	1991c83a 	sub	r8,r3,r6
   8adf0:	1021883a 	mov	r16,r2
   8adf4:	3825883a 	mov	r18,r7
   8adf8:	003f2706 	br	8aa98 <__alt_data_end+0xfffbefa8>
   8adfc:	24d0b03a 	or	r8,r4,r19
   8ae00:	40001b1e 	bne	r8,zero,8ae70 <__adddf3+0x548>
   8ae04:	0005883a 	mov	r2,zero
   8ae08:	0007883a 	mov	r3,zero
   8ae0c:	0021883a 	mov	r16,zero
   8ae10:	003f4d06 	br	8ab48 <__alt_data_end+0xfffbf058>
   8ae14:	008007c4 	movi	r2,31
   8ae18:	11003c16 	blt	r2,r4,8af0c <__adddf3+0x5e4>
   8ae1c:	00800804 	movi	r2,32
   8ae20:	1105c83a 	sub	r2,r2,r4
   8ae24:	488e983a 	sll	r7,r9,r2
   8ae28:	310ad83a 	srl	r5,r6,r4
   8ae2c:	3084983a 	sll	r2,r6,r2
   8ae30:	4912d83a 	srl	r9,r9,r4
   8ae34:	394ab03a 	or	r5,r7,r5
   8ae38:	1004c03a 	cmpne	r2,r2,zero
   8ae3c:	288ab03a 	or	r5,r5,r2
   8ae40:	003f5306 	br	8ab90 <__alt_data_end+0xfffbf0a0>
   8ae44:	4448b03a 	or	r4,r8,r17
   8ae48:	20003e26 	beq	r4,zero,8af44 <__adddf3+0x61c>
   8ae4c:	00c6303a 	nor	r3,zero,r3
   8ae50:	18003a1e 	bne	r3,zero,8af3c <__adddf3+0x614>
   8ae54:	3463c83a 	sub	r17,r6,r17
   8ae58:	4a07c83a 	sub	r3,r9,r8
   8ae5c:	344d803a 	cmpltu	r6,r6,r17
   8ae60:	1991c83a 	sub	r8,r3,r6
   8ae64:	1021883a 	mov	r16,r2
   8ae68:	3825883a 	mov	r18,r7
   8ae6c:	003f0a06 	br	8aa98 <__alt_data_end+0xfffbefa8>
   8ae70:	2023883a 	mov	r17,r4
   8ae74:	003f0d06 	br	8aaac <__alt_data_end+0xfffbefbc>
   8ae78:	0081ffc4 	movi	r2,2047
   8ae7c:	80bf3f1e 	bne	r16,r2,8ab7c <__alt_data_end+0xfffbf08c>
   8ae80:	003ec806 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8ae84:	0005883a 	mov	r2,zero
   8ae88:	003fb106 	br	8ad50 <__alt_data_end+0xfffbf260>
   8ae8c:	0007883a 	mov	r3,zero
   8ae90:	003fbc06 	br	8ad84 <__alt_data_end+0xfffbf294>
   8ae94:	4444b03a 	or	r2,r8,r17
   8ae98:	8000871e 	bne	r16,zero,8b0b8 <__adddf3+0x790>
   8ae9c:	1000ba26 	beq	r2,zero,8b188 <__adddf3+0x860>
   8aea0:	4984b03a 	or	r2,r9,r6
   8aea4:	103ebf26 	beq	r2,zero,8a9a4 <__alt_data_end+0xfffbeeb4>
   8aea8:	8985883a 	add	r2,r17,r6
   8aeac:	4247883a 	add	r3,r8,r9
   8aeb0:	1451803a 	cmpltu	r8,r2,r17
   8aeb4:	40d1883a 	add	r8,r8,r3
   8aeb8:	40c0202c 	andhi	r3,r8,128
   8aebc:	1023883a 	mov	r17,r2
   8aec0:	183f1a26 	beq	r3,zero,8ab2c <__alt_data_end+0xfffbf03c>
   8aec4:	00bfe034 	movhi	r2,65408
   8aec8:	10bfffc4 	addi	r2,r2,-1
   8aecc:	2021883a 	mov	r16,r4
   8aed0:	4090703a 	and	r8,r8,r2
   8aed4:	003eb306 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8aed8:	4444b03a 	or	r2,r8,r17
   8aedc:	8000291e 	bne	r16,zero,8af84 <__adddf3+0x65c>
   8aee0:	10004b1e 	bne	r2,zero,8b010 <__adddf3+0x6e8>
   8aee4:	4990b03a 	or	r8,r9,r6
   8aee8:	40008b26 	beq	r8,zero,8b118 <__adddf3+0x7f0>
   8aeec:	4811883a 	mov	r8,r9
   8aef0:	3023883a 	mov	r17,r6
   8aef4:	3825883a 	mov	r18,r7
   8aef8:	003eaa06 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8aefc:	1021883a 	mov	r16,r2
   8af00:	0011883a 	mov	r8,zero
   8af04:	0005883a 	mov	r2,zero
   8af08:	003f0f06 	br	8ab48 <__alt_data_end+0xfffbf058>
   8af0c:	217ff804 	addi	r5,r4,-32
   8af10:	00800804 	movi	r2,32
   8af14:	494ad83a 	srl	r5,r9,r5
   8af18:	20807d26 	beq	r4,r2,8b110 <__adddf3+0x7e8>
   8af1c:	00801004 	movi	r2,64
   8af20:	1109c83a 	sub	r4,r2,r4
   8af24:	4912983a 	sll	r9,r9,r4
   8af28:	498cb03a 	or	r6,r9,r6
   8af2c:	300cc03a 	cmpne	r6,r6,zero
   8af30:	298ab03a 	or	r5,r5,r6
   8af34:	0013883a 	mov	r9,zero
   8af38:	003f1506 	br	8ab90 <__alt_data_end+0xfffbf0a0>
   8af3c:	0101ffc4 	movi	r4,2047
   8af40:	113f9a1e 	bne	r2,r4,8adac <__alt_data_end+0xfffbf2bc>
   8af44:	4811883a 	mov	r8,r9
   8af48:	3023883a 	mov	r17,r6
   8af4c:	1021883a 	mov	r16,r2
   8af50:	3825883a 	mov	r18,r7
   8af54:	003e9306 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8af58:	8000161e 	bne	r16,zero,8afb4 <__adddf3+0x68c>
   8af5c:	444ab03a 	or	r5,r8,r17
   8af60:	28005126 	beq	r5,zero,8b0a8 <__adddf3+0x780>
   8af64:	0108303a 	nor	r4,zero,r4
   8af68:	20004d1e 	bne	r4,zero,8b0a0 <__adddf3+0x778>
   8af6c:	89a3883a 	add	r17,r17,r6
   8af70:	4253883a 	add	r9,r8,r9
   8af74:	898d803a 	cmpltu	r6,r17,r6
   8af78:	3251883a 	add	r8,r6,r9
   8af7c:	1021883a 	mov	r16,r2
   8af80:	003f0806 	br	8aba4 <__alt_data_end+0xfffbf0b4>
   8af84:	1000301e 	bne	r2,zero,8b048 <__adddf3+0x720>
   8af88:	4984b03a 	or	r2,r9,r6
   8af8c:	10007126 	beq	r2,zero,8b154 <__adddf3+0x82c>
   8af90:	4811883a 	mov	r8,r9
   8af94:	3023883a 	mov	r17,r6
   8af98:	3825883a 	mov	r18,r7
   8af9c:	0401ffc4 	movi	r16,2047
   8afa0:	003e8006 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8afa4:	4462b03a 	or	r17,r8,r17
   8afa8:	8822c03a 	cmpne	r17,r17,zero
   8afac:	0007883a 	mov	r3,zero
   8afb0:	003f8b06 	br	8ade0 <__alt_data_end+0xfffbf2f0>
   8afb4:	0141ffc4 	movi	r5,2047
   8afb8:	11403b26 	beq	r2,r5,8b0a8 <__adddf3+0x780>
   8afbc:	0109c83a 	sub	r4,zero,r4
   8afc0:	42002034 	orhi	r8,r8,128
   8afc4:	01400e04 	movi	r5,56
   8afc8:	29006716 	blt	r5,r4,8b168 <__adddf3+0x840>
   8afcc:	014007c4 	movi	r5,31
   8afd0:	29007016 	blt	r5,r4,8b194 <__adddf3+0x86c>
   8afd4:	01400804 	movi	r5,32
   8afd8:	290bc83a 	sub	r5,r5,r4
   8afdc:	4154983a 	sll	r10,r8,r5
   8afe0:	890ed83a 	srl	r7,r17,r4
   8afe4:	894a983a 	sll	r5,r17,r5
   8afe8:	4108d83a 	srl	r4,r8,r4
   8afec:	51e2b03a 	or	r17,r10,r7
   8aff0:	280ac03a 	cmpne	r5,r5,zero
   8aff4:	8962b03a 	or	r17,r17,r5
   8aff8:	89a3883a 	add	r17,r17,r6
   8affc:	2253883a 	add	r9,r4,r9
   8b000:	898d803a 	cmpltu	r6,r17,r6
   8b004:	3251883a 	add	r8,r6,r9
   8b008:	1021883a 	mov	r16,r2
   8b00c:	003ee506 	br	8aba4 <__alt_data_end+0xfffbf0b4>
   8b010:	4984b03a 	or	r2,r9,r6
   8b014:	103e6326 	beq	r2,zero,8a9a4 <__alt_data_end+0xfffbeeb4>
   8b018:	8987c83a 	sub	r3,r17,r6
   8b01c:	88c9803a 	cmpltu	r4,r17,r3
   8b020:	4245c83a 	sub	r2,r8,r9
   8b024:	1105c83a 	sub	r2,r2,r4
   8b028:	1100202c 	andhi	r4,r2,128
   8b02c:	203ebb26 	beq	r4,zero,8ab1c <__alt_data_end+0xfffbf02c>
   8b030:	3463c83a 	sub	r17,r6,r17
   8b034:	4a07c83a 	sub	r3,r9,r8
   8b038:	344d803a 	cmpltu	r6,r6,r17
   8b03c:	1991c83a 	sub	r8,r3,r6
   8b040:	3825883a 	mov	r18,r7
   8b044:	003e5706 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8b048:	4984b03a 	or	r2,r9,r6
   8b04c:	10002e26 	beq	r2,zero,8b108 <__adddf3+0x7e0>
   8b050:	4004d0fa 	srli	r2,r8,3
   8b054:	8822d0fa 	srli	r17,r17,3
   8b058:	4010977a 	slli	r8,r8,29
   8b05c:	10c0022c 	andhi	r3,r2,8
   8b060:	4462b03a 	or	r17,r8,r17
   8b064:	18000826 	beq	r3,zero,8b088 <__adddf3+0x760>
   8b068:	4808d0fa 	srli	r4,r9,3
   8b06c:	20c0022c 	andhi	r3,r4,8
   8b070:	1800051e 	bne	r3,zero,8b088 <__adddf3+0x760>
   8b074:	300cd0fa 	srli	r6,r6,3
   8b078:	4806977a 	slli	r3,r9,29
   8b07c:	2005883a 	mov	r2,r4
   8b080:	3825883a 	mov	r18,r7
   8b084:	19a2b03a 	or	r17,r3,r6
   8b088:	8810d77a 	srli	r8,r17,29
   8b08c:	100490fa 	slli	r2,r2,3
   8b090:	882290fa 	slli	r17,r17,3
   8b094:	0401ffc4 	movi	r16,2047
   8b098:	4090b03a 	or	r8,r8,r2
   8b09c:	003e4106 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8b0a0:	0141ffc4 	movi	r5,2047
   8b0a4:	117fc71e 	bne	r2,r5,8afc4 <__alt_data_end+0xfffbf4d4>
   8b0a8:	4811883a 	mov	r8,r9
   8b0ac:	3023883a 	mov	r17,r6
   8b0b0:	1021883a 	mov	r16,r2
   8b0b4:	003e3b06 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8b0b8:	10002f26 	beq	r2,zero,8b178 <__adddf3+0x850>
   8b0bc:	4984b03a 	or	r2,r9,r6
   8b0c0:	10001126 	beq	r2,zero,8b108 <__adddf3+0x7e0>
   8b0c4:	4004d0fa 	srli	r2,r8,3
   8b0c8:	8822d0fa 	srli	r17,r17,3
   8b0cc:	4010977a 	slli	r8,r8,29
   8b0d0:	10c0022c 	andhi	r3,r2,8
   8b0d4:	4462b03a 	or	r17,r8,r17
   8b0d8:	183feb26 	beq	r3,zero,8b088 <__alt_data_end+0xfffbf598>
   8b0dc:	4808d0fa 	srli	r4,r9,3
   8b0e0:	20c0022c 	andhi	r3,r4,8
   8b0e4:	183fe81e 	bne	r3,zero,8b088 <__alt_data_end+0xfffbf598>
   8b0e8:	300cd0fa 	srli	r6,r6,3
   8b0ec:	4806977a 	slli	r3,r9,29
   8b0f0:	2005883a 	mov	r2,r4
   8b0f4:	19a2b03a 	or	r17,r3,r6
   8b0f8:	003fe306 	br	8b088 <__alt_data_end+0xfffbf598>
   8b0fc:	0011883a 	mov	r8,zero
   8b100:	0005883a 	mov	r2,zero
   8b104:	003e3f06 	br	8aa04 <__alt_data_end+0xfffbef14>
   8b108:	0401ffc4 	movi	r16,2047
   8b10c:	003e2506 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8b110:	0013883a 	mov	r9,zero
   8b114:	003f8406 	br	8af28 <__alt_data_end+0xfffbf438>
   8b118:	0005883a 	mov	r2,zero
   8b11c:	0007883a 	mov	r3,zero
   8b120:	003e8906 	br	8ab48 <__alt_data_end+0xfffbf058>
   8b124:	197ff804 	addi	r5,r3,-32
   8b128:	01000804 	movi	r4,32
   8b12c:	414ad83a 	srl	r5,r8,r5
   8b130:	19002426 	beq	r3,r4,8b1c4 <__adddf3+0x89c>
   8b134:	01001004 	movi	r4,64
   8b138:	20c7c83a 	sub	r3,r4,r3
   8b13c:	40c6983a 	sll	r3,r8,r3
   8b140:	1c46b03a 	or	r3,r3,r17
   8b144:	1806c03a 	cmpne	r3,r3,zero
   8b148:	28e2b03a 	or	r17,r5,r3
   8b14c:	0007883a 	mov	r3,zero
   8b150:	003f2306 	br	8ade0 <__alt_data_end+0xfffbf2f0>
   8b154:	0007883a 	mov	r3,zero
   8b158:	5811883a 	mov	r8,r11
   8b15c:	00bfffc4 	movi	r2,-1
   8b160:	0401ffc4 	movi	r16,2047
   8b164:	003e7806 	br	8ab48 <__alt_data_end+0xfffbf058>
   8b168:	4462b03a 	or	r17,r8,r17
   8b16c:	8822c03a 	cmpne	r17,r17,zero
   8b170:	0009883a 	mov	r4,zero
   8b174:	003fa006 	br	8aff8 <__alt_data_end+0xfffbf508>
   8b178:	4811883a 	mov	r8,r9
   8b17c:	3023883a 	mov	r17,r6
   8b180:	0401ffc4 	movi	r16,2047
   8b184:	003e0706 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8b188:	4811883a 	mov	r8,r9
   8b18c:	3023883a 	mov	r17,r6
   8b190:	003e0406 	br	8a9a4 <__alt_data_end+0xfffbeeb4>
   8b194:	21fff804 	addi	r7,r4,-32
   8b198:	01400804 	movi	r5,32
   8b19c:	41ced83a 	srl	r7,r8,r7
   8b1a0:	21400a26 	beq	r4,r5,8b1cc <__adddf3+0x8a4>
   8b1a4:	01401004 	movi	r5,64
   8b1a8:	2909c83a 	sub	r4,r5,r4
   8b1ac:	4108983a 	sll	r4,r8,r4
   8b1b0:	2448b03a 	or	r4,r4,r17
   8b1b4:	2008c03a 	cmpne	r4,r4,zero
   8b1b8:	3922b03a 	or	r17,r7,r4
   8b1bc:	0009883a 	mov	r4,zero
   8b1c0:	003f8d06 	br	8aff8 <__alt_data_end+0xfffbf508>
   8b1c4:	0007883a 	mov	r3,zero
   8b1c8:	003fdd06 	br	8b140 <__alt_data_end+0xfffbf650>
   8b1cc:	0009883a 	mov	r4,zero
   8b1d0:	003ff706 	br	8b1b0 <__alt_data_end+0xfffbf6c0>

0008b1d4 <__divdf3>:
   8b1d4:	defff204 	addi	sp,sp,-56
   8b1d8:	dd400915 	stw	r21,36(sp)
   8b1dc:	282ad53a 	srli	r21,r5,20
   8b1e0:	dd000815 	stw	r20,32(sp)
   8b1e4:	2828d7fa 	srli	r20,r5,31
   8b1e8:	dc000415 	stw	r16,16(sp)
   8b1ec:	04000434 	movhi	r16,16
   8b1f0:	df000c15 	stw	fp,48(sp)
   8b1f4:	843fffc4 	addi	r16,r16,-1
   8b1f8:	dfc00d15 	stw	ra,52(sp)
   8b1fc:	ddc00b15 	stw	r23,44(sp)
   8b200:	dd800a15 	stw	r22,40(sp)
   8b204:	dcc00715 	stw	r19,28(sp)
   8b208:	dc800615 	stw	r18,24(sp)
   8b20c:	dc400515 	stw	r17,20(sp)
   8b210:	ad41ffcc 	andi	r21,r21,2047
   8b214:	2c20703a 	and	r16,r5,r16
   8b218:	a7003fcc 	andi	fp,r20,255
   8b21c:	a8006126 	beq	r21,zero,8b3a4 <__divdf3+0x1d0>
   8b220:	0081ffc4 	movi	r2,2047
   8b224:	2025883a 	mov	r18,r4
   8b228:	a8803726 	beq	r21,r2,8b308 <__divdf3+0x134>
   8b22c:	80800434 	orhi	r2,r16,16
   8b230:	100490fa 	slli	r2,r2,3
   8b234:	2020d77a 	srli	r16,r4,29
   8b238:	202490fa 	slli	r18,r4,3
   8b23c:	ad7f0044 	addi	r21,r21,-1023
   8b240:	80a0b03a 	or	r16,r16,r2
   8b244:	0027883a 	mov	r19,zero
   8b248:	0013883a 	mov	r9,zero
   8b24c:	3804d53a 	srli	r2,r7,20
   8b250:	382cd7fa 	srli	r22,r7,31
   8b254:	04400434 	movhi	r17,16
   8b258:	8c7fffc4 	addi	r17,r17,-1
   8b25c:	1081ffcc 	andi	r2,r2,2047
   8b260:	3011883a 	mov	r8,r6
   8b264:	3c62703a 	and	r17,r7,r17
   8b268:	b5c03fcc 	andi	r23,r22,255
   8b26c:	10006c26 	beq	r2,zero,8b420 <__divdf3+0x24c>
   8b270:	00c1ffc4 	movi	r3,2047
   8b274:	10c06426 	beq	r2,r3,8b408 <__divdf3+0x234>
   8b278:	88c00434 	orhi	r3,r17,16
   8b27c:	180690fa 	slli	r3,r3,3
   8b280:	3022d77a 	srli	r17,r6,29
   8b284:	301090fa 	slli	r8,r6,3
   8b288:	10bf0044 	addi	r2,r2,-1023
   8b28c:	88e2b03a 	or	r17,r17,r3
   8b290:	000f883a 	mov	r7,zero
   8b294:	a58cf03a 	xor	r6,r20,r22
   8b298:	3cc8b03a 	or	r4,r7,r19
   8b29c:	a8abc83a 	sub	r21,r21,r2
   8b2a0:	008003c4 	movi	r2,15
   8b2a4:	3007883a 	mov	r3,r6
   8b2a8:	34c03fcc 	andi	r19,r6,255
   8b2ac:	11009036 	bltu	r2,r4,8b4f0 <__divdf3+0x31c>
   8b2b0:	200890ba 	slli	r4,r4,2
   8b2b4:	00800274 	movhi	r2,9
   8b2b8:	10acb204 	addi	r2,r2,-19768
   8b2bc:	2089883a 	add	r4,r4,r2
   8b2c0:	20800017 	ldw	r2,0(r4)
   8b2c4:	1000683a 	jmp	r2
   8b2c8:	0008b4f0 	cmpltui	zero,zero,8915
   8b2cc:	0008b340 	call	8b34 <__reset-0x774cc>
   8b2d0:	0008b4e0 	cmpeqi	zero,zero,8915
   8b2d4:	0008b334 	movhi	zero,8908
   8b2d8:	0008b4e0 	cmpeqi	zero,zero,8915
   8b2dc:	0008b4b4 	movhi	zero,8914
   8b2e0:	0008b4e0 	cmpeqi	zero,zero,8915
   8b2e4:	0008b334 	movhi	zero,8908
   8b2e8:	0008b340 	call	8b34 <__reset-0x774cc>
   8b2ec:	0008b340 	call	8b34 <__reset-0x774cc>
   8b2f0:	0008b4b4 	movhi	zero,8914
   8b2f4:	0008b334 	movhi	zero,8908
   8b2f8:	0008b324 	muli	zero,zero,8908
   8b2fc:	0008b324 	muli	zero,zero,8908
   8b300:	0008b324 	muli	zero,zero,8908
   8b304:	0008b7d4 	movui	zero,8927
   8b308:	2404b03a 	or	r2,r4,r16
   8b30c:	1000661e 	bne	r2,zero,8b4a8 <__divdf3+0x2d4>
   8b310:	04c00204 	movi	r19,8
   8b314:	0021883a 	mov	r16,zero
   8b318:	0025883a 	mov	r18,zero
   8b31c:	02400084 	movi	r9,2
   8b320:	003fca06 	br	8b24c <__alt_data_end+0xfffbf75c>
   8b324:	8023883a 	mov	r17,r16
   8b328:	9011883a 	mov	r8,r18
   8b32c:	e02f883a 	mov	r23,fp
   8b330:	480f883a 	mov	r7,r9
   8b334:	00800084 	movi	r2,2
   8b338:	3881311e 	bne	r7,r2,8b800 <__divdf3+0x62c>
   8b33c:	b827883a 	mov	r19,r23
   8b340:	98c0004c 	andi	r3,r19,1
   8b344:	0081ffc4 	movi	r2,2047
   8b348:	000b883a 	mov	r5,zero
   8b34c:	0025883a 	mov	r18,zero
   8b350:	1004953a 	slli	r2,r2,20
   8b354:	18c03fcc 	andi	r3,r3,255
   8b358:	04400434 	movhi	r17,16
   8b35c:	8c7fffc4 	addi	r17,r17,-1
   8b360:	180697fa 	slli	r3,r3,31
   8b364:	2c4a703a 	and	r5,r5,r17
   8b368:	288ab03a 	or	r5,r5,r2
   8b36c:	28c6b03a 	or	r3,r5,r3
   8b370:	9005883a 	mov	r2,r18
   8b374:	dfc00d17 	ldw	ra,52(sp)
   8b378:	df000c17 	ldw	fp,48(sp)
   8b37c:	ddc00b17 	ldw	r23,44(sp)
   8b380:	dd800a17 	ldw	r22,40(sp)
   8b384:	dd400917 	ldw	r21,36(sp)
   8b388:	dd000817 	ldw	r20,32(sp)
   8b38c:	dcc00717 	ldw	r19,28(sp)
   8b390:	dc800617 	ldw	r18,24(sp)
   8b394:	dc400517 	ldw	r17,20(sp)
   8b398:	dc000417 	ldw	r16,16(sp)
   8b39c:	dec00e04 	addi	sp,sp,56
   8b3a0:	f800283a 	ret
   8b3a4:	2404b03a 	or	r2,r4,r16
   8b3a8:	2027883a 	mov	r19,r4
   8b3ac:	10003926 	beq	r2,zero,8b494 <__divdf3+0x2c0>
   8b3b0:	80012e26 	beq	r16,zero,8b86c <__divdf3+0x698>
   8b3b4:	8009883a 	mov	r4,r16
   8b3b8:	d9800315 	stw	r6,12(sp)
   8b3bc:	d9c00215 	stw	r7,8(sp)
   8b3c0:	008cf2c0 	call	8cf2c <__clzsi2>
   8b3c4:	d9800317 	ldw	r6,12(sp)
   8b3c8:	d9c00217 	ldw	r7,8(sp)
   8b3cc:	113ffd44 	addi	r4,r2,-11
   8b3d0:	00c00704 	movi	r3,28
   8b3d4:	19012116 	blt	r3,r4,8b85c <__divdf3+0x688>
   8b3d8:	00c00744 	movi	r3,29
   8b3dc:	147ffe04 	addi	r17,r2,-8
   8b3e0:	1907c83a 	sub	r3,r3,r4
   8b3e4:	8460983a 	sll	r16,r16,r17
   8b3e8:	98c6d83a 	srl	r3,r19,r3
   8b3ec:	9c64983a 	sll	r18,r19,r17
   8b3f0:	1c20b03a 	or	r16,r3,r16
   8b3f4:	1080fcc4 	addi	r2,r2,1011
   8b3f8:	00abc83a 	sub	r21,zero,r2
   8b3fc:	0027883a 	mov	r19,zero
   8b400:	0013883a 	mov	r9,zero
   8b404:	003f9106 	br	8b24c <__alt_data_end+0xfffbf75c>
   8b408:	3446b03a 	or	r3,r6,r17
   8b40c:	18001f1e 	bne	r3,zero,8b48c <__divdf3+0x2b8>
   8b410:	0023883a 	mov	r17,zero
   8b414:	0011883a 	mov	r8,zero
   8b418:	01c00084 	movi	r7,2
   8b41c:	003f9d06 	br	8b294 <__alt_data_end+0xfffbf7a4>
   8b420:	3446b03a 	or	r3,r6,r17
   8b424:	18001526 	beq	r3,zero,8b47c <__divdf3+0x2a8>
   8b428:	88011b26 	beq	r17,zero,8b898 <__divdf3+0x6c4>
   8b42c:	8809883a 	mov	r4,r17
   8b430:	d9800315 	stw	r6,12(sp)
   8b434:	da400115 	stw	r9,4(sp)
   8b438:	008cf2c0 	call	8cf2c <__clzsi2>
   8b43c:	d9800317 	ldw	r6,12(sp)
   8b440:	da400117 	ldw	r9,4(sp)
   8b444:	113ffd44 	addi	r4,r2,-11
   8b448:	00c00704 	movi	r3,28
   8b44c:	19010e16 	blt	r3,r4,8b888 <__divdf3+0x6b4>
   8b450:	00c00744 	movi	r3,29
   8b454:	123ffe04 	addi	r8,r2,-8
   8b458:	1907c83a 	sub	r3,r3,r4
   8b45c:	8a22983a 	sll	r17,r17,r8
   8b460:	30c6d83a 	srl	r3,r6,r3
   8b464:	3210983a 	sll	r8,r6,r8
   8b468:	1c62b03a 	or	r17,r3,r17
   8b46c:	1080fcc4 	addi	r2,r2,1011
   8b470:	0085c83a 	sub	r2,zero,r2
   8b474:	000f883a 	mov	r7,zero
   8b478:	003f8606 	br	8b294 <__alt_data_end+0xfffbf7a4>
   8b47c:	0023883a 	mov	r17,zero
   8b480:	0011883a 	mov	r8,zero
   8b484:	01c00044 	movi	r7,1
   8b488:	003f8206 	br	8b294 <__alt_data_end+0xfffbf7a4>
   8b48c:	01c000c4 	movi	r7,3
   8b490:	003f8006 	br	8b294 <__alt_data_end+0xfffbf7a4>
   8b494:	04c00104 	movi	r19,4
   8b498:	0021883a 	mov	r16,zero
   8b49c:	0025883a 	mov	r18,zero
   8b4a0:	02400044 	movi	r9,1
   8b4a4:	003f6906 	br	8b24c <__alt_data_end+0xfffbf75c>
   8b4a8:	04c00304 	movi	r19,12
   8b4ac:	024000c4 	movi	r9,3
   8b4b0:	003f6606 	br	8b24c <__alt_data_end+0xfffbf75c>
   8b4b4:	01400434 	movhi	r5,16
   8b4b8:	0007883a 	mov	r3,zero
   8b4bc:	297fffc4 	addi	r5,r5,-1
   8b4c0:	04bfffc4 	movi	r18,-1
   8b4c4:	0081ffc4 	movi	r2,2047
   8b4c8:	003fa106 	br	8b350 <__alt_data_end+0xfffbf860>
   8b4cc:	00c00044 	movi	r3,1
   8b4d0:	1887c83a 	sub	r3,r3,r2
   8b4d4:	01000e04 	movi	r4,56
   8b4d8:	20c1210e 	bge	r4,r3,8b960 <__divdf3+0x78c>
   8b4dc:	98c0004c 	andi	r3,r19,1
   8b4e0:	0005883a 	mov	r2,zero
   8b4e4:	000b883a 	mov	r5,zero
   8b4e8:	0025883a 	mov	r18,zero
   8b4ec:	003f9806 	br	8b350 <__alt_data_end+0xfffbf860>
   8b4f0:	8c00fd36 	bltu	r17,r16,8b8e8 <__divdf3+0x714>
   8b4f4:	8440fb26 	beq	r16,r17,8b8e4 <__divdf3+0x710>
   8b4f8:	8007883a 	mov	r3,r16
   8b4fc:	ad7fffc4 	addi	r21,r21,-1
   8b500:	0021883a 	mov	r16,zero
   8b504:	4004d63a 	srli	r2,r8,24
   8b508:	8822923a 	slli	r17,r17,8
   8b50c:	1809883a 	mov	r4,r3
   8b510:	402c923a 	slli	r22,r8,8
   8b514:	88b8b03a 	or	fp,r17,r2
   8b518:	e028d43a 	srli	r20,fp,16
   8b51c:	d8c00015 	stw	r3,0(sp)
   8b520:	e5ffffcc 	andi	r23,fp,65535
   8b524:	a00b883a 	mov	r5,r20
   8b528:	008a86c0 	call	8a86c <__udivsi3>
   8b52c:	d8c00017 	ldw	r3,0(sp)
   8b530:	a00b883a 	mov	r5,r20
   8b534:	d8800315 	stw	r2,12(sp)
   8b538:	1809883a 	mov	r4,r3
   8b53c:	008a8d00 	call	8a8d0 <__umodsi3>
   8b540:	d9800317 	ldw	r6,12(sp)
   8b544:	1006943a 	slli	r3,r2,16
   8b548:	9004d43a 	srli	r2,r18,16
   8b54c:	b9a3383a 	mul	r17,r23,r6
   8b550:	10c4b03a 	or	r2,r2,r3
   8b554:	1440062e 	bgeu	r2,r17,8b570 <__divdf3+0x39c>
   8b558:	1705883a 	add	r2,r2,fp
   8b55c:	30ffffc4 	addi	r3,r6,-1
   8b560:	1700ee36 	bltu	r2,fp,8b91c <__divdf3+0x748>
   8b564:	1440ed2e 	bgeu	r2,r17,8b91c <__divdf3+0x748>
   8b568:	31bfff84 	addi	r6,r6,-2
   8b56c:	1705883a 	add	r2,r2,fp
   8b570:	1463c83a 	sub	r17,r2,r17
   8b574:	a00b883a 	mov	r5,r20
   8b578:	8809883a 	mov	r4,r17
   8b57c:	d9800315 	stw	r6,12(sp)
   8b580:	008a86c0 	call	8a86c <__udivsi3>
   8b584:	a00b883a 	mov	r5,r20
   8b588:	8809883a 	mov	r4,r17
   8b58c:	d8800215 	stw	r2,8(sp)
   8b590:	008a8d00 	call	8a8d0 <__umodsi3>
   8b594:	d9c00217 	ldw	r7,8(sp)
   8b598:	1004943a 	slli	r2,r2,16
   8b59c:	94bfffcc 	andi	r18,r18,65535
   8b5a0:	b9d1383a 	mul	r8,r23,r7
   8b5a4:	90a4b03a 	or	r18,r18,r2
   8b5a8:	d9800317 	ldw	r6,12(sp)
   8b5ac:	9200062e 	bgeu	r18,r8,8b5c8 <__divdf3+0x3f4>
   8b5b0:	9725883a 	add	r18,r18,fp
   8b5b4:	38bfffc4 	addi	r2,r7,-1
   8b5b8:	9700d636 	bltu	r18,fp,8b914 <__divdf3+0x740>
   8b5bc:	9200d52e 	bgeu	r18,r8,8b914 <__divdf3+0x740>
   8b5c0:	39ffff84 	addi	r7,r7,-2
   8b5c4:	9725883a 	add	r18,r18,fp
   8b5c8:	3004943a 	slli	r2,r6,16
   8b5cc:	b012d43a 	srli	r9,r22,16
   8b5d0:	b1bfffcc 	andi	r6,r22,65535
   8b5d4:	11e2b03a 	or	r17,r2,r7
   8b5d8:	8806d43a 	srli	r3,r17,16
   8b5dc:	893fffcc 	andi	r4,r17,65535
   8b5e0:	218b383a 	mul	r5,r4,r6
   8b5e4:	30c5383a 	mul	r2,r6,r3
   8b5e8:	2249383a 	mul	r4,r4,r9
   8b5ec:	280ed43a 	srli	r7,r5,16
   8b5f0:	9225c83a 	sub	r18,r18,r8
   8b5f4:	2089883a 	add	r4,r4,r2
   8b5f8:	3909883a 	add	r4,r7,r4
   8b5fc:	1a47383a 	mul	r3,r3,r9
   8b600:	2080022e 	bgeu	r4,r2,8b60c <__divdf3+0x438>
   8b604:	00800074 	movhi	r2,1
   8b608:	1887883a 	add	r3,r3,r2
   8b60c:	2004d43a 	srli	r2,r4,16
   8b610:	2008943a 	slli	r4,r4,16
   8b614:	297fffcc 	andi	r5,r5,65535
   8b618:	10c7883a 	add	r3,r2,r3
   8b61c:	2149883a 	add	r4,r4,r5
   8b620:	90c0a536 	bltu	r18,r3,8b8b8 <__divdf3+0x6e4>
   8b624:	90c0bf26 	beq	r18,r3,8b924 <__divdf3+0x750>
   8b628:	90c7c83a 	sub	r3,r18,r3
   8b62c:	810fc83a 	sub	r7,r16,r4
   8b630:	81e5803a 	cmpltu	r18,r16,r7
   8b634:	1ca5c83a 	sub	r18,r3,r18
   8b638:	e480c126 	beq	fp,r18,8b940 <__divdf3+0x76c>
   8b63c:	a00b883a 	mov	r5,r20
   8b640:	9009883a 	mov	r4,r18
   8b644:	d9800315 	stw	r6,12(sp)
   8b648:	d9c00215 	stw	r7,8(sp)
   8b64c:	da400115 	stw	r9,4(sp)
   8b650:	008a86c0 	call	8a86c <__udivsi3>
   8b654:	a00b883a 	mov	r5,r20
   8b658:	9009883a 	mov	r4,r18
   8b65c:	d8800015 	stw	r2,0(sp)
   8b660:	008a8d00 	call	8a8d0 <__umodsi3>
   8b664:	d9c00217 	ldw	r7,8(sp)
   8b668:	da000017 	ldw	r8,0(sp)
   8b66c:	1006943a 	slli	r3,r2,16
   8b670:	3804d43a 	srli	r2,r7,16
   8b674:	ba21383a 	mul	r16,r23,r8
   8b678:	d9800317 	ldw	r6,12(sp)
   8b67c:	10c4b03a 	or	r2,r2,r3
   8b680:	da400117 	ldw	r9,4(sp)
   8b684:	1400062e 	bgeu	r2,r16,8b6a0 <__divdf3+0x4cc>
   8b688:	1705883a 	add	r2,r2,fp
   8b68c:	40ffffc4 	addi	r3,r8,-1
   8b690:	1700ad36 	bltu	r2,fp,8b948 <__divdf3+0x774>
   8b694:	1400ac2e 	bgeu	r2,r16,8b948 <__divdf3+0x774>
   8b698:	423fff84 	addi	r8,r8,-2
   8b69c:	1705883a 	add	r2,r2,fp
   8b6a0:	1421c83a 	sub	r16,r2,r16
   8b6a4:	a00b883a 	mov	r5,r20
   8b6a8:	8009883a 	mov	r4,r16
   8b6ac:	d9800315 	stw	r6,12(sp)
   8b6b0:	d9c00215 	stw	r7,8(sp)
   8b6b4:	da000015 	stw	r8,0(sp)
   8b6b8:	da400115 	stw	r9,4(sp)
   8b6bc:	008a86c0 	call	8a86c <__udivsi3>
   8b6c0:	8009883a 	mov	r4,r16
   8b6c4:	a00b883a 	mov	r5,r20
   8b6c8:	1025883a 	mov	r18,r2
   8b6cc:	008a8d00 	call	8a8d0 <__umodsi3>
   8b6d0:	d9c00217 	ldw	r7,8(sp)
   8b6d4:	1004943a 	slli	r2,r2,16
   8b6d8:	bcaf383a 	mul	r23,r23,r18
   8b6dc:	393fffcc 	andi	r4,r7,65535
   8b6e0:	2088b03a 	or	r4,r4,r2
   8b6e4:	d9800317 	ldw	r6,12(sp)
   8b6e8:	da000017 	ldw	r8,0(sp)
   8b6ec:	da400117 	ldw	r9,4(sp)
   8b6f0:	25c0062e 	bgeu	r4,r23,8b70c <__divdf3+0x538>
   8b6f4:	2709883a 	add	r4,r4,fp
   8b6f8:	90bfffc4 	addi	r2,r18,-1
   8b6fc:	27009436 	bltu	r4,fp,8b950 <__divdf3+0x77c>
   8b700:	25c0932e 	bgeu	r4,r23,8b950 <__divdf3+0x77c>
   8b704:	94bfff84 	addi	r18,r18,-2
   8b708:	2709883a 	add	r4,r4,fp
   8b70c:	4004943a 	slli	r2,r8,16
   8b710:	25efc83a 	sub	r23,r4,r23
   8b714:	1490b03a 	or	r8,r2,r18
   8b718:	4008d43a 	srli	r4,r8,16
   8b71c:	40ffffcc 	andi	r3,r8,65535
   8b720:	30c5383a 	mul	r2,r6,r3
   8b724:	1a47383a 	mul	r3,r3,r9
   8b728:	310d383a 	mul	r6,r6,r4
   8b72c:	100ad43a 	srli	r5,r2,16
   8b730:	4913383a 	mul	r9,r9,r4
   8b734:	1987883a 	add	r3,r3,r6
   8b738:	28c7883a 	add	r3,r5,r3
   8b73c:	1980022e 	bgeu	r3,r6,8b748 <__divdf3+0x574>
   8b740:	01000074 	movhi	r4,1
   8b744:	4913883a 	add	r9,r9,r4
   8b748:	1808d43a 	srli	r4,r3,16
   8b74c:	1806943a 	slli	r3,r3,16
   8b750:	10bfffcc 	andi	r2,r2,65535
   8b754:	2253883a 	add	r9,r4,r9
   8b758:	1887883a 	add	r3,r3,r2
   8b75c:	ba403836 	bltu	r23,r9,8b840 <__divdf3+0x66c>
   8b760:	ba403626 	beq	r23,r9,8b83c <__divdf3+0x668>
   8b764:	42000054 	ori	r8,r8,1
   8b768:	a880ffc4 	addi	r2,r21,1023
   8b76c:	00bf570e 	bge	zero,r2,8b4cc <__alt_data_end+0xfffbf9dc>
   8b770:	40c001cc 	andi	r3,r8,7
   8b774:	18000726 	beq	r3,zero,8b794 <__divdf3+0x5c0>
   8b778:	40c003cc 	andi	r3,r8,15
   8b77c:	01000104 	movi	r4,4
   8b780:	19000426 	beq	r3,r4,8b794 <__divdf3+0x5c0>
   8b784:	4107883a 	add	r3,r8,r4
   8b788:	1a11803a 	cmpltu	r8,r3,r8
   8b78c:	8a23883a 	add	r17,r17,r8
   8b790:	1811883a 	mov	r8,r3
   8b794:	88c0402c 	andhi	r3,r17,256
   8b798:	18000426 	beq	r3,zero,8b7ac <__divdf3+0x5d8>
   8b79c:	00ffc034 	movhi	r3,65280
   8b7a0:	18ffffc4 	addi	r3,r3,-1
   8b7a4:	a8810004 	addi	r2,r21,1024
   8b7a8:	88e2703a 	and	r17,r17,r3
   8b7ac:	00c1ff84 	movi	r3,2046
   8b7b0:	18bee316 	blt	r3,r2,8b340 <__alt_data_end+0xfffbf850>
   8b7b4:	8824977a 	slli	r18,r17,29
   8b7b8:	4010d0fa 	srli	r8,r8,3
   8b7bc:	8822927a 	slli	r17,r17,9
   8b7c0:	1081ffcc 	andi	r2,r2,2047
   8b7c4:	9224b03a 	or	r18,r18,r8
   8b7c8:	880ad33a 	srli	r5,r17,12
   8b7cc:	98c0004c 	andi	r3,r19,1
   8b7d0:	003edf06 	br	8b350 <__alt_data_end+0xfffbf860>
   8b7d4:	8080022c 	andhi	r2,r16,8
   8b7d8:	10001226 	beq	r2,zero,8b824 <__divdf3+0x650>
   8b7dc:	8880022c 	andhi	r2,r17,8
   8b7e0:	1000101e 	bne	r2,zero,8b824 <__divdf3+0x650>
   8b7e4:	00800434 	movhi	r2,16
   8b7e8:	89400234 	orhi	r5,r17,8
   8b7ec:	10bfffc4 	addi	r2,r2,-1
   8b7f0:	b007883a 	mov	r3,r22
   8b7f4:	288a703a 	and	r5,r5,r2
   8b7f8:	4025883a 	mov	r18,r8
   8b7fc:	003f3106 	br	8b4c4 <__alt_data_end+0xfffbf9d4>
   8b800:	008000c4 	movi	r2,3
   8b804:	3880a626 	beq	r7,r2,8baa0 <__divdf3+0x8cc>
   8b808:	00800044 	movi	r2,1
   8b80c:	3880521e 	bne	r7,r2,8b958 <__divdf3+0x784>
   8b810:	b807883a 	mov	r3,r23
   8b814:	0005883a 	mov	r2,zero
   8b818:	000b883a 	mov	r5,zero
   8b81c:	0025883a 	mov	r18,zero
   8b820:	003ecb06 	br	8b350 <__alt_data_end+0xfffbf860>
   8b824:	00800434 	movhi	r2,16
   8b828:	81400234 	orhi	r5,r16,8
   8b82c:	10bfffc4 	addi	r2,r2,-1
   8b830:	a007883a 	mov	r3,r20
   8b834:	288a703a 	and	r5,r5,r2
   8b838:	003f2206 	br	8b4c4 <__alt_data_end+0xfffbf9d4>
   8b83c:	183fca26 	beq	r3,zero,8b768 <__alt_data_end+0xfffbfc78>
   8b840:	e5ef883a 	add	r23,fp,r23
   8b844:	40bfffc4 	addi	r2,r8,-1
   8b848:	bf00392e 	bgeu	r23,fp,8b930 <__divdf3+0x75c>
   8b84c:	1011883a 	mov	r8,r2
   8b850:	ba7fc41e 	bne	r23,r9,8b764 <__alt_data_end+0xfffbfc74>
   8b854:	b0ffc31e 	bne	r22,r3,8b764 <__alt_data_end+0xfffbfc74>
   8b858:	003fc306 	br	8b768 <__alt_data_end+0xfffbfc78>
   8b85c:	143ff604 	addi	r16,r2,-40
   8b860:	9c20983a 	sll	r16,r19,r16
   8b864:	0025883a 	mov	r18,zero
   8b868:	003ee206 	br	8b3f4 <__alt_data_end+0xfffbf904>
   8b86c:	d9800315 	stw	r6,12(sp)
   8b870:	d9c00215 	stw	r7,8(sp)
   8b874:	008cf2c0 	call	8cf2c <__clzsi2>
   8b878:	10800804 	addi	r2,r2,32
   8b87c:	d9c00217 	ldw	r7,8(sp)
   8b880:	d9800317 	ldw	r6,12(sp)
   8b884:	003ed106 	br	8b3cc <__alt_data_end+0xfffbf8dc>
   8b888:	147ff604 	addi	r17,r2,-40
   8b88c:	3462983a 	sll	r17,r6,r17
   8b890:	0011883a 	mov	r8,zero
   8b894:	003ef506 	br	8b46c <__alt_data_end+0xfffbf97c>
   8b898:	3009883a 	mov	r4,r6
   8b89c:	d9800315 	stw	r6,12(sp)
   8b8a0:	da400115 	stw	r9,4(sp)
   8b8a4:	008cf2c0 	call	8cf2c <__clzsi2>
   8b8a8:	10800804 	addi	r2,r2,32
   8b8ac:	da400117 	ldw	r9,4(sp)
   8b8b0:	d9800317 	ldw	r6,12(sp)
   8b8b4:	003ee306 	br	8b444 <__alt_data_end+0xfffbf954>
   8b8b8:	85a1883a 	add	r16,r16,r22
   8b8bc:	8585803a 	cmpltu	r2,r16,r22
   8b8c0:	1705883a 	add	r2,r2,fp
   8b8c4:	14a5883a 	add	r18,r2,r18
   8b8c8:	88bfffc4 	addi	r2,r17,-1
   8b8cc:	e4800c2e 	bgeu	fp,r18,8b900 <__divdf3+0x72c>
   8b8d0:	90c03e36 	bltu	r18,r3,8b9cc <__divdf3+0x7f8>
   8b8d4:	1c806926 	beq	r3,r18,8ba7c <__divdf3+0x8a8>
   8b8d8:	90c7c83a 	sub	r3,r18,r3
   8b8dc:	1023883a 	mov	r17,r2
   8b8e0:	003f5206 	br	8b62c <__alt_data_end+0xfffbfb3c>
   8b8e4:	923f0436 	bltu	r18,r8,8b4f8 <__alt_data_end+0xfffbfa08>
   8b8e8:	800897fa 	slli	r4,r16,31
   8b8ec:	9004d07a 	srli	r2,r18,1
   8b8f0:	8006d07a 	srli	r3,r16,1
   8b8f4:	902097fa 	slli	r16,r18,31
   8b8f8:	20a4b03a 	or	r18,r4,r2
   8b8fc:	003f0106 	br	8b504 <__alt_data_end+0xfffbfa14>
   8b900:	e4bff51e 	bne	fp,r18,8b8d8 <__alt_data_end+0xfffbfde8>
   8b904:	85bff22e 	bgeu	r16,r22,8b8d0 <__alt_data_end+0xfffbfde0>
   8b908:	e0c7c83a 	sub	r3,fp,r3
   8b90c:	1023883a 	mov	r17,r2
   8b910:	003f4606 	br	8b62c <__alt_data_end+0xfffbfb3c>
   8b914:	100f883a 	mov	r7,r2
   8b918:	003f2b06 	br	8b5c8 <__alt_data_end+0xfffbfad8>
   8b91c:	180d883a 	mov	r6,r3
   8b920:	003f1306 	br	8b570 <__alt_data_end+0xfffbfa80>
   8b924:	813fe436 	bltu	r16,r4,8b8b8 <__alt_data_end+0xfffbfdc8>
   8b928:	0007883a 	mov	r3,zero
   8b92c:	003f3f06 	br	8b62c <__alt_data_end+0xfffbfb3c>
   8b930:	ba402c36 	bltu	r23,r9,8b9e4 <__divdf3+0x810>
   8b934:	4dc05426 	beq	r9,r23,8ba88 <__divdf3+0x8b4>
   8b938:	1011883a 	mov	r8,r2
   8b93c:	003f8906 	br	8b764 <__alt_data_end+0xfffbfc74>
   8b940:	023fffc4 	movi	r8,-1
   8b944:	003f8806 	br	8b768 <__alt_data_end+0xfffbfc78>
   8b948:	1811883a 	mov	r8,r3
   8b94c:	003f5406 	br	8b6a0 <__alt_data_end+0xfffbfbb0>
   8b950:	1025883a 	mov	r18,r2
   8b954:	003f6d06 	br	8b70c <__alt_data_end+0xfffbfc1c>
   8b958:	b827883a 	mov	r19,r23
   8b95c:	003f8206 	br	8b768 <__alt_data_end+0xfffbfc78>
   8b960:	010007c4 	movi	r4,31
   8b964:	20c02616 	blt	r4,r3,8ba00 <__divdf3+0x82c>
   8b968:	00800804 	movi	r2,32
   8b96c:	10c5c83a 	sub	r2,r2,r3
   8b970:	888a983a 	sll	r5,r17,r2
   8b974:	40c8d83a 	srl	r4,r8,r3
   8b978:	4084983a 	sll	r2,r8,r2
   8b97c:	88e2d83a 	srl	r17,r17,r3
   8b980:	2906b03a 	or	r3,r5,r4
   8b984:	1004c03a 	cmpne	r2,r2,zero
   8b988:	1886b03a 	or	r3,r3,r2
   8b98c:	188001cc 	andi	r2,r3,7
   8b990:	10000726 	beq	r2,zero,8b9b0 <__divdf3+0x7dc>
   8b994:	188003cc 	andi	r2,r3,15
   8b998:	01000104 	movi	r4,4
   8b99c:	11000426 	beq	r2,r4,8b9b0 <__divdf3+0x7dc>
   8b9a0:	1805883a 	mov	r2,r3
   8b9a4:	10c00104 	addi	r3,r2,4
   8b9a8:	1885803a 	cmpltu	r2,r3,r2
   8b9ac:	88a3883a 	add	r17,r17,r2
   8b9b0:	8880202c 	andhi	r2,r17,128
   8b9b4:	10002726 	beq	r2,zero,8ba54 <__divdf3+0x880>
   8b9b8:	98c0004c 	andi	r3,r19,1
   8b9bc:	00800044 	movi	r2,1
   8b9c0:	000b883a 	mov	r5,zero
   8b9c4:	0025883a 	mov	r18,zero
   8b9c8:	003e6106 	br	8b350 <__alt_data_end+0xfffbf860>
   8b9cc:	85a1883a 	add	r16,r16,r22
   8b9d0:	8585803a 	cmpltu	r2,r16,r22
   8b9d4:	1705883a 	add	r2,r2,fp
   8b9d8:	14a5883a 	add	r18,r2,r18
   8b9dc:	8c7fff84 	addi	r17,r17,-2
   8b9e0:	003f1106 	br	8b628 <__alt_data_end+0xfffbfb38>
   8b9e4:	b589883a 	add	r4,r22,r22
   8b9e8:	25ad803a 	cmpltu	r22,r4,r22
   8b9ec:	b739883a 	add	fp,r22,fp
   8b9f0:	40bfff84 	addi	r2,r8,-2
   8b9f4:	bf2f883a 	add	r23,r23,fp
   8b9f8:	202d883a 	mov	r22,r4
   8b9fc:	003f9306 	br	8b84c <__alt_data_end+0xfffbfd5c>
   8ba00:	013ff844 	movi	r4,-31
   8ba04:	2085c83a 	sub	r2,r4,r2
   8ba08:	8888d83a 	srl	r4,r17,r2
   8ba0c:	00800804 	movi	r2,32
   8ba10:	18802126 	beq	r3,r2,8ba98 <__divdf3+0x8c4>
   8ba14:	00801004 	movi	r2,64
   8ba18:	10c5c83a 	sub	r2,r2,r3
   8ba1c:	8884983a 	sll	r2,r17,r2
   8ba20:	1204b03a 	or	r2,r2,r8
   8ba24:	1004c03a 	cmpne	r2,r2,zero
   8ba28:	2084b03a 	or	r2,r4,r2
   8ba2c:	144001cc 	andi	r17,r2,7
   8ba30:	88000d1e 	bne	r17,zero,8ba68 <__divdf3+0x894>
   8ba34:	000b883a 	mov	r5,zero
   8ba38:	1024d0fa 	srli	r18,r2,3
   8ba3c:	98c0004c 	andi	r3,r19,1
   8ba40:	0005883a 	mov	r2,zero
   8ba44:	9464b03a 	or	r18,r18,r17
   8ba48:	003e4106 	br	8b350 <__alt_data_end+0xfffbf860>
   8ba4c:	1007883a 	mov	r3,r2
   8ba50:	0023883a 	mov	r17,zero
   8ba54:	880a927a 	slli	r5,r17,9
   8ba58:	1805883a 	mov	r2,r3
   8ba5c:	8822977a 	slli	r17,r17,29
   8ba60:	280ad33a 	srli	r5,r5,12
   8ba64:	003ff406 	br	8ba38 <__alt_data_end+0xfffbff48>
   8ba68:	10c003cc 	andi	r3,r2,15
   8ba6c:	01000104 	movi	r4,4
   8ba70:	193ff626 	beq	r3,r4,8ba4c <__alt_data_end+0xfffbff5c>
   8ba74:	0023883a 	mov	r17,zero
   8ba78:	003fca06 	br	8b9a4 <__alt_data_end+0xfffbfeb4>
   8ba7c:	813fd336 	bltu	r16,r4,8b9cc <__alt_data_end+0xfffbfedc>
   8ba80:	1023883a 	mov	r17,r2
   8ba84:	003fa806 	br	8b928 <__alt_data_end+0xfffbfe38>
   8ba88:	b0ffd636 	bltu	r22,r3,8b9e4 <__alt_data_end+0xfffbfef4>
   8ba8c:	1011883a 	mov	r8,r2
   8ba90:	b0ff341e 	bne	r22,r3,8b764 <__alt_data_end+0xfffbfc74>
   8ba94:	003f3406 	br	8b768 <__alt_data_end+0xfffbfc78>
   8ba98:	0005883a 	mov	r2,zero
   8ba9c:	003fe006 	br	8ba20 <__alt_data_end+0xfffbff30>
   8baa0:	00800434 	movhi	r2,16
   8baa4:	89400234 	orhi	r5,r17,8
   8baa8:	10bfffc4 	addi	r2,r2,-1
   8baac:	b807883a 	mov	r3,r23
   8bab0:	288a703a 	and	r5,r5,r2
   8bab4:	4025883a 	mov	r18,r8
   8bab8:	003e8206 	br	8b4c4 <__alt_data_end+0xfffbf9d4>

0008babc <__eqdf2>:
   8babc:	2804d53a 	srli	r2,r5,20
   8bac0:	3806d53a 	srli	r3,r7,20
   8bac4:	02000434 	movhi	r8,16
   8bac8:	423fffc4 	addi	r8,r8,-1
   8bacc:	1081ffcc 	andi	r2,r2,2047
   8bad0:	0281ffc4 	movi	r10,2047
   8bad4:	2a12703a 	and	r9,r5,r8
   8bad8:	18c1ffcc 	andi	r3,r3,2047
   8badc:	3a10703a 	and	r8,r7,r8
   8bae0:	280ad7fa 	srli	r5,r5,31
   8bae4:	380ed7fa 	srli	r7,r7,31
   8bae8:	12801026 	beq	r2,r10,8bb2c <__eqdf2+0x70>
   8baec:	0281ffc4 	movi	r10,2047
   8baf0:	1a800a26 	beq	r3,r10,8bb1c <__eqdf2+0x60>
   8baf4:	10c00226 	beq	r2,r3,8bb00 <__eqdf2+0x44>
   8baf8:	00800044 	movi	r2,1
   8bafc:	f800283a 	ret
   8bb00:	4a3ffd1e 	bne	r9,r8,8baf8 <__alt_data_end+0xfffc0008>
   8bb04:	21bffc1e 	bne	r4,r6,8baf8 <__alt_data_end+0xfffc0008>
   8bb08:	29c00c26 	beq	r5,r7,8bb3c <__eqdf2+0x80>
   8bb0c:	103ffa1e 	bne	r2,zero,8baf8 <__alt_data_end+0xfffc0008>
   8bb10:	2244b03a 	or	r2,r4,r9
   8bb14:	1004c03a 	cmpne	r2,r2,zero
   8bb18:	f800283a 	ret
   8bb1c:	3214b03a 	or	r10,r6,r8
   8bb20:	503ff426 	beq	r10,zero,8baf4 <__alt_data_end+0xfffc0004>
   8bb24:	00800044 	movi	r2,1
   8bb28:	f800283a 	ret
   8bb2c:	2254b03a 	or	r10,r4,r9
   8bb30:	503fee26 	beq	r10,zero,8baec <__alt_data_end+0xfffbfffc>
   8bb34:	00800044 	movi	r2,1
   8bb38:	f800283a 	ret
   8bb3c:	0005883a 	mov	r2,zero
   8bb40:	f800283a 	ret

0008bb44 <__gedf2>:
   8bb44:	2804d53a 	srli	r2,r5,20
   8bb48:	3806d53a 	srli	r3,r7,20
   8bb4c:	02000434 	movhi	r8,16
   8bb50:	423fffc4 	addi	r8,r8,-1
   8bb54:	1081ffcc 	andi	r2,r2,2047
   8bb58:	0241ffc4 	movi	r9,2047
   8bb5c:	2a14703a 	and	r10,r5,r8
   8bb60:	18c1ffcc 	andi	r3,r3,2047
   8bb64:	3a10703a 	and	r8,r7,r8
   8bb68:	280ad7fa 	srli	r5,r5,31
   8bb6c:	380ed7fa 	srli	r7,r7,31
   8bb70:	12401d26 	beq	r2,r9,8bbe8 <__gedf2+0xa4>
   8bb74:	0241ffc4 	movi	r9,2047
   8bb78:	1a401226 	beq	r3,r9,8bbc4 <__gedf2+0x80>
   8bb7c:	1000081e 	bne	r2,zero,8bba0 <__gedf2+0x5c>
   8bb80:	2296b03a 	or	r11,r4,r10
   8bb84:	5813003a 	cmpeq	r9,r11,zero
   8bb88:	1800091e 	bne	r3,zero,8bbb0 <__gedf2+0x6c>
   8bb8c:	3218b03a 	or	r12,r6,r8
   8bb90:	6000071e 	bne	r12,zero,8bbb0 <__gedf2+0x6c>
   8bb94:	0005883a 	mov	r2,zero
   8bb98:	5800101e 	bne	r11,zero,8bbdc <__gedf2+0x98>
   8bb9c:	f800283a 	ret
   8bba0:	18000c1e 	bne	r3,zero,8bbd4 <__gedf2+0x90>
   8bba4:	3212b03a 	or	r9,r6,r8
   8bba8:	48000c26 	beq	r9,zero,8bbdc <__gedf2+0x98>
   8bbac:	0013883a 	mov	r9,zero
   8bbb0:	39c03fcc 	andi	r7,r7,255
   8bbb4:	48000826 	beq	r9,zero,8bbd8 <__gedf2+0x94>
   8bbb8:	38000926 	beq	r7,zero,8bbe0 <__gedf2+0x9c>
   8bbbc:	00800044 	movi	r2,1
   8bbc0:	f800283a 	ret
   8bbc4:	3212b03a 	or	r9,r6,r8
   8bbc8:	483fec26 	beq	r9,zero,8bb7c <__alt_data_end+0xfffc008c>
   8bbcc:	00bfff84 	movi	r2,-2
   8bbd0:	f800283a 	ret
   8bbd4:	39c03fcc 	andi	r7,r7,255
   8bbd8:	29c00626 	beq	r5,r7,8bbf4 <__gedf2+0xb0>
   8bbdc:	283ff726 	beq	r5,zero,8bbbc <__alt_data_end+0xfffc00cc>
   8bbe0:	00bfffc4 	movi	r2,-1
   8bbe4:	f800283a 	ret
   8bbe8:	2292b03a 	or	r9,r4,r10
   8bbec:	483fe126 	beq	r9,zero,8bb74 <__alt_data_end+0xfffc0084>
   8bbf0:	003ff606 	br	8bbcc <__alt_data_end+0xfffc00dc>
   8bbf4:	18bff916 	blt	r3,r2,8bbdc <__alt_data_end+0xfffc00ec>
   8bbf8:	10c00316 	blt	r2,r3,8bc08 <__gedf2+0xc4>
   8bbfc:	42bff736 	bltu	r8,r10,8bbdc <__alt_data_end+0xfffc00ec>
   8bc00:	52000326 	beq	r10,r8,8bc10 <__gedf2+0xcc>
   8bc04:	5200042e 	bgeu	r10,r8,8bc18 <__gedf2+0xd4>
   8bc08:	283fec1e 	bne	r5,zero,8bbbc <__alt_data_end+0xfffc00cc>
   8bc0c:	003ff406 	br	8bbe0 <__alt_data_end+0xfffc00f0>
   8bc10:	313ff236 	bltu	r6,r4,8bbdc <__alt_data_end+0xfffc00ec>
   8bc14:	21bffc36 	bltu	r4,r6,8bc08 <__alt_data_end+0xfffc0118>
   8bc18:	0005883a 	mov	r2,zero
   8bc1c:	f800283a 	ret

0008bc20 <__ledf2>:
   8bc20:	2804d53a 	srli	r2,r5,20
   8bc24:	3810d53a 	srli	r8,r7,20
   8bc28:	00c00434 	movhi	r3,16
   8bc2c:	18ffffc4 	addi	r3,r3,-1
   8bc30:	1081ffcc 	andi	r2,r2,2047
   8bc34:	0241ffc4 	movi	r9,2047
   8bc38:	28d4703a 	and	r10,r5,r3
   8bc3c:	4201ffcc 	andi	r8,r8,2047
   8bc40:	38c6703a 	and	r3,r7,r3
   8bc44:	280ad7fa 	srli	r5,r5,31
   8bc48:	380ed7fa 	srli	r7,r7,31
   8bc4c:	12401f26 	beq	r2,r9,8bccc <__ledf2+0xac>
   8bc50:	0241ffc4 	movi	r9,2047
   8bc54:	42401426 	beq	r8,r9,8bca8 <__ledf2+0x88>
   8bc58:	1000091e 	bne	r2,zero,8bc80 <__ledf2+0x60>
   8bc5c:	2296b03a 	or	r11,r4,r10
   8bc60:	5813003a 	cmpeq	r9,r11,zero
   8bc64:	29403fcc 	andi	r5,r5,255
   8bc68:	40000a1e 	bne	r8,zero,8bc94 <__ledf2+0x74>
   8bc6c:	30d8b03a 	or	r12,r6,r3
   8bc70:	6000081e 	bne	r12,zero,8bc94 <__ledf2+0x74>
   8bc74:	0005883a 	mov	r2,zero
   8bc78:	5800111e 	bne	r11,zero,8bcc0 <__ledf2+0xa0>
   8bc7c:	f800283a 	ret
   8bc80:	29403fcc 	andi	r5,r5,255
   8bc84:	40000c1e 	bne	r8,zero,8bcb8 <__ledf2+0x98>
   8bc88:	30d2b03a 	or	r9,r6,r3
   8bc8c:	48000c26 	beq	r9,zero,8bcc0 <__ledf2+0xa0>
   8bc90:	0013883a 	mov	r9,zero
   8bc94:	39c03fcc 	andi	r7,r7,255
   8bc98:	48000826 	beq	r9,zero,8bcbc <__ledf2+0x9c>
   8bc9c:	38001126 	beq	r7,zero,8bce4 <__ledf2+0xc4>
   8bca0:	00800044 	movi	r2,1
   8bca4:	f800283a 	ret
   8bca8:	30d2b03a 	or	r9,r6,r3
   8bcac:	483fea26 	beq	r9,zero,8bc58 <__alt_data_end+0xfffc0168>
   8bcb0:	00800084 	movi	r2,2
   8bcb4:	f800283a 	ret
   8bcb8:	39c03fcc 	andi	r7,r7,255
   8bcbc:	39400726 	beq	r7,r5,8bcdc <__ledf2+0xbc>
   8bcc0:	2800081e 	bne	r5,zero,8bce4 <__ledf2+0xc4>
   8bcc4:	00800044 	movi	r2,1
   8bcc8:	f800283a 	ret
   8bccc:	2292b03a 	or	r9,r4,r10
   8bcd0:	483fdf26 	beq	r9,zero,8bc50 <__alt_data_end+0xfffc0160>
   8bcd4:	00800084 	movi	r2,2
   8bcd8:	f800283a 	ret
   8bcdc:	4080030e 	bge	r8,r2,8bcec <__ledf2+0xcc>
   8bce0:	383fef26 	beq	r7,zero,8bca0 <__alt_data_end+0xfffc01b0>
   8bce4:	00bfffc4 	movi	r2,-1
   8bce8:	f800283a 	ret
   8bcec:	123feb16 	blt	r2,r8,8bc9c <__alt_data_end+0xfffc01ac>
   8bcf0:	1abff336 	bltu	r3,r10,8bcc0 <__alt_data_end+0xfffc01d0>
   8bcf4:	50c00326 	beq	r10,r3,8bd04 <__ledf2+0xe4>
   8bcf8:	50c0042e 	bgeu	r10,r3,8bd0c <__ledf2+0xec>
   8bcfc:	283fe81e 	bne	r5,zero,8bca0 <__alt_data_end+0xfffc01b0>
   8bd00:	003ff806 	br	8bce4 <__alt_data_end+0xfffc01f4>
   8bd04:	313fee36 	bltu	r6,r4,8bcc0 <__alt_data_end+0xfffc01d0>
   8bd08:	21bffc36 	bltu	r4,r6,8bcfc <__alt_data_end+0xfffc020c>
   8bd0c:	0005883a 	mov	r2,zero
   8bd10:	f800283a 	ret

0008bd14 <__muldf3>:
   8bd14:	defff304 	addi	sp,sp,-52
   8bd18:	2804d53a 	srli	r2,r5,20
   8bd1c:	dd800915 	stw	r22,36(sp)
   8bd20:	282cd7fa 	srli	r22,r5,31
   8bd24:	dc000315 	stw	r16,12(sp)
   8bd28:	04000434 	movhi	r16,16
   8bd2c:	dd400815 	stw	r21,32(sp)
   8bd30:	dc800515 	stw	r18,20(sp)
   8bd34:	843fffc4 	addi	r16,r16,-1
   8bd38:	dfc00c15 	stw	ra,48(sp)
   8bd3c:	df000b15 	stw	fp,44(sp)
   8bd40:	ddc00a15 	stw	r23,40(sp)
   8bd44:	dd000715 	stw	r20,28(sp)
   8bd48:	dcc00615 	stw	r19,24(sp)
   8bd4c:	dc400415 	stw	r17,16(sp)
   8bd50:	1481ffcc 	andi	r18,r2,2047
   8bd54:	2c20703a 	and	r16,r5,r16
   8bd58:	b02b883a 	mov	r21,r22
   8bd5c:	b2403fcc 	andi	r9,r22,255
   8bd60:	90006026 	beq	r18,zero,8bee4 <__muldf3+0x1d0>
   8bd64:	0081ffc4 	movi	r2,2047
   8bd68:	2029883a 	mov	r20,r4
   8bd6c:	90803626 	beq	r18,r2,8be48 <__muldf3+0x134>
   8bd70:	80800434 	orhi	r2,r16,16
   8bd74:	100490fa 	slli	r2,r2,3
   8bd78:	2020d77a 	srli	r16,r4,29
   8bd7c:	202890fa 	slli	r20,r4,3
   8bd80:	94bf0044 	addi	r18,r18,-1023
   8bd84:	80a0b03a 	or	r16,r16,r2
   8bd88:	0027883a 	mov	r19,zero
   8bd8c:	0039883a 	mov	fp,zero
   8bd90:	3804d53a 	srli	r2,r7,20
   8bd94:	382ed7fa 	srli	r23,r7,31
   8bd98:	04400434 	movhi	r17,16
   8bd9c:	8c7fffc4 	addi	r17,r17,-1
   8bda0:	1081ffcc 	andi	r2,r2,2047
   8bda4:	3011883a 	mov	r8,r6
   8bda8:	3c62703a 	and	r17,r7,r17
   8bdac:	ba803fcc 	andi	r10,r23,255
   8bdb0:	10006d26 	beq	r2,zero,8bf68 <__muldf3+0x254>
   8bdb4:	00c1ffc4 	movi	r3,2047
   8bdb8:	10c06526 	beq	r2,r3,8bf50 <__muldf3+0x23c>
   8bdbc:	88c00434 	orhi	r3,r17,16
   8bdc0:	180690fa 	slli	r3,r3,3
   8bdc4:	3022d77a 	srli	r17,r6,29
   8bdc8:	301090fa 	slli	r8,r6,3
   8bdcc:	10bf0044 	addi	r2,r2,-1023
   8bdd0:	88e2b03a 	or	r17,r17,r3
   8bdd4:	000b883a 	mov	r5,zero
   8bdd8:	9085883a 	add	r2,r18,r2
   8bddc:	2cc8b03a 	or	r4,r5,r19
   8bde0:	00c003c4 	movi	r3,15
   8bde4:	bdacf03a 	xor	r22,r23,r22
   8bde8:	12c00044 	addi	r11,r2,1
   8bdec:	19009936 	bltu	r3,r4,8c054 <__muldf3+0x340>
   8bdf0:	200890ba 	slli	r4,r4,2
   8bdf4:	00c00274 	movhi	r3,9
   8bdf8:	18ef8204 	addi	r3,r3,-16888
   8bdfc:	20c9883a 	add	r4,r4,r3
   8be00:	20c00017 	ldw	r3,0(r4)
   8be04:	1800683a 	jmp	r3
   8be08:	0008c054 	movui	zero,8961
   8be0c:	0008be68 	cmpgeui	zero,zero,8953
   8be10:	0008be68 	cmpgeui	zero,zero,8953
   8be14:	0008be64 	muli	zero,zero,8953
   8be18:	0008c030 	cmpltui	zero,zero,8960
   8be1c:	0008c030 	cmpltui	zero,zero,8960
   8be20:	0008c018 	cmpnei	zero,zero,8960
   8be24:	0008be64 	muli	zero,zero,8953
   8be28:	0008c030 	cmpltui	zero,zero,8960
   8be2c:	0008c018 	cmpnei	zero,zero,8960
   8be30:	0008c030 	cmpltui	zero,zero,8960
   8be34:	0008be64 	muli	zero,zero,8953
   8be38:	0008c040 	call	8c04 <__reset-0x773fc>
   8be3c:	0008c040 	call	8c04 <__reset-0x773fc>
   8be40:	0008c040 	call	8c04 <__reset-0x773fc>
   8be44:	0008c25c 	xori	zero,zero,8969
   8be48:	2404b03a 	or	r2,r4,r16
   8be4c:	10006f1e 	bne	r2,zero,8c00c <__muldf3+0x2f8>
   8be50:	04c00204 	movi	r19,8
   8be54:	0021883a 	mov	r16,zero
   8be58:	0029883a 	mov	r20,zero
   8be5c:	07000084 	movi	fp,2
   8be60:	003fcb06 	br	8bd90 <__alt_data_end+0xfffc02a0>
   8be64:	502d883a 	mov	r22,r10
   8be68:	00800084 	movi	r2,2
   8be6c:	28805726 	beq	r5,r2,8bfcc <__muldf3+0x2b8>
   8be70:	008000c4 	movi	r2,3
   8be74:	28816626 	beq	r5,r2,8c410 <__muldf3+0x6fc>
   8be78:	00800044 	movi	r2,1
   8be7c:	2881411e 	bne	r5,r2,8c384 <__muldf3+0x670>
   8be80:	b02b883a 	mov	r21,r22
   8be84:	0005883a 	mov	r2,zero
   8be88:	000b883a 	mov	r5,zero
   8be8c:	0029883a 	mov	r20,zero
   8be90:	1004953a 	slli	r2,r2,20
   8be94:	a8c03fcc 	andi	r3,r21,255
   8be98:	04400434 	movhi	r17,16
   8be9c:	8c7fffc4 	addi	r17,r17,-1
   8bea0:	180697fa 	slli	r3,r3,31
   8bea4:	2c4a703a 	and	r5,r5,r17
   8bea8:	288ab03a 	or	r5,r5,r2
   8beac:	28c6b03a 	or	r3,r5,r3
   8beb0:	a005883a 	mov	r2,r20
   8beb4:	dfc00c17 	ldw	ra,48(sp)
   8beb8:	df000b17 	ldw	fp,44(sp)
   8bebc:	ddc00a17 	ldw	r23,40(sp)
   8bec0:	dd800917 	ldw	r22,36(sp)
   8bec4:	dd400817 	ldw	r21,32(sp)
   8bec8:	dd000717 	ldw	r20,28(sp)
   8becc:	dcc00617 	ldw	r19,24(sp)
   8bed0:	dc800517 	ldw	r18,20(sp)
   8bed4:	dc400417 	ldw	r17,16(sp)
   8bed8:	dc000317 	ldw	r16,12(sp)
   8bedc:	dec00d04 	addi	sp,sp,52
   8bee0:	f800283a 	ret
   8bee4:	2404b03a 	or	r2,r4,r16
   8bee8:	2027883a 	mov	r19,r4
   8beec:	10004226 	beq	r2,zero,8bff8 <__muldf3+0x2e4>
   8bef0:	8000fc26 	beq	r16,zero,8c2e4 <__muldf3+0x5d0>
   8bef4:	8009883a 	mov	r4,r16
   8bef8:	d9800215 	stw	r6,8(sp)
   8befc:	d9c00015 	stw	r7,0(sp)
   8bf00:	da400115 	stw	r9,4(sp)
   8bf04:	008cf2c0 	call	8cf2c <__clzsi2>
   8bf08:	d9800217 	ldw	r6,8(sp)
   8bf0c:	d9c00017 	ldw	r7,0(sp)
   8bf10:	da400117 	ldw	r9,4(sp)
   8bf14:	113ffd44 	addi	r4,r2,-11
   8bf18:	00c00704 	movi	r3,28
   8bf1c:	1900ed16 	blt	r3,r4,8c2d4 <__muldf3+0x5c0>
   8bf20:	00c00744 	movi	r3,29
   8bf24:	147ffe04 	addi	r17,r2,-8
   8bf28:	1907c83a 	sub	r3,r3,r4
   8bf2c:	8460983a 	sll	r16,r16,r17
   8bf30:	98c6d83a 	srl	r3,r19,r3
   8bf34:	9c68983a 	sll	r20,r19,r17
   8bf38:	1c20b03a 	or	r16,r3,r16
   8bf3c:	1080fcc4 	addi	r2,r2,1011
   8bf40:	00a5c83a 	sub	r18,zero,r2
   8bf44:	0027883a 	mov	r19,zero
   8bf48:	0039883a 	mov	fp,zero
   8bf4c:	003f9006 	br	8bd90 <__alt_data_end+0xfffc02a0>
   8bf50:	3446b03a 	or	r3,r6,r17
   8bf54:	1800261e 	bne	r3,zero,8bff0 <__muldf3+0x2dc>
   8bf58:	0023883a 	mov	r17,zero
   8bf5c:	0011883a 	mov	r8,zero
   8bf60:	01400084 	movi	r5,2
   8bf64:	003f9c06 	br	8bdd8 <__alt_data_end+0xfffc02e8>
   8bf68:	3446b03a 	or	r3,r6,r17
   8bf6c:	18001c26 	beq	r3,zero,8bfe0 <__muldf3+0x2cc>
   8bf70:	8800ce26 	beq	r17,zero,8c2ac <__muldf3+0x598>
   8bf74:	8809883a 	mov	r4,r17
   8bf78:	d9800215 	stw	r6,8(sp)
   8bf7c:	da400115 	stw	r9,4(sp)
   8bf80:	da800015 	stw	r10,0(sp)
   8bf84:	008cf2c0 	call	8cf2c <__clzsi2>
   8bf88:	d9800217 	ldw	r6,8(sp)
   8bf8c:	da400117 	ldw	r9,4(sp)
   8bf90:	da800017 	ldw	r10,0(sp)
   8bf94:	113ffd44 	addi	r4,r2,-11
   8bf98:	00c00704 	movi	r3,28
   8bf9c:	1900bf16 	blt	r3,r4,8c29c <__muldf3+0x588>
   8bfa0:	00c00744 	movi	r3,29
   8bfa4:	123ffe04 	addi	r8,r2,-8
   8bfa8:	1907c83a 	sub	r3,r3,r4
   8bfac:	8a22983a 	sll	r17,r17,r8
   8bfb0:	30c6d83a 	srl	r3,r6,r3
   8bfb4:	3210983a 	sll	r8,r6,r8
   8bfb8:	1c62b03a 	or	r17,r3,r17
   8bfbc:	1080fcc4 	addi	r2,r2,1011
   8bfc0:	0085c83a 	sub	r2,zero,r2
   8bfc4:	000b883a 	mov	r5,zero
   8bfc8:	003f8306 	br	8bdd8 <__alt_data_end+0xfffc02e8>
   8bfcc:	b02b883a 	mov	r21,r22
   8bfd0:	0081ffc4 	movi	r2,2047
   8bfd4:	000b883a 	mov	r5,zero
   8bfd8:	0029883a 	mov	r20,zero
   8bfdc:	003fac06 	br	8be90 <__alt_data_end+0xfffc03a0>
   8bfe0:	0023883a 	mov	r17,zero
   8bfe4:	0011883a 	mov	r8,zero
   8bfe8:	01400044 	movi	r5,1
   8bfec:	003f7a06 	br	8bdd8 <__alt_data_end+0xfffc02e8>
   8bff0:	014000c4 	movi	r5,3
   8bff4:	003f7806 	br	8bdd8 <__alt_data_end+0xfffc02e8>
   8bff8:	04c00104 	movi	r19,4
   8bffc:	0021883a 	mov	r16,zero
   8c000:	0029883a 	mov	r20,zero
   8c004:	07000044 	movi	fp,1
   8c008:	003f6106 	br	8bd90 <__alt_data_end+0xfffc02a0>
   8c00c:	04c00304 	movi	r19,12
   8c010:	070000c4 	movi	fp,3
   8c014:	003f5e06 	br	8bd90 <__alt_data_end+0xfffc02a0>
   8c018:	01400434 	movhi	r5,16
   8c01c:	002b883a 	mov	r21,zero
   8c020:	297fffc4 	addi	r5,r5,-1
   8c024:	053fffc4 	movi	r20,-1
   8c028:	0081ffc4 	movi	r2,2047
   8c02c:	003f9806 	br	8be90 <__alt_data_end+0xfffc03a0>
   8c030:	8023883a 	mov	r17,r16
   8c034:	a011883a 	mov	r8,r20
   8c038:	e00b883a 	mov	r5,fp
   8c03c:	003f8a06 	br	8be68 <__alt_data_end+0xfffc0378>
   8c040:	8023883a 	mov	r17,r16
   8c044:	a011883a 	mov	r8,r20
   8c048:	482d883a 	mov	r22,r9
   8c04c:	e00b883a 	mov	r5,fp
   8c050:	003f8506 	br	8be68 <__alt_data_end+0xfffc0378>
   8c054:	a00ad43a 	srli	r5,r20,16
   8c058:	401ad43a 	srli	r13,r8,16
   8c05c:	a53fffcc 	andi	r20,r20,65535
   8c060:	423fffcc 	andi	r8,r8,65535
   8c064:	4519383a 	mul	r12,r8,r20
   8c068:	4147383a 	mul	r3,r8,r5
   8c06c:	6d09383a 	mul	r4,r13,r20
   8c070:	600cd43a 	srli	r6,r12,16
   8c074:	2b5d383a 	mul	r14,r5,r13
   8c078:	20c9883a 	add	r4,r4,r3
   8c07c:	310d883a 	add	r6,r6,r4
   8c080:	30c0022e 	bgeu	r6,r3,8c08c <__muldf3+0x378>
   8c084:	00c00074 	movhi	r3,1
   8c088:	70dd883a 	add	r14,r14,r3
   8c08c:	8826d43a 	srli	r19,r17,16
   8c090:	8bffffcc 	andi	r15,r17,65535
   8c094:	7d23383a 	mul	r17,r15,r20
   8c098:	7949383a 	mul	r4,r15,r5
   8c09c:	9d29383a 	mul	r20,r19,r20
   8c0a0:	8814d43a 	srli	r10,r17,16
   8c0a4:	3012943a 	slli	r9,r6,16
   8c0a8:	a129883a 	add	r20,r20,r4
   8c0ac:	633fffcc 	andi	r12,r12,65535
   8c0b0:	5515883a 	add	r10,r10,r20
   8c0b4:	3006d43a 	srli	r3,r6,16
   8c0b8:	4b13883a 	add	r9,r9,r12
   8c0bc:	2ccb383a 	mul	r5,r5,r19
   8c0c0:	5100022e 	bgeu	r10,r4,8c0cc <__muldf3+0x3b8>
   8c0c4:	01000074 	movhi	r4,1
   8c0c8:	290b883a 	add	r5,r5,r4
   8c0cc:	802ad43a 	srli	r21,r16,16
   8c0d0:	843fffcc 	andi	r16,r16,65535
   8c0d4:	440d383a 	mul	r6,r8,r16
   8c0d8:	4565383a 	mul	r18,r8,r21
   8c0dc:	8349383a 	mul	r4,r16,r13
   8c0e0:	500e943a 	slli	r7,r10,16
   8c0e4:	3010d43a 	srli	r8,r6,16
   8c0e8:	5028d43a 	srli	r20,r10,16
   8c0ec:	2489883a 	add	r4,r4,r18
   8c0f0:	8abfffcc 	andi	r10,r17,65535
   8c0f4:	3a95883a 	add	r10,r7,r10
   8c0f8:	4119883a 	add	r12,r8,r4
   8c0fc:	a169883a 	add	r20,r20,r5
   8c100:	1a87883a 	add	r3,r3,r10
   8c104:	6d5b383a 	mul	r13,r13,r21
   8c108:	6480022e 	bgeu	r12,r18,8c114 <__muldf3+0x400>
   8c10c:	01000074 	movhi	r4,1
   8c110:	691b883a 	add	r13,r13,r4
   8c114:	7c25383a 	mul	r18,r15,r16
   8c118:	7d4b383a 	mul	r5,r15,r21
   8c11c:	84cf383a 	mul	r7,r16,r19
   8c120:	901ed43a 	srli	r15,r18,16
   8c124:	6008d43a 	srli	r4,r12,16
   8c128:	6010943a 	slli	r8,r12,16
   8c12c:	394f883a 	add	r7,r7,r5
   8c130:	333fffcc 	andi	r12,r6,65535
   8c134:	79df883a 	add	r15,r15,r7
   8c138:	235b883a 	add	r13,r4,r13
   8c13c:	9d63383a 	mul	r17,r19,r21
   8c140:	4309883a 	add	r4,r8,r12
   8c144:	7940022e 	bgeu	r15,r5,8c150 <__muldf3+0x43c>
   8c148:	01400074 	movhi	r5,1
   8c14c:	8963883a 	add	r17,r17,r5
   8c150:	780a943a 	slli	r5,r15,16
   8c154:	91bfffcc 	andi	r6,r18,65535
   8c158:	70c7883a 	add	r3,r14,r3
   8c15c:	298d883a 	add	r6,r5,r6
   8c160:	1a8f803a 	cmpltu	r7,r3,r10
   8c164:	350b883a 	add	r5,r6,r20
   8c168:	20c7883a 	add	r3,r4,r3
   8c16c:	3955883a 	add	r10,r7,r5
   8c170:	1909803a 	cmpltu	r4,r3,r4
   8c174:	6a91883a 	add	r8,r13,r10
   8c178:	780cd43a 	srli	r6,r15,16
   8c17c:	2219883a 	add	r12,r4,r8
   8c180:	2d0b803a 	cmpltu	r5,r5,r20
   8c184:	51cf803a 	cmpltu	r7,r10,r7
   8c188:	29ceb03a 	or	r7,r5,r7
   8c18c:	4351803a 	cmpltu	r8,r8,r13
   8c190:	610b803a 	cmpltu	r5,r12,r4
   8c194:	4148b03a 	or	r4,r8,r5
   8c198:	398f883a 	add	r7,r7,r6
   8c19c:	3909883a 	add	r4,r7,r4
   8c1a0:	1810927a 	slli	r8,r3,9
   8c1a4:	2449883a 	add	r4,r4,r17
   8c1a8:	2008927a 	slli	r4,r4,9
   8c1ac:	6022d5fa 	srli	r17,r12,23
   8c1b0:	1806d5fa 	srli	r3,r3,23
   8c1b4:	4252b03a 	or	r9,r8,r9
   8c1b8:	600a927a 	slli	r5,r12,9
   8c1bc:	4810c03a 	cmpne	r8,r9,zero
   8c1c0:	2462b03a 	or	r17,r4,r17
   8c1c4:	40c6b03a 	or	r3,r8,r3
   8c1c8:	8900402c 	andhi	r4,r17,256
   8c1cc:	1950b03a 	or	r8,r3,r5
   8c1d0:	20000726 	beq	r4,zero,8c1f0 <__muldf3+0x4dc>
   8c1d4:	4006d07a 	srli	r3,r8,1
   8c1d8:	880497fa 	slli	r2,r17,31
   8c1dc:	4200004c 	andi	r8,r8,1
   8c1e0:	8822d07a 	srli	r17,r17,1
   8c1e4:	1a10b03a 	or	r8,r3,r8
   8c1e8:	1210b03a 	or	r8,r2,r8
   8c1ec:	5805883a 	mov	r2,r11
   8c1f0:	1140ffc4 	addi	r5,r2,1023
   8c1f4:	0140440e 	bge	zero,r5,8c308 <__muldf3+0x5f4>
   8c1f8:	40c001cc 	andi	r3,r8,7
   8c1fc:	18000726 	beq	r3,zero,8c21c <__muldf3+0x508>
   8c200:	40c003cc 	andi	r3,r8,15
   8c204:	01000104 	movi	r4,4
   8c208:	19000426 	beq	r3,r4,8c21c <__muldf3+0x508>
   8c20c:	4107883a 	add	r3,r8,r4
   8c210:	1a11803a 	cmpltu	r8,r3,r8
   8c214:	8a23883a 	add	r17,r17,r8
   8c218:	1811883a 	mov	r8,r3
   8c21c:	88c0402c 	andhi	r3,r17,256
   8c220:	18000426 	beq	r3,zero,8c234 <__muldf3+0x520>
   8c224:	11410004 	addi	r5,r2,1024
   8c228:	00bfc034 	movhi	r2,65280
   8c22c:	10bfffc4 	addi	r2,r2,-1
   8c230:	88a2703a 	and	r17,r17,r2
   8c234:	0081ff84 	movi	r2,2046
   8c238:	117f6416 	blt	r2,r5,8bfcc <__alt_data_end+0xfffc04dc>
   8c23c:	8828977a 	slli	r20,r17,29
   8c240:	4010d0fa 	srli	r8,r8,3
   8c244:	8822927a 	slli	r17,r17,9
   8c248:	2881ffcc 	andi	r2,r5,2047
   8c24c:	a228b03a 	or	r20,r20,r8
   8c250:	880ad33a 	srli	r5,r17,12
   8c254:	b02b883a 	mov	r21,r22
   8c258:	003f0d06 	br	8be90 <__alt_data_end+0xfffc03a0>
   8c25c:	8080022c 	andhi	r2,r16,8
   8c260:	10000926 	beq	r2,zero,8c288 <__muldf3+0x574>
   8c264:	8880022c 	andhi	r2,r17,8
   8c268:	1000071e 	bne	r2,zero,8c288 <__muldf3+0x574>
   8c26c:	00800434 	movhi	r2,16
   8c270:	89400234 	orhi	r5,r17,8
   8c274:	10bfffc4 	addi	r2,r2,-1
   8c278:	b82b883a 	mov	r21,r23
   8c27c:	288a703a 	and	r5,r5,r2
   8c280:	4029883a 	mov	r20,r8
   8c284:	003f6806 	br	8c028 <__alt_data_end+0xfffc0538>
   8c288:	00800434 	movhi	r2,16
   8c28c:	81400234 	orhi	r5,r16,8
   8c290:	10bfffc4 	addi	r2,r2,-1
   8c294:	288a703a 	and	r5,r5,r2
   8c298:	003f6306 	br	8c028 <__alt_data_end+0xfffc0538>
   8c29c:	147ff604 	addi	r17,r2,-40
   8c2a0:	3462983a 	sll	r17,r6,r17
   8c2a4:	0011883a 	mov	r8,zero
   8c2a8:	003f4406 	br	8bfbc <__alt_data_end+0xfffc04cc>
   8c2ac:	3009883a 	mov	r4,r6
   8c2b0:	d9800215 	stw	r6,8(sp)
   8c2b4:	da400115 	stw	r9,4(sp)
   8c2b8:	da800015 	stw	r10,0(sp)
   8c2bc:	008cf2c0 	call	8cf2c <__clzsi2>
   8c2c0:	10800804 	addi	r2,r2,32
   8c2c4:	da800017 	ldw	r10,0(sp)
   8c2c8:	da400117 	ldw	r9,4(sp)
   8c2cc:	d9800217 	ldw	r6,8(sp)
   8c2d0:	003f3006 	br	8bf94 <__alt_data_end+0xfffc04a4>
   8c2d4:	143ff604 	addi	r16,r2,-40
   8c2d8:	9c20983a 	sll	r16,r19,r16
   8c2dc:	0029883a 	mov	r20,zero
   8c2e0:	003f1606 	br	8bf3c <__alt_data_end+0xfffc044c>
   8c2e4:	d9800215 	stw	r6,8(sp)
   8c2e8:	d9c00015 	stw	r7,0(sp)
   8c2ec:	da400115 	stw	r9,4(sp)
   8c2f0:	008cf2c0 	call	8cf2c <__clzsi2>
   8c2f4:	10800804 	addi	r2,r2,32
   8c2f8:	da400117 	ldw	r9,4(sp)
   8c2fc:	d9c00017 	ldw	r7,0(sp)
   8c300:	d9800217 	ldw	r6,8(sp)
   8c304:	003f0306 	br	8bf14 <__alt_data_end+0xfffc0424>
   8c308:	00c00044 	movi	r3,1
   8c30c:	1947c83a 	sub	r3,r3,r5
   8c310:	00800e04 	movi	r2,56
   8c314:	10feda16 	blt	r2,r3,8be80 <__alt_data_end+0xfffc0390>
   8c318:	008007c4 	movi	r2,31
   8c31c:	10c01b16 	blt	r2,r3,8c38c <__muldf3+0x678>
   8c320:	00800804 	movi	r2,32
   8c324:	10c5c83a 	sub	r2,r2,r3
   8c328:	888a983a 	sll	r5,r17,r2
   8c32c:	40c8d83a 	srl	r4,r8,r3
   8c330:	4084983a 	sll	r2,r8,r2
   8c334:	88e2d83a 	srl	r17,r17,r3
   8c338:	2906b03a 	or	r3,r5,r4
   8c33c:	1004c03a 	cmpne	r2,r2,zero
   8c340:	1886b03a 	or	r3,r3,r2
   8c344:	188001cc 	andi	r2,r3,7
   8c348:	10000726 	beq	r2,zero,8c368 <__muldf3+0x654>
   8c34c:	188003cc 	andi	r2,r3,15
   8c350:	01000104 	movi	r4,4
   8c354:	11000426 	beq	r2,r4,8c368 <__muldf3+0x654>
   8c358:	1805883a 	mov	r2,r3
   8c35c:	10c00104 	addi	r3,r2,4
   8c360:	1885803a 	cmpltu	r2,r3,r2
   8c364:	88a3883a 	add	r17,r17,r2
   8c368:	8880202c 	andhi	r2,r17,128
   8c36c:	10001c26 	beq	r2,zero,8c3e0 <__muldf3+0x6cc>
   8c370:	b02b883a 	mov	r21,r22
   8c374:	00800044 	movi	r2,1
   8c378:	000b883a 	mov	r5,zero
   8c37c:	0029883a 	mov	r20,zero
   8c380:	003ec306 	br	8be90 <__alt_data_end+0xfffc03a0>
   8c384:	5805883a 	mov	r2,r11
   8c388:	003f9906 	br	8c1f0 <__alt_data_end+0xfffc0700>
   8c38c:	00bff844 	movi	r2,-31
   8c390:	1145c83a 	sub	r2,r2,r5
   8c394:	8888d83a 	srl	r4,r17,r2
   8c398:	00800804 	movi	r2,32
   8c39c:	18801a26 	beq	r3,r2,8c408 <__muldf3+0x6f4>
   8c3a0:	00801004 	movi	r2,64
   8c3a4:	10c5c83a 	sub	r2,r2,r3
   8c3a8:	8884983a 	sll	r2,r17,r2
   8c3ac:	1204b03a 	or	r2,r2,r8
   8c3b0:	1004c03a 	cmpne	r2,r2,zero
   8c3b4:	2084b03a 	or	r2,r4,r2
   8c3b8:	144001cc 	andi	r17,r2,7
   8c3bc:	88000d1e 	bne	r17,zero,8c3f4 <__muldf3+0x6e0>
   8c3c0:	000b883a 	mov	r5,zero
   8c3c4:	1028d0fa 	srli	r20,r2,3
   8c3c8:	b02b883a 	mov	r21,r22
   8c3cc:	0005883a 	mov	r2,zero
   8c3d0:	a468b03a 	or	r20,r20,r17
   8c3d4:	003eae06 	br	8be90 <__alt_data_end+0xfffc03a0>
   8c3d8:	1007883a 	mov	r3,r2
   8c3dc:	0023883a 	mov	r17,zero
   8c3e0:	880a927a 	slli	r5,r17,9
   8c3e4:	1805883a 	mov	r2,r3
   8c3e8:	8822977a 	slli	r17,r17,29
   8c3ec:	280ad33a 	srli	r5,r5,12
   8c3f0:	003ff406 	br	8c3c4 <__alt_data_end+0xfffc08d4>
   8c3f4:	10c003cc 	andi	r3,r2,15
   8c3f8:	01000104 	movi	r4,4
   8c3fc:	193ff626 	beq	r3,r4,8c3d8 <__alt_data_end+0xfffc08e8>
   8c400:	0023883a 	mov	r17,zero
   8c404:	003fd506 	br	8c35c <__alt_data_end+0xfffc086c>
   8c408:	0005883a 	mov	r2,zero
   8c40c:	003fe706 	br	8c3ac <__alt_data_end+0xfffc08bc>
   8c410:	00800434 	movhi	r2,16
   8c414:	89400234 	orhi	r5,r17,8
   8c418:	10bfffc4 	addi	r2,r2,-1
   8c41c:	b02b883a 	mov	r21,r22
   8c420:	288a703a 	and	r5,r5,r2
   8c424:	4029883a 	mov	r20,r8
   8c428:	003eff06 	br	8c028 <__alt_data_end+0xfffc0538>

0008c42c <__subdf3>:
   8c42c:	02000434 	movhi	r8,16
   8c430:	423fffc4 	addi	r8,r8,-1
   8c434:	defffb04 	addi	sp,sp,-20
   8c438:	2a14703a 	and	r10,r5,r8
   8c43c:	3812d53a 	srli	r9,r7,20
   8c440:	3a10703a 	and	r8,r7,r8
   8c444:	2006d77a 	srli	r3,r4,29
   8c448:	3004d77a 	srli	r2,r6,29
   8c44c:	dc000015 	stw	r16,0(sp)
   8c450:	501490fa 	slli	r10,r10,3
   8c454:	2820d53a 	srli	r16,r5,20
   8c458:	401090fa 	slli	r8,r8,3
   8c45c:	dc800215 	stw	r18,8(sp)
   8c460:	dc400115 	stw	r17,4(sp)
   8c464:	dfc00415 	stw	ra,16(sp)
   8c468:	202290fa 	slli	r17,r4,3
   8c46c:	dcc00315 	stw	r19,12(sp)
   8c470:	4a41ffcc 	andi	r9,r9,2047
   8c474:	0101ffc4 	movi	r4,2047
   8c478:	2824d7fa 	srli	r18,r5,31
   8c47c:	8401ffcc 	andi	r16,r16,2047
   8c480:	50c6b03a 	or	r3,r10,r3
   8c484:	380ed7fa 	srli	r7,r7,31
   8c488:	408ab03a 	or	r5,r8,r2
   8c48c:	300c90fa 	slli	r6,r6,3
   8c490:	49009626 	beq	r9,r4,8c6ec <__subdf3+0x2c0>
   8c494:	39c0005c 	xori	r7,r7,1
   8c498:	8245c83a 	sub	r2,r16,r9
   8c49c:	3c807426 	beq	r7,r18,8c670 <__subdf3+0x244>
   8c4a0:	0080af0e 	bge	zero,r2,8c760 <__subdf3+0x334>
   8c4a4:	48002a1e 	bne	r9,zero,8c550 <__subdf3+0x124>
   8c4a8:	2988b03a 	or	r4,r5,r6
   8c4ac:	20009a1e 	bne	r4,zero,8c718 <__subdf3+0x2ec>
   8c4b0:	888001cc 	andi	r2,r17,7
   8c4b4:	10000726 	beq	r2,zero,8c4d4 <__subdf3+0xa8>
   8c4b8:	888003cc 	andi	r2,r17,15
   8c4bc:	01000104 	movi	r4,4
   8c4c0:	11000426 	beq	r2,r4,8c4d4 <__subdf3+0xa8>
   8c4c4:	890b883a 	add	r5,r17,r4
   8c4c8:	2c63803a 	cmpltu	r17,r5,r17
   8c4cc:	1c47883a 	add	r3,r3,r17
   8c4d0:	2823883a 	mov	r17,r5
   8c4d4:	1880202c 	andhi	r2,r3,128
   8c4d8:	10005926 	beq	r2,zero,8c640 <__subdf3+0x214>
   8c4dc:	84000044 	addi	r16,r16,1
   8c4e0:	0081ffc4 	movi	r2,2047
   8c4e4:	8080be26 	beq	r16,r2,8c7e0 <__subdf3+0x3b4>
   8c4e8:	017fe034 	movhi	r5,65408
   8c4ec:	297fffc4 	addi	r5,r5,-1
   8c4f0:	1946703a 	and	r3,r3,r5
   8c4f4:	1804977a 	slli	r2,r3,29
   8c4f8:	1806927a 	slli	r3,r3,9
   8c4fc:	8822d0fa 	srli	r17,r17,3
   8c500:	8401ffcc 	andi	r16,r16,2047
   8c504:	180ad33a 	srli	r5,r3,12
   8c508:	9100004c 	andi	r4,r18,1
   8c50c:	1444b03a 	or	r2,r2,r17
   8c510:	80c1ffcc 	andi	r3,r16,2047
   8c514:	1820953a 	slli	r16,r3,20
   8c518:	20c03fcc 	andi	r3,r4,255
   8c51c:	180897fa 	slli	r4,r3,31
   8c520:	00c00434 	movhi	r3,16
   8c524:	18ffffc4 	addi	r3,r3,-1
   8c528:	28c6703a 	and	r3,r5,r3
   8c52c:	1c06b03a 	or	r3,r3,r16
   8c530:	1906b03a 	or	r3,r3,r4
   8c534:	dfc00417 	ldw	ra,16(sp)
   8c538:	dcc00317 	ldw	r19,12(sp)
   8c53c:	dc800217 	ldw	r18,8(sp)
   8c540:	dc400117 	ldw	r17,4(sp)
   8c544:	dc000017 	ldw	r16,0(sp)
   8c548:	dec00504 	addi	sp,sp,20
   8c54c:	f800283a 	ret
   8c550:	0101ffc4 	movi	r4,2047
   8c554:	813fd626 	beq	r16,r4,8c4b0 <__alt_data_end+0xfffc09c0>
   8c558:	29402034 	orhi	r5,r5,128
   8c55c:	01000e04 	movi	r4,56
   8c560:	2080a316 	blt	r4,r2,8c7f0 <__subdf3+0x3c4>
   8c564:	010007c4 	movi	r4,31
   8c568:	2080c616 	blt	r4,r2,8c884 <__subdf3+0x458>
   8c56c:	01000804 	movi	r4,32
   8c570:	2089c83a 	sub	r4,r4,r2
   8c574:	2910983a 	sll	r8,r5,r4
   8c578:	308ed83a 	srl	r7,r6,r2
   8c57c:	3108983a 	sll	r4,r6,r4
   8c580:	2884d83a 	srl	r2,r5,r2
   8c584:	41ccb03a 	or	r6,r8,r7
   8c588:	2008c03a 	cmpne	r4,r4,zero
   8c58c:	310cb03a 	or	r6,r6,r4
   8c590:	898dc83a 	sub	r6,r17,r6
   8c594:	89a3803a 	cmpltu	r17,r17,r6
   8c598:	1887c83a 	sub	r3,r3,r2
   8c59c:	1c47c83a 	sub	r3,r3,r17
   8c5a0:	3023883a 	mov	r17,r6
   8c5a4:	1880202c 	andhi	r2,r3,128
   8c5a8:	10002326 	beq	r2,zero,8c638 <__subdf3+0x20c>
   8c5ac:	04c02034 	movhi	r19,128
   8c5b0:	9cffffc4 	addi	r19,r19,-1
   8c5b4:	1ce6703a 	and	r19,r3,r19
   8c5b8:	98007a26 	beq	r19,zero,8c7a4 <__subdf3+0x378>
   8c5bc:	9809883a 	mov	r4,r19
   8c5c0:	008cf2c0 	call	8cf2c <__clzsi2>
   8c5c4:	113ffe04 	addi	r4,r2,-8
   8c5c8:	00c007c4 	movi	r3,31
   8c5cc:	19007b16 	blt	r3,r4,8c7bc <__subdf3+0x390>
   8c5d0:	00800804 	movi	r2,32
   8c5d4:	1105c83a 	sub	r2,r2,r4
   8c5d8:	8884d83a 	srl	r2,r17,r2
   8c5dc:	9906983a 	sll	r3,r19,r4
   8c5e0:	8922983a 	sll	r17,r17,r4
   8c5e4:	10c4b03a 	or	r2,r2,r3
   8c5e8:	24007816 	blt	r4,r16,8c7cc <__subdf3+0x3a0>
   8c5ec:	2421c83a 	sub	r16,r4,r16
   8c5f0:	80c00044 	addi	r3,r16,1
   8c5f4:	010007c4 	movi	r4,31
   8c5f8:	20c09516 	blt	r4,r3,8c850 <__subdf3+0x424>
   8c5fc:	01400804 	movi	r5,32
   8c600:	28cbc83a 	sub	r5,r5,r3
   8c604:	88c8d83a 	srl	r4,r17,r3
   8c608:	8962983a 	sll	r17,r17,r5
   8c60c:	114a983a 	sll	r5,r2,r5
   8c610:	10c6d83a 	srl	r3,r2,r3
   8c614:	8804c03a 	cmpne	r2,r17,zero
   8c618:	290ab03a 	or	r5,r5,r4
   8c61c:	28a2b03a 	or	r17,r5,r2
   8c620:	0021883a 	mov	r16,zero
   8c624:	003fa206 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8c628:	2090b03a 	or	r8,r4,r2
   8c62c:	40018e26 	beq	r8,zero,8cc68 <__subdf3+0x83c>
   8c630:	1007883a 	mov	r3,r2
   8c634:	2023883a 	mov	r17,r4
   8c638:	888001cc 	andi	r2,r17,7
   8c63c:	103f9e1e 	bne	r2,zero,8c4b8 <__alt_data_end+0xfffc09c8>
   8c640:	1804977a 	slli	r2,r3,29
   8c644:	8822d0fa 	srli	r17,r17,3
   8c648:	1810d0fa 	srli	r8,r3,3
   8c64c:	9100004c 	andi	r4,r18,1
   8c650:	1444b03a 	or	r2,r2,r17
   8c654:	00c1ffc4 	movi	r3,2047
   8c658:	80c02826 	beq	r16,r3,8c6fc <__subdf3+0x2d0>
   8c65c:	01400434 	movhi	r5,16
   8c660:	297fffc4 	addi	r5,r5,-1
   8c664:	80e0703a 	and	r16,r16,r3
   8c668:	414a703a 	and	r5,r8,r5
   8c66c:	003fa806 	br	8c510 <__alt_data_end+0xfffc0a20>
   8c670:	0080630e 	bge	zero,r2,8c800 <__subdf3+0x3d4>
   8c674:	48003026 	beq	r9,zero,8c738 <__subdf3+0x30c>
   8c678:	0101ffc4 	movi	r4,2047
   8c67c:	813f8c26 	beq	r16,r4,8c4b0 <__alt_data_end+0xfffc09c0>
   8c680:	29402034 	orhi	r5,r5,128
   8c684:	01000e04 	movi	r4,56
   8c688:	2080a90e 	bge	r4,r2,8c930 <__subdf3+0x504>
   8c68c:	298cb03a 	or	r6,r5,r6
   8c690:	3012c03a 	cmpne	r9,r6,zero
   8c694:	0005883a 	mov	r2,zero
   8c698:	4c53883a 	add	r9,r9,r17
   8c69c:	4c63803a 	cmpltu	r17,r9,r17
   8c6a0:	10c7883a 	add	r3,r2,r3
   8c6a4:	88c7883a 	add	r3,r17,r3
   8c6a8:	4823883a 	mov	r17,r9
   8c6ac:	1880202c 	andhi	r2,r3,128
   8c6b0:	1000d026 	beq	r2,zero,8c9f4 <__subdf3+0x5c8>
   8c6b4:	84000044 	addi	r16,r16,1
   8c6b8:	0081ffc4 	movi	r2,2047
   8c6bc:	8080fe26 	beq	r16,r2,8cab8 <__subdf3+0x68c>
   8c6c0:	00bfe034 	movhi	r2,65408
   8c6c4:	10bfffc4 	addi	r2,r2,-1
   8c6c8:	1886703a 	and	r3,r3,r2
   8c6cc:	880ad07a 	srli	r5,r17,1
   8c6d0:	180497fa 	slli	r2,r3,31
   8c6d4:	8900004c 	andi	r4,r17,1
   8c6d8:	2922b03a 	or	r17,r5,r4
   8c6dc:	1806d07a 	srli	r3,r3,1
   8c6e0:	1462b03a 	or	r17,r2,r17
   8c6e4:	3825883a 	mov	r18,r7
   8c6e8:	003f7106 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8c6ec:	2984b03a 	or	r2,r5,r6
   8c6f0:	103f6826 	beq	r2,zero,8c494 <__alt_data_end+0xfffc09a4>
   8c6f4:	39c03fcc 	andi	r7,r7,255
   8c6f8:	003f6706 	br	8c498 <__alt_data_end+0xfffc09a8>
   8c6fc:	4086b03a 	or	r3,r8,r2
   8c700:	18015226 	beq	r3,zero,8cc4c <__subdf3+0x820>
   8c704:	00c00434 	movhi	r3,16
   8c708:	41400234 	orhi	r5,r8,8
   8c70c:	18ffffc4 	addi	r3,r3,-1
   8c710:	28ca703a 	and	r5,r5,r3
   8c714:	003f7e06 	br	8c510 <__alt_data_end+0xfffc0a20>
   8c718:	10bfffc4 	addi	r2,r2,-1
   8c71c:	1000491e 	bne	r2,zero,8c844 <__subdf3+0x418>
   8c720:	898fc83a 	sub	r7,r17,r6
   8c724:	89e3803a 	cmpltu	r17,r17,r7
   8c728:	1947c83a 	sub	r3,r3,r5
   8c72c:	1c47c83a 	sub	r3,r3,r17
   8c730:	3823883a 	mov	r17,r7
   8c734:	003f9b06 	br	8c5a4 <__alt_data_end+0xfffc0ab4>
   8c738:	2988b03a 	or	r4,r5,r6
   8c73c:	203f5c26 	beq	r4,zero,8c4b0 <__alt_data_end+0xfffc09c0>
   8c740:	10bfffc4 	addi	r2,r2,-1
   8c744:	1000931e 	bne	r2,zero,8c994 <__subdf3+0x568>
   8c748:	898d883a 	add	r6,r17,r6
   8c74c:	3463803a 	cmpltu	r17,r6,r17
   8c750:	1947883a 	add	r3,r3,r5
   8c754:	88c7883a 	add	r3,r17,r3
   8c758:	3023883a 	mov	r17,r6
   8c75c:	003fd306 	br	8c6ac <__alt_data_end+0xfffc0bbc>
   8c760:	1000541e 	bne	r2,zero,8c8b4 <__subdf3+0x488>
   8c764:	80800044 	addi	r2,r16,1
   8c768:	1081ffcc 	andi	r2,r2,2047
   8c76c:	01000044 	movi	r4,1
   8c770:	2080a20e 	bge	r4,r2,8c9fc <__subdf3+0x5d0>
   8c774:	8989c83a 	sub	r4,r17,r6
   8c778:	8905803a 	cmpltu	r2,r17,r4
   8c77c:	1967c83a 	sub	r19,r3,r5
   8c780:	98a7c83a 	sub	r19,r19,r2
   8c784:	9880202c 	andhi	r2,r19,128
   8c788:	10006326 	beq	r2,zero,8c918 <__subdf3+0x4ec>
   8c78c:	3463c83a 	sub	r17,r6,r17
   8c790:	28c7c83a 	sub	r3,r5,r3
   8c794:	344d803a 	cmpltu	r6,r6,r17
   8c798:	19a7c83a 	sub	r19,r3,r6
   8c79c:	3825883a 	mov	r18,r7
   8c7a0:	983f861e 	bne	r19,zero,8c5bc <__alt_data_end+0xfffc0acc>
   8c7a4:	8809883a 	mov	r4,r17
   8c7a8:	008cf2c0 	call	8cf2c <__clzsi2>
   8c7ac:	10800804 	addi	r2,r2,32
   8c7b0:	113ffe04 	addi	r4,r2,-8
   8c7b4:	00c007c4 	movi	r3,31
   8c7b8:	193f850e 	bge	r3,r4,8c5d0 <__alt_data_end+0xfffc0ae0>
   8c7bc:	10bff604 	addi	r2,r2,-40
   8c7c0:	8884983a 	sll	r2,r17,r2
   8c7c4:	0023883a 	mov	r17,zero
   8c7c8:	243f880e 	bge	r4,r16,8c5ec <__alt_data_end+0xfffc0afc>
   8c7cc:	00ffe034 	movhi	r3,65408
   8c7d0:	18ffffc4 	addi	r3,r3,-1
   8c7d4:	8121c83a 	sub	r16,r16,r4
   8c7d8:	10c6703a 	and	r3,r2,r3
   8c7dc:	003f3406 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8c7e0:	9100004c 	andi	r4,r18,1
   8c7e4:	000b883a 	mov	r5,zero
   8c7e8:	0005883a 	mov	r2,zero
   8c7ec:	003f4806 	br	8c510 <__alt_data_end+0xfffc0a20>
   8c7f0:	298cb03a 	or	r6,r5,r6
   8c7f4:	300cc03a 	cmpne	r6,r6,zero
   8c7f8:	0005883a 	mov	r2,zero
   8c7fc:	003f6406 	br	8c590 <__alt_data_end+0xfffc0aa0>
   8c800:	10009a1e 	bne	r2,zero,8ca6c <__subdf3+0x640>
   8c804:	82400044 	addi	r9,r16,1
   8c808:	4881ffcc 	andi	r2,r9,2047
   8c80c:	02800044 	movi	r10,1
   8c810:	5080670e 	bge	r10,r2,8c9b0 <__subdf3+0x584>
   8c814:	0081ffc4 	movi	r2,2047
   8c818:	4880af26 	beq	r9,r2,8cad8 <__subdf3+0x6ac>
   8c81c:	898d883a 	add	r6,r17,r6
   8c820:	1945883a 	add	r2,r3,r5
   8c824:	3447803a 	cmpltu	r3,r6,r17
   8c828:	1887883a 	add	r3,r3,r2
   8c82c:	182297fa 	slli	r17,r3,31
   8c830:	300cd07a 	srli	r6,r6,1
   8c834:	1806d07a 	srli	r3,r3,1
   8c838:	4821883a 	mov	r16,r9
   8c83c:	89a2b03a 	or	r17,r17,r6
   8c840:	003f1b06 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8c844:	0101ffc4 	movi	r4,2047
   8c848:	813f441e 	bne	r16,r4,8c55c <__alt_data_end+0xfffc0a6c>
   8c84c:	003f1806 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8c850:	843ff844 	addi	r16,r16,-31
   8c854:	01400804 	movi	r5,32
   8c858:	1408d83a 	srl	r4,r2,r16
   8c85c:	19405026 	beq	r3,r5,8c9a0 <__subdf3+0x574>
   8c860:	01401004 	movi	r5,64
   8c864:	28c7c83a 	sub	r3,r5,r3
   8c868:	10c4983a 	sll	r2,r2,r3
   8c86c:	88a2b03a 	or	r17,r17,r2
   8c870:	8822c03a 	cmpne	r17,r17,zero
   8c874:	2462b03a 	or	r17,r4,r17
   8c878:	0007883a 	mov	r3,zero
   8c87c:	0021883a 	mov	r16,zero
   8c880:	003f6d06 	br	8c638 <__alt_data_end+0xfffc0b48>
   8c884:	11fff804 	addi	r7,r2,-32
   8c888:	01000804 	movi	r4,32
   8c88c:	29ced83a 	srl	r7,r5,r7
   8c890:	11004526 	beq	r2,r4,8c9a8 <__subdf3+0x57c>
   8c894:	01001004 	movi	r4,64
   8c898:	2089c83a 	sub	r4,r4,r2
   8c89c:	2904983a 	sll	r2,r5,r4
   8c8a0:	118cb03a 	or	r6,r2,r6
   8c8a4:	300cc03a 	cmpne	r6,r6,zero
   8c8a8:	398cb03a 	or	r6,r7,r6
   8c8ac:	0005883a 	mov	r2,zero
   8c8b0:	003f3706 	br	8c590 <__alt_data_end+0xfffc0aa0>
   8c8b4:	80002a26 	beq	r16,zero,8c960 <__subdf3+0x534>
   8c8b8:	0101ffc4 	movi	r4,2047
   8c8bc:	49006626 	beq	r9,r4,8ca58 <__subdf3+0x62c>
   8c8c0:	0085c83a 	sub	r2,zero,r2
   8c8c4:	18c02034 	orhi	r3,r3,128
   8c8c8:	01000e04 	movi	r4,56
   8c8cc:	20807e16 	blt	r4,r2,8cac8 <__subdf3+0x69c>
   8c8d0:	010007c4 	movi	r4,31
   8c8d4:	2080e716 	blt	r4,r2,8cc74 <__subdf3+0x848>
   8c8d8:	01000804 	movi	r4,32
   8c8dc:	2089c83a 	sub	r4,r4,r2
   8c8e0:	1914983a 	sll	r10,r3,r4
   8c8e4:	8890d83a 	srl	r8,r17,r2
   8c8e8:	8908983a 	sll	r4,r17,r4
   8c8ec:	1884d83a 	srl	r2,r3,r2
   8c8f0:	5222b03a 	or	r17,r10,r8
   8c8f4:	2006c03a 	cmpne	r3,r4,zero
   8c8f8:	88e2b03a 	or	r17,r17,r3
   8c8fc:	3463c83a 	sub	r17,r6,r17
   8c900:	2885c83a 	sub	r2,r5,r2
   8c904:	344d803a 	cmpltu	r6,r6,r17
   8c908:	1187c83a 	sub	r3,r2,r6
   8c90c:	4821883a 	mov	r16,r9
   8c910:	3825883a 	mov	r18,r7
   8c914:	003f2306 	br	8c5a4 <__alt_data_end+0xfffc0ab4>
   8c918:	24d0b03a 	or	r8,r4,r19
   8c91c:	40001b1e 	bne	r8,zero,8c98c <__subdf3+0x560>
   8c920:	0005883a 	mov	r2,zero
   8c924:	0009883a 	mov	r4,zero
   8c928:	0021883a 	mov	r16,zero
   8c92c:	003f4906 	br	8c654 <__alt_data_end+0xfffc0b64>
   8c930:	010007c4 	movi	r4,31
   8c934:	20803a16 	blt	r4,r2,8ca20 <__subdf3+0x5f4>
   8c938:	01000804 	movi	r4,32
   8c93c:	2089c83a 	sub	r4,r4,r2
   8c940:	2912983a 	sll	r9,r5,r4
   8c944:	3090d83a 	srl	r8,r6,r2
   8c948:	3108983a 	sll	r4,r6,r4
   8c94c:	2884d83a 	srl	r2,r5,r2
   8c950:	4a12b03a 	or	r9,r9,r8
   8c954:	2008c03a 	cmpne	r4,r4,zero
   8c958:	4912b03a 	or	r9,r9,r4
   8c95c:	003f4e06 	br	8c698 <__alt_data_end+0xfffc0ba8>
   8c960:	1c48b03a 	or	r4,r3,r17
   8c964:	20003c26 	beq	r4,zero,8ca58 <__subdf3+0x62c>
   8c968:	0084303a 	nor	r2,zero,r2
   8c96c:	1000381e 	bne	r2,zero,8ca50 <__subdf3+0x624>
   8c970:	3463c83a 	sub	r17,r6,r17
   8c974:	28c5c83a 	sub	r2,r5,r3
   8c978:	344d803a 	cmpltu	r6,r6,r17
   8c97c:	1187c83a 	sub	r3,r2,r6
   8c980:	4821883a 	mov	r16,r9
   8c984:	3825883a 	mov	r18,r7
   8c988:	003f0606 	br	8c5a4 <__alt_data_end+0xfffc0ab4>
   8c98c:	2023883a 	mov	r17,r4
   8c990:	003f0906 	br	8c5b8 <__alt_data_end+0xfffc0ac8>
   8c994:	0101ffc4 	movi	r4,2047
   8c998:	813f3a1e 	bne	r16,r4,8c684 <__alt_data_end+0xfffc0b94>
   8c99c:	003ec406 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8c9a0:	0005883a 	mov	r2,zero
   8c9a4:	003fb106 	br	8c86c <__alt_data_end+0xfffc0d7c>
   8c9a8:	0005883a 	mov	r2,zero
   8c9ac:	003fbc06 	br	8c8a0 <__alt_data_end+0xfffc0db0>
   8c9b0:	1c44b03a 	or	r2,r3,r17
   8c9b4:	80008e1e 	bne	r16,zero,8cbf0 <__subdf3+0x7c4>
   8c9b8:	1000c826 	beq	r2,zero,8ccdc <__subdf3+0x8b0>
   8c9bc:	2984b03a 	or	r2,r5,r6
   8c9c0:	103ebb26 	beq	r2,zero,8c4b0 <__alt_data_end+0xfffc09c0>
   8c9c4:	8989883a 	add	r4,r17,r6
   8c9c8:	1945883a 	add	r2,r3,r5
   8c9cc:	2447803a 	cmpltu	r3,r4,r17
   8c9d0:	1887883a 	add	r3,r3,r2
   8c9d4:	1880202c 	andhi	r2,r3,128
   8c9d8:	2023883a 	mov	r17,r4
   8c9dc:	103f1626 	beq	r2,zero,8c638 <__alt_data_end+0xfffc0b48>
   8c9e0:	00bfe034 	movhi	r2,65408
   8c9e4:	10bfffc4 	addi	r2,r2,-1
   8c9e8:	5021883a 	mov	r16,r10
   8c9ec:	1886703a 	and	r3,r3,r2
   8c9f0:	003eaf06 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8c9f4:	3825883a 	mov	r18,r7
   8c9f8:	003f0f06 	br	8c638 <__alt_data_end+0xfffc0b48>
   8c9fc:	1c44b03a 	or	r2,r3,r17
   8ca00:	8000251e 	bne	r16,zero,8ca98 <__subdf3+0x66c>
   8ca04:	1000661e 	bne	r2,zero,8cba0 <__subdf3+0x774>
   8ca08:	2990b03a 	or	r8,r5,r6
   8ca0c:	40009626 	beq	r8,zero,8cc68 <__subdf3+0x83c>
   8ca10:	2807883a 	mov	r3,r5
   8ca14:	3023883a 	mov	r17,r6
   8ca18:	3825883a 	mov	r18,r7
   8ca1c:	003ea406 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8ca20:	127ff804 	addi	r9,r2,-32
   8ca24:	01000804 	movi	r4,32
   8ca28:	2a52d83a 	srl	r9,r5,r9
   8ca2c:	11008c26 	beq	r2,r4,8cc60 <__subdf3+0x834>
   8ca30:	01001004 	movi	r4,64
   8ca34:	2085c83a 	sub	r2,r4,r2
   8ca38:	2884983a 	sll	r2,r5,r2
   8ca3c:	118cb03a 	or	r6,r2,r6
   8ca40:	300cc03a 	cmpne	r6,r6,zero
   8ca44:	4992b03a 	or	r9,r9,r6
   8ca48:	0005883a 	mov	r2,zero
   8ca4c:	003f1206 	br	8c698 <__alt_data_end+0xfffc0ba8>
   8ca50:	0101ffc4 	movi	r4,2047
   8ca54:	493f9c1e 	bne	r9,r4,8c8c8 <__alt_data_end+0xfffc0dd8>
   8ca58:	2807883a 	mov	r3,r5
   8ca5c:	3023883a 	mov	r17,r6
   8ca60:	4821883a 	mov	r16,r9
   8ca64:	3825883a 	mov	r18,r7
   8ca68:	003e9106 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8ca6c:	80001f1e 	bne	r16,zero,8caec <__subdf3+0x6c0>
   8ca70:	1c48b03a 	or	r4,r3,r17
   8ca74:	20005a26 	beq	r4,zero,8cbe0 <__subdf3+0x7b4>
   8ca78:	0084303a 	nor	r2,zero,r2
   8ca7c:	1000561e 	bne	r2,zero,8cbd8 <__subdf3+0x7ac>
   8ca80:	89a3883a 	add	r17,r17,r6
   8ca84:	1945883a 	add	r2,r3,r5
   8ca88:	898d803a 	cmpltu	r6,r17,r6
   8ca8c:	3087883a 	add	r3,r6,r2
   8ca90:	4821883a 	mov	r16,r9
   8ca94:	003f0506 	br	8c6ac <__alt_data_end+0xfffc0bbc>
   8ca98:	10002b1e 	bne	r2,zero,8cb48 <__subdf3+0x71c>
   8ca9c:	2984b03a 	or	r2,r5,r6
   8caa0:	10008026 	beq	r2,zero,8cca4 <__subdf3+0x878>
   8caa4:	2807883a 	mov	r3,r5
   8caa8:	3023883a 	mov	r17,r6
   8caac:	3825883a 	mov	r18,r7
   8cab0:	0401ffc4 	movi	r16,2047
   8cab4:	003e7e06 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8cab8:	3809883a 	mov	r4,r7
   8cabc:	0011883a 	mov	r8,zero
   8cac0:	0005883a 	mov	r2,zero
   8cac4:	003ee306 	br	8c654 <__alt_data_end+0xfffc0b64>
   8cac8:	1c62b03a 	or	r17,r3,r17
   8cacc:	8822c03a 	cmpne	r17,r17,zero
   8cad0:	0005883a 	mov	r2,zero
   8cad4:	003f8906 	br	8c8fc <__alt_data_end+0xfffc0e0c>
   8cad8:	3809883a 	mov	r4,r7
   8cadc:	4821883a 	mov	r16,r9
   8cae0:	0011883a 	mov	r8,zero
   8cae4:	0005883a 	mov	r2,zero
   8cae8:	003eda06 	br	8c654 <__alt_data_end+0xfffc0b64>
   8caec:	0101ffc4 	movi	r4,2047
   8caf0:	49003b26 	beq	r9,r4,8cbe0 <__subdf3+0x7b4>
   8caf4:	0085c83a 	sub	r2,zero,r2
   8caf8:	18c02034 	orhi	r3,r3,128
   8cafc:	01000e04 	movi	r4,56
   8cb00:	20806e16 	blt	r4,r2,8ccbc <__subdf3+0x890>
   8cb04:	010007c4 	movi	r4,31
   8cb08:	20807716 	blt	r4,r2,8cce8 <__subdf3+0x8bc>
   8cb0c:	01000804 	movi	r4,32
   8cb10:	2089c83a 	sub	r4,r4,r2
   8cb14:	1914983a 	sll	r10,r3,r4
   8cb18:	8890d83a 	srl	r8,r17,r2
   8cb1c:	8908983a 	sll	r4,r17,r4
   8cb20:	1884d83a 	srl	r2,r3,r2
   8cb24:	5222b03a 	or	r17,r10,r8
   8cb28:	2006c03a 	cmpne	r3,r4,zero
   8cb2c:	88e2b03a 	or	r17,r17,r3
   8cb30:	89a3883a 	add	r17,r17,r6
   8cb34:	1145883a 	add	r2,r2,r5
   8cb38:	898d803a 	cmpltu	r6,r17,r6
   8cb3c:	3087883a 	add	r3,r6,r2
   8cb40:	4821883a 	mov	r16,r9
   8cb44:	003ed906 	br	8c6ac <__alt_data_end+0xfffc0bbc>
   8cb48:	2984b03a 	or	r2,r5,r6
   8cb4c:	10004226 	beq	r2,zero,8cc58 <__subdf3+0x82c>
   8cb50:	1808d0fa 	srli	r4,r3,3
   8cb54:	8822d0fa 	srli	r17,r17,3
   8cb58:	1806977a 	slli	r3,r3,29
   8cb5c:	2080022c 	andhi	r2,r4,8
   8cb60:	1c62b03a 	or	r17,r3,r17
   8cb64:	10000826 	beq	r2,zero,8cb88 <__subdf3+0x75c>
   8cb68:	2812d0fa 	srli	r9,r5,3
   8cb6c:	4880022c 	andhi	r2,r9,8
   8cb70:	1000051e 	bne	r2,zero,8cb88 <__subdf3+0x75c>
   8cb74:	300cd0fa 	srli	r6,r6,3
   8cb78:	2804977a 	slli	r2,r5,29
   8cb7c:	4809883a 	mov	r4,r9
   8cb80:	3825883a 	mov	r18,r7
   8cb84:	11a2b03a 	or	r17,r2,r6
   8cb88:	8806d77a 	srli	r3,r17,29
   8cb8c:	200890fa 	slli	r4,r4,3
   8cb90:	882290fa 	slli	r17,r17,3
   8cb94:	0401ffc4 	movi	r16,2047
   8cb98:	1906b03a 	or	r3,r3,r4
   8cb9c:	003e4406 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8cba0:	2984b03a 	or	r2,r5,r6
   8cba4:	103e4226 	beq	r2,zero,8c4b0 <__alt_data_end+0xfffc09c0>
   8cba8:	8989c83a 	sub	r4,r17,r6
   8cbac:	8911803a 	cmpltu	r8,r17,r4
   8cbb0:	1945c83a 	sub	r2,r3,r5
   8cbb4:	1205c83a 	sub	r2,r2,r8
   8cbb8:	1200202c 	andhi	r8,r2,128
   8cbbc:	403e9a26 	beq	r8,zero,8c628 <__alt_data_end+0xfffc0b38>
   8cbc0:	3463c83a 	sub	r17,r6,r17
   8cbc4:	28c5c83a 	sub	r2,r5,r3
   8cbc8:	344d803a 	cmpltu	r6,r6,r17
   8cbcc:	1187c83a 	sub	r3,r2,r6
   8cbd0:	3825883a 	mov	r18,r7
   8cbd4:	003e3606 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8cbd8:	0101ffc4 	movi	r4,2047
   8cbdc:	493fc71e 	bne	r9,r4,8cafc <__alt_data_end+0xfffc100c>
   8cbe0:	2807883a 	mov	r3,r5
   8cbe4:	3023883a 	mov	r17,r6
   8cbe8:	4821883a 	mov	r16,r9
   8cbec:	003e3006 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8cbf0:	10003626 	beq	r2,zero,8cccc <__subdf3+0x8a0>
   8cbf4:	2984b03a 	or	r2,r5,r6
   8cbf8:	10001726 	beq	r2,zero,8cc58 <__subdf3+0x82c>
   8cbfc:	1808d0fa 	srli	r4,r3,3
   8cc00:	8822d0fa 	srli	r17,r17,3
   8cc04:	1806977a 	slli	r3,r3,29
   8cc08:	2080022c 	andhi	r2,r4,8
   8cc0c:	1c62b03a 	or	r17,r3,r17
   8cc10:	10000726 	beq	r2,zero,8cc30 <__subdf3+0x804>
   8cc14:	2812d0fa 	srli	r9,r5,3
   8cc18:	4880022c 	andhi	r2,r9,8
   8cc1c:	1000041e 	bne	r2,zero,8cc30 <__subdf3+0x804>
   8cc20:	300cd0fa 	srli	r6,r6,3
   8cc24:	2804977a 	slli	r2,r5,29
   8cc28:	4809883a 	mov	r4,r9
   8cc2c:	11a2b03a 	or	r17,r2,r6
   8cc30:	8806d77a 	srli	r3,r17,29
   8cc34:	200890fa 	slli	r4,r4,3
   8cc38:	882290fa 	slli	r17,r17,3
   8cc3c:	3825883a 	mov	r18,r7
   8cc40:	1906b03a 	or	r3,r3,r4
   8cc44:	0401ffc4 	movi	r16,2047
   8cc48:	003e1906 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8cc4c:	000b883a 	mov	r5,zero
   8cc50:	0005883a 	mov	r2,zero
   8cc54:	003e2e06 	br	8c510 <__alt_data_end+0xfffc0a20>
   8cc58:	0401ffc4 	movi	r16,2047
   8cc5c:	003e1406 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8cc60:	0005883a 	mov	r2,zero
   8cc64:	003f7506 	br	8ca3c <__alt_data_end+0xfffc0f4c>
   8cc68:	0005883a 	mov	r2,zero
   8cc6c:	0009883a 	mov	r4,zero
   8cc70:	003e7806 	br	8c654 <__alt_data_end+0xfffc0b64>
   8cc74:	123ff804 	addi	r8,r2,-32
   8cc78:	01000804 	movi	r4,32
   8cc7c:	1a10d83a 	srl	r8,r3,r8
   8cc80:	11002526 	beq	r2,r4,8cd18 <__subdf3+0x8ec>
   8cc84:	01001004 	movi	r4,64
   8cc88:	2085c83a 	sub	r2,r4,r2
   8cc8c:	1884983a 	sll	r2,r3,r2
   8cc90:	1444b03a 	or	r2,r2,r17
   8cc94:	1004c03a 	cmpne	r2,r2,zero
   8cc98:	40a2b03a 	or	r17,r8,r2
   8cc9c:	0005883a 	mov	r2,zero
   8cca0:	003f1606 	br	8c8fc <__alt_data_end+0xfffc0e0c>
   8cca4:	02000434 	movhi	r8,16
   8cca8:	0009883a 	mov	r4,zero
   8ccac:	423fffc4 	addi	r8,r8,-1
   8ccb0:	00bfffc4 	movi	r2,-1
   8ccb4:	0401ffc4 	movi	r16,2047
   8ccb8:	003e6606 	br	8c654 <__alt_data_end+0xfffc0b64>
   8ccbc:	1c62b03a 	or	r17,r3,r17
   8ccc0:	8822c03a 	cmpne	r17,r17,zero
   8ccc4:	0005883a 	mov	r2,zero
   8ccc8:	003f9906 	br	8cb30 <__alt_data_end+0xfffc1040>
   8cccc:	2807883a 	mov	r3,r5
   8ccd0:	3023883a 	mov	r17,r6
   8ccd4:	0401ffc4 	movi	r16,2047
   8ccd8:	003df506 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8ccdc:	2807883a 	mov	r3,r5
   8cce0:	3023883a 	mov	r17,r6
   8cce4:	003df206 	br	8c4b0 <__alt_data_end+0xfffc09c0>
   8cce8:	123ff804 	addi	r8,r2,-32
   8ccec:	01000804 	movi	r4,32
   8ccf0:	1a10d83a 	srl	r8,r3,r8
   8ccf4:	11000a26 	beq	r2,r4,8cd20 <__subdf3+0x8f4>
   8ccf8:	01001004 	movi	r4,64
   8ccfc:	2085c83a 	sub	r2,r4,r2
   8cd00:	1884983a 	sll	r2,r3,r2
   8cd04:	1444b03a 	or	r2,r2,r17
   8cd08:	1004c03a 	cmpne	r2,r2,zero
   8cd0c:	40a2b03a 	or	r17,r8,r2
   8cd10:	0005883a 	mov	r2,zero
   8cd14:	003f8606 	br	8cb30 <__alt_data_end+0xfffc1040>
   8cd18:	0005883a 	mov	r2,zero
   8cd1c:	003fdc06 	br	8cc90 <__alt_data_end+0xfffc11a0>
   8cd20:	0005883a 	mov	r2,zero
   8cd24:	003ff706 	br	8cd04 <__alt_data_end+0xfffc1214>

0008cd28 <__fixdfsi>:
   8cd28:	280cd53a 	srli	r6,r5,20
   8cd2c:	00c00434 	movhi	r3,16
   8cd30:	18ffffc4 	addi	r3,r3,-1
   8cd34:	3181ffcc 	andi	r6,r6,2047
   8cd38:	01c0ff84 	movi	r7,1022
   8cd3c:	28c6703a 	and	r3,r5,r3
   8cd40:	280ad7fa 	srli	r5,r5,31
   8cd44:	3980120e 	bge	r7,r6,8cd90 <__fixdfsi+0x68>
   8cd48:	00810744 	movi	r2,1053
   8cd4c:	11800c16 	blt	r2,r6,8cd80 <__fixdfsi+0x58>
   8cd50:	00810cc4 	movi	r2,1075
   8cd54:	1185c83a 	sub	r2,r2,r6
   8cd58:	01c007c4 	movi	r7,31
   8cd5c:	18c00434 	orhi	r3,r3,16
   8cd60:	38800d16 	blt	r7,r2,8cd98 <__fixdfsi+0x70>
   8cd64:	31befb44 	addi	r6,r6,-1043
   8cd68:	2084d83a 	srl	r2,r4,r2
   8cd6c:	1986983a 	sll	r3,r3,r6
   8cd70:	1884b03a 	or	r2,r3,r2
   8cd74:	28000726 	beq	r5,zero,8cd94 <__fixdfsi+0x6c>
   8cd78:	0085c83a 	sub	r2,zero,r2
   8cd7c:	f800283a 	ret
   8cd80:	00a00034 	movhi	r2,32768
   8cd84:	10bfffc4 	addi	r2,r2,-1
   8cd88:	2885883a 	add	r2,r5,r2
   8cd8c:	f800283a 	ret
   8cd90:	0005883a 	mov	r2,zero
   8cd94:	f800283a 	ret
   8cd98:	008104c4 	movi	r2,1043
   8cd9c:	1185c83a 	sub	r2,r2,r6
   8cda0:	1884d83a 	srl	r2,r3,r2
   8cda4:	003ff306 	br	8cd74 <__alt_data_end+0xfffc1284>

0008cda8 <__floatsidf>:
   8cda8:	defffd04 	addi	sp,sp,-12
   8cdac:	dfc00215 	stw	ra,8(sp)
   8cdb0:	dc400115 	stw	r17,4(sp)
   8cdb4:	dc000015 	stw	r16,0(sp)
   8cdb8:	20002b26 	beq	r4,zero,8ce68 <__floatsidf+0xc0>
   8cdbc:	2023883a 	mov	r17,r4
   8cdc0:	2020d7fa 	srli	r16,r4,31
   8cdc4:	20002d16 	blt	r4,zero,8ce7c <__floatsidf+0xd4>
   8cdc8:	8809883a 	mov	r4,r17
   8cdcc:	008cf2c0 	call	8cf2c <__clzsi2>
   8cdd0:	01410784 	movi	r5,1054
   8cdd4:	288bc83a 	sub	r5,r5,r2
   8cdd8:	01010cc4 	movi	r4,1075
   8cddc:	2149c83a 	sub	r4,r4,r5
   8cde0:	00c007c4 	movi	r3,31
   8cde4:	1900160e 	bge	r3,r4,8ce40 <__floatsidf+0x98>
   8cde8:	00c104c4 	movi	r3,1043
   8cdec:	1947c83a 	sub	r3,r3,r5
   8cdf0:	88c6983a 	sll	r3,r17,r3
   8cdf4:	00800434 	movhi	r2,16
   8cdf8:	10bfffc4 	addi	r2,r2,-1
   8cdfc:	1886703a 	and	r3,r3,r2
   8ce00:	2941ffcc 	andi	r5,r5,2047
   8ce04:	800d883a 	mov	r6,r16
   8ce08:	0005883a 	mov	r2,zero
   8ce0c:	280a953a 	slli	r5,r5,20
   8ce10:	31803fcc 	andi	r6,r6,255
   8ce14:	01000434 	movhi	r4,16
   8ce18:	300c97fa 	slli	r6,r6,31
   8ce1c:	213fffc4 	addi	r4,r4,-1
   8ce20:	1906703a 	and	r3,r3,r4
   8ce24:	1946b03a 	or	r3,r3,r5
   8ce28:	1986b03a 	or	r3,r3,r6
   8ce2c:	dfc00217 	ldw	ra,8(sp)
   8ce30:	dc400117 	ldw	r17,4(sp)
   8ce34:	dc000017 	ldw	r16,0(sp)
   8ce38:	dec00304 	addi	sp,sp,12
   8ce3c:	f800283a 	ret
   8ce40:	00c002c4 	movi	r3,11
   8ce44:	1887c83a 	sub	r3,r3,r2
   8ce48:	88c6d83a 	srl	r3,r17,r3
   8ce4c:	8904983a 	sll	r2,r17,r4
   8ce50:	01000434 	movhi	r4,16
   8ce54:	213fffc4 	addi	r4,r4,-1
   8ce58:	2941ffcc 	andi	r5,r5,2047
   8ce5c:	1906703a 	and	r3,r3,r4
   8ce60:	800d883a 	mov	r6,r16
   8ce64:	003fe906 	br	8ce0c <__alt_data_end+0xfffc131c>
   8ce68:	000d883a 	mov	r6,zero
   8ce6c:	000b883a 	mov	r5,zero
   8ce70:	0007883a 	mov	r3,zero
   8ce74:	0005883a 	mov	r2,zero
   8ce78:	003fe406 	br	8ce0c <__alt_data_end+0xfffc131c>
   8ce7c:	0123c83a 	sub	r17,zero,r4
   8ce80:	003fd106 	br	8cdc8 <__alt_data_end+0xfffc12d8>

0008ce84 <__floatunsidf>:
   8ce84:	defffe04 	addi	sp,sp,-8
   8ce88:	dc000015 	stw	r16,0(sp)
   8ce8c:	dfc00115 	stw	ra,4(sp)
   8ce90:	2021883a 	mov	r16,r4
   8ce94:	20002226 	beq	r4,zero,8cf20 <__floatunsidf+0x9c>
   8ce98:	008cf2c0 	call	8cf2c <__clzsi2>
   8ce9c:	01010784 	movi	r4,1054
   8cea0:	2089c83a 	sub	r4,r4,r2
   8cea4:	01810cc4 	movi	r6,1075
   8cea8:	310dc83a 	sub	r6,r6,r4
   8ceac:	00c007c4 	movi	r3,31
   8ceb0:	1980120e 	bge	r3,r6,8cefc <__floatunsidf+0x78>
   8ceb4:	00c104c4 	movi	r3,1043
   8ceb8:	1907c83a 	sub	r3,r3,r4
   8cebc:	80ca983a 	sll	r5,r16,r3
   8cec0:	00800434 	movhi	r2,16
   8cec4:	10bfffc4 	addi	r2,r2,-1
   8cec8:	2101ffcc 	andi	r4,r4,2047
   8cecc:	0021883a 	mov	r16,zero
   8ced0:	288a703a 	and	r5,r5,r2
   8ced4:	2008953a 	slli	r4,r4,20
   8ced8:	00c00434 	movhi	r3,16
   8cedc:	18ffffc4 	addi	r3,r3,-1
   8cee0:	28c6703a 	and	r3,r5,r3
   8cee4:	8005883a 	mov	r2,r16
   8cee8:	1906b03a 	or	r3,r3,r4
   8ceec:	dfc00117 	ldw	ra,4(sp)
   8cef0:	dc000017 	ldw	r16,0(sp)
   8cef4:	dec00204 	addi	sp,sp,8
   8cef8:	f800283a 	ret
   8cefc:	00c002c4 	movi	r3,11
   8cf00:	188bc83a 	sub	r5,r3,r2
   8cf04:	814ad83a 	srl	r5,r16,r5
   8cf08:	00c00434 	movhi	r3,16
   8cf0c:	18ffffc4 	addi	r3,r3,-1
   8cf10:	81a0983a 	sll	r16,r16,r6
   8cf14:	2101ffcc 	andi	r4,r4,2047
   8cf18:	28ca703a 	and	r5,r5,r3
   8cf1c:	003fed06 	br	8ced4 <__alt_data_end+0xfffc13e4>
   8cf20:	0009883a 	mov	r4,zero
   8cf24:	000b883a 	mov	r5,zero
   8cf28:	003fea06 	br	8ced4 <__alt_data_end+0xfffc13e4>

0008cf2c <__clzsi2>:
   8cf2c:	00bfffd4 	movui	r2,65535
   8cf30:	11000536 	bltu	r2,r4,8cf48 <__clzsi2+0x1c>
   8cf34:	00803fc4 	movi	r2,255
   8cf38:	11000f36 	bltu	r2,r4,8cf78 <__clzsi2+0x4c>
   8cf3c:	00800804 	movi	r2,32
   8cf40:	0007883a 	mov	r3,zero
   8cf44:	00000506 	br	8cf5c <__clzsi2+0x30>
   8cf48:	00804034 	movhi	r2,256
   8cf4c:	10bfffc4 	addi	r2,r2,-1
   8cf50:	11000c2e 	bgeu	r2,r4,8cf84 <__clzsi2+0x58>
   8cf54:	00800204 	movi	r2,8
   8cf58:	00c00604 	movi	r3,24
   8cf5c:	20c8d83a 	srl	r4,r4,r3
   8cf60:	00c00274 	movhi	r3,9
   8cf64:	18feb104 	addi	r3,r3,-1340
   8cf68:	1909883a 	add	r4,r3,r4
   8cf6c:	20c00003 	ldbu	r3,0(r4)
   8cf70:	10c5c83a 	sub	r2,r2,r3
   8cf74:	f800283a 	ret
   8cf78:	00800604 	movi	r2,24
   8cf7c:	00c00204 	movi	r3,8
   8cf80:	003ff606 	br	8cf5c <__alt_data_end+0xfffc146c>
   8cf84:	00800404 	movi	r2,16
   8cf88:	1007883a 	mov	r3,r2
   8cf8c:	003ff306 	br	8cf5c <__alt_data_end+0xfffc146c>

0008cf90 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8cf90:	defffe04 	addi	sp,sp,-8
   8cf94:	dfc00115 	stw	ra,4(sp)
   8cf98:	df000015 	stw	fp,0(sp)
   8cf9c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8cfa0:	d0a00c17 	ldw	r2,-32720(gp)
   8cfa4:	10000326 	beq	r2,zero,8cfb4 <alt_get_errno+0x24>
   8cfa8:	d0a00c17 	ldw	r2,-32720(gp)
   8cfac:	103ee83a 	callr	r2
   8cfb0:	00000106 	br	8cfb8 <alt_get_errno+0x28>
   8cfb4:	d0a6d604 	addi	r2,gp,-25768
}
   8cfb8:	e037883a 	mov	sp,fp
   8cfbc:	dfc00117 	ldw	ra,4(sp)
   8cfc0:	df000017 	ldw	fp,0(sp)
   8cfc4:	dec00204 	addi	sp,sp,8
   8cfc8:	f800283a 	ret

0008cfcc <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   8cfcc:	defffb04 	addi	sp,sp,-20
   8cfd0:	dfc00415 	stw	ra,16(sp)
   8cfd4:	df000315 	stw	fp,12(sp)
   8cfd8:	df000304 	addi	fp,sp,12
   8cfdc:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   8cfe0:	e0bfff17 	ldw	r2,-4(fp)
   8cfe4:	10000616 	blt	r2,zero,8d000 <close+0x34>
   8cfe8:	e0bfff17 	ldw	r2,-4(fp)
   8cfec:	10c00324 	muli	r3,r2,12
   8cff0:	00800274 	movhi	r2,9
   8cff4:	10812f04 	addi	r2,r2,1212
   8cff8:	1885883a 	add	r2,r3,r2
   8cffc:	00000106 	br	8d004 <close+0x38>
   8d000:	0005883a 	mov	r2,zero
   8d004:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   8d008:	e0bffd17 	ldw	r2,-12(fp)
   8d00c:	10001926 	beq	r2,zero,8d074 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   8d010:	e0bffd17 	ldw	r2,-12(fp)
   8d014:	10800017 	ldw	r2,0(r2)
   8d018:	10800417 	ldw	r2,16(r2)
   8d01c:	10000626 	beq	r2,zero,8d038 <close+0x6c>
   8d020:	e0bffd17 	ldw	r2,-12(fp)
   8d024:	10800017 	ldw	r2,0(r2)
   8d028:	10800417 	ldw	r2,16(r2)
   8d02c:	e13ffd17 	ldw	r4,-12(fp)
   8d030:	103ee83a 	callr	r2
   8d034:	00000106 	br	8d03c <close+0x70>
   8d038:	0005883a 	mov	r2,zero
   8d03c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   8d040:	e13fff17 	ldw	r4,-4(fp)
   8d044:	008daac0 	call	8daac <alt_release_fd>
    if (rval < 0)
   8d048:	e0bffe17 	ldw	r2,-8(fp)
   8d04c:	1000070e 	bge	r2,zero,8d06c <close+0xa0>
    {
      ALT_ERRNO = -rval;
   8d050:	008cf900 	call	8cf90 <alt_get_errno>
   8d054:	1007883a 	mov	r3,r2
   8d058:	e0bffe17 	ldw	r2,-8(fp)
   8d05c:	0085c83a 	sub	r2,zero,r2
   8d060:	18800015 	stw	r2,0(r3)
      return -1;
   8d064:	00bfffc4 	movi	r2,-1
   8d068:	00000706 	br	8d088 <close+0xbc>
    }
    return 0;
   8d06c:	0005883a 	mov	r2,zero
   8d070:	00000506 	br	8d088 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8d074:	008cf900 	call	8cf90 <alt_get_errno>
   8d078:	1007883a 	mov	r3,r2
   8d07c:	00801444 	movi	r2,81
   8d080:	18800015 	stw	r2,0(r3)
    return -1;
   8d084:	00bfffc4 	movi	r2,-1
  }
}
   8d088:	e037883a 	mov	sp,fp
   8d08c:	dfc00117 	ldw	ra,4(sp)
   8d090:	df000017 	ldw	fp,0(sp)
   8d094:	dec00204 	addi	sp,sp,8
   8d098:	f800283a 	ret

0008d09c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   8d09c:	defffc04 	addi	sp,sp,-16
   8d0a0:	df000315 	stw	fp,12(sp)
   8d0a4:	df000304 	addi	fp,sp,12
   8d0a8:	e13ffd15 	stw	r4,-12(fp)
   8d0ac:	e17ffe15 	stw	r5,-8(fp)
   8d0b0:	e1bfff15 	stw	r6,-4(fp)
  return len;
   8d0b4:	e0bfff17 	ldw	r2,-4(fp)
}
   8d0b8:	e037883a 	mov	sp,fp
   8d0bc:	df000017 	ldw	fp,0(sp)
   8d0c0:	dec00104 	addi	sp,sp,4
   8d0c4:	f800283a 	ret

0008d0c8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d0c8:	defffe04 	addi	sp,sp,-8
   8d0cc:	dfc00115 	stw	ra,4(sp)
   8d0d0:	df000015 	stw	fp,0(sp)
   8d0d4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d0d8:	d0a00c17 	ldw	r2,-32720(gp)
   8d0dc:	10000326 	beq	r2,zero,8d0ec <alt_get_errno+0x24>
   8d0e0:	d0a00c17 	ldw	r2,-32720(gp)
   8d0e4:	103ee83a 	callr	r2
   8d0e8:	00000106 	br	8d0f0 <alt_get_errno+0x28>
   8d0ec:	d0a6d604 	addi	r2,gp,-25768
}
   8d0f0:	e037883a 	mov	sp,fp
   8d0f4:	dfc00117 	ldw	ra,4(sp)
   8d0f8:	df000017 	ldw	fp,0(sp)
   8d0fc:	dec00204 	addi	sp,sp,8
   8d100:	f800283a 	ret

0008d104 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   8d104:	defffb04 	addi	sp,sp,-20
   8d108:	dfc00415 	stw	ra,16(sp)
   8d10c:	df000315 	stw	fp,12(sp)
   8d110:	df000304 	addi	fp,sp,12
   8d114:	e13ffe15 	stw	r4,-8(fp)
   8d118:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d11c:	e0bffe17 	ldw	r2,-8(fp)
   8d120:	10000616 	blt	r2,zero,8d13c <fstat+0x38>
   8d124:	e0bffe17 	ldw	r2,-8(fp)
   8d128:	10c00324 	muli	r3,r2,12
   8d12c:	00800274 	movhi	r2,9
   8d130:	10812f04 	addi	r2,r2,1212
   8d134:	1885883a 	add	r2,r3,r2
   8d138:	00000106 	br	8d140 <fstat+0x3c>
   8d13c:	0005883a 	mov	r2,zero
   8d140:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   8d144:	e0bffd17 	ldw	r2,-12(fp)
   8d148:	10001026 	beq	r2,zero,8d18c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   8d14c:	e0bffd17 	ldw	r2,-12(fp)
   8d150:	10800017 	ldw	r2,0(r2)
   8d154:	10800817 	ldw	r2,32(r2)
   8d158:	10000726 	beq	r2,zero,8d178 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   8d15c:	e0bffd17 	ldw	r2,-12(fp)
   8d160:	10800017 	ldw	r2,0(r2)
   8d164:	10800817 	ldw	r2,32(r2)
   8d168:	e17fff17 	ldw	r5,-4(fp)
   8d16c:	e13ffd17 	ldw	r4,-12(fp)
   8d170:	103ee83a 	callr	r2
   8d174:	00000a06 	br	8d1a0 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   8d178:	e0bfff17 	ldw	r2,-4(fp)
   8d17c:	00c80004 	movi	r3,8192
   8d180:	10c00115 	stw	r3,4(r2)
      return 0;
   8d184:	0005883a 	mov	r2,zero
   8d188:	00000506 	br	8d1a0 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8d18c:	008d0c80 	call	8d0c8 <alt_get_errno>
   8d190:	1007883a 	mov	r3,r2
   8d194:	00801444 	movi	r2,81
   8d198:	18800015 	stw	r2,0(r3)
    return -1;
   8d19c:	00bfffc4 	movi	r2,-1
  }
}
   8d1a0:	e037883a 	mov	sp,fp
   8d1a4:	dfc00117 	ldw	ra,4(sp)
   8d1a8:	df000017 	ldw	fp,0(sp)
   8d1ac:	dec00204 	addi	sp,sp,8
   8d1b0:	f800283a 	ret

0008d1b4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   8d1b4:	defff904 	addi	sp,sp,-28
   8d1b8:	dfc00615 	stw	ra,24(sp)
   8d1bc:	df000515 	stw	fp,20(sp)
   8d1c0:	df000504 	addi	fp,sp,20
   8d1c4:	e13ffc15 	stw	r4,-16(fp)
   8d1c8:	e17ffd15 	stw	r5,-12(fp)
   8d1cc:	e1bffe15 	stw	r6,-8(fp)
   8d1d0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   8d1d4:	e0800217 	ldw	r2,8(fp)
   8d1d8:	d8800015 	stw	r2,0(sp)
   8d1dc:	e1ffff17 	ldw	r7,-4(fp)
   8d1e0:	e1bffe17 	ldw	r6,-8(fp)
   8d1e4:	e17ffd17 	ldw	r5,-12(fp)
   8d1e8:	e13ffc17 	ldw	r4,-16(fp)
   8d1ec:	008d3640 	call	8d364 <alt_iic_isr_register>
}  
   8d1f0:	e037883a 	mov	sp,fp
   8d1f4:	dfc00117 	ldw	ra,4(sp)
   8d1f8:	df000017 	ldw	fp,0(sp)
   8d1fc:	dec00204 	addi	sp,sp,8
   8d200:	f800283a 	ret

0008d204 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   8d204:	defff904 	addi	sp,sp,-28
   8d208:	df000615 	stw	fp,24(sp)
   8d20c:	df000604 	addi	fp,sp,24
   8d210:	e13ffe15 	stw	r4,-8(fp)
   8d214:	e17fff15 	stw	r5,-4(fp)
   8d218:	e0bfff17 	ldw	r2,-4(fp)
   8d21c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8d220:	0005303a 	rdctl	r2,status
   8d224:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8d228:	e0fffb17 	ldw	r3,-20(fp)
   8d22c:	00bfff84 	movi	r2,-2
   8d230:	1884703a 	and	r2,r3,r2
   8d234:	1001703a 	wrctl	status,r2
  
  return context;
   8d238:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   8d23c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   8d240:	00c00044 	movi	r3,1
   8d244:	e0bffa17 	ldw	r2,-24(fp)
   8d248:	1884983a 	sll	r2,r3,r2
   8d24c:	1007883a 	mov	r3,r2
   8d250:	d0a6d717 	ldw	r2,-25764(gp)
   8d254:	1884b03a 	or	r2,r3,r2
   8d258:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   8d25c:	d0a6d717 	ldw	r2,-25764(gp)
   8d260:	100170fa 	wrctl	ienable,r2
   8d264:	e0bffc17 	ldw	r2,-16(fp)
   8d268:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8d26c:	e0bffd17 	ldw	r2,-12(fp)
   8d270:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   8d274:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   8d278:	0001883a 	nop
}
   8d27c:	e037883a 	mov	sp,fp
   8d280:	df000017 	ldw	fp,0(sp)
   8d284:	dec00104 	addi	sp,sp,4
   8d288:	f800283a 	ret

0008d28c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   8d28c:	defff904 	addi	sp,sp,-28
   8d290:	df000615 	stw	fp,24(sp)
   8d294:	df000604 	addi	fp,sp,24
   8d298:	e13ffe15 	stw	r4,-8(fp)
   8d29c:	e17fff15 	stw	r5,-4(fp)
   8d2a0:	e0bfff17 	ldw	r2,-4(fp)
   8d2a4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8d2a8:	0005303a 	rdctl	r2,status
   8d2ac:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8d2b0:	e0fffb17 	ldw	r3,-20(fp)
   8d2b4:	00bfff84 	movi	r2,-2
   8d2b8:	1884703a 	and	r2,r3,r2
   8d2bc:	1001703a 	wrctl	status,r2
  
  return context;
   8d2c0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   8d2c4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   8d2c8:	00c00044 	movi	r3,1
   8d2cc:	e0bffa17 	ldw	r2,-24(fp)
   8d2d0:	1884983a 	sll	r2,r3,r2
   8d2d4:	0084303a 	nor	r2,zero,r2
   8d2d8:	1007883a 	mov	r3,r2
   8d2dc:	d0a6d717 	ldw	r2,-25764(gp)
   8d2e0:	1884703a 	and	r2,r3,r2
   8d2e4:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   8d2e8:	d0a6d717 	ldw	r2,-25764(gp)
   8d2ec:	100170fa 	wrctl	ienable,r2
   8d2f0:	e0bffc17 	ldw	r2,-16(fp)
   8d2f4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8d2f8:	e0bffd17 	ldw	r2,-12(fp)
   8d2fc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   8d300:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   8d304:	0001883a 	nop
}
   8d308:	e037883a 	mov	sp,fp
   8d30c:	df000017 	ldw	fp,0(sp)
   8d310:	dec00104 	addi	sp,sp,4
   8d314:	f800283a 	ret

0008d318 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   8d318:	defffc04 	addi	sp,sp,-16
   8d31c:	df000315 	stw	fp,12(sp)
   8d320:	df000304 	addi	fp,sp,12
   8d324:	e13ffe15 	stw	r4,-8(fp)
   8d328:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   8d32c:	000530fa 	rdctl	r2,ienable
   8d330:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   8d334:	00c00044 	movi	r3,1
   8d338:	e0bfff17 	ldw	r2,-4(fp)
   8d33c:	1884983a 	sll	r2,r3,r2
   8d340:	1007883a 	mov	r3,r2
   8d344:	e0bffd17 	ldw	r2,-12(fp)
   8d348:	1884703a 	and	r2,r3,r2
   8d34c:	1004c03a 	cmpne	r2,r2,zero
   8d350:	10803fcc 	andi	r2,r2,255
}
   8d354:	e037883a 	mov	sp,fp
   8d358:	df000017 	ldw	fp,0(sp)
   8d35c:	dec00104 	addi	sp,sp,4
   8d360:	f800283a 	ret

0008d364 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   8d364:	defff504 	addi	sp,sp,-44
   8d368:	dfc00a15 	stw	ra,40(sp)
   8d36c:	df000915 	stw	fp,36(sp)
   8d370:	df000904 	addi	fp,sp,36
   8d374:	e13ffc15 	stw	r4,-16(fp)
   8d378:	e17ffd15 	stw	r5,-12(fp)
   8d37c:	e1bffe15 	stw	r6,-8(fp)
   8d380:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   8d384:	00bffa84 	movi	r2,-22
   8d388:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   8d38c:	e0bffd17 	ldw	r2,-12(fp)
   8d390:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   8d394:	e0bff817 	ldw	r2,-32(fp)
   8d398:	10800808 	cmpgei	r2,r2,32
   8d39c:	1000271e 	bne	r2,zero,8d43c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8d3a0:	0005303a 	rdctl	r2,status
   8d3a4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8d3a8:	e0fffb17 	ldw	r3,-20(fp)
   8d3ac:	00bfff84 	movi	r2,-2
   8d3b0:	1884703a 	and	r2,r3,r2
   8d3b4:	1001703a 	wrctl	status,r2
  
  return context;
   8d3b8:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   8d3bc:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   8d3c0:	00800274 	movhi	r2,9
   8d3c4:	108c8f04 	addi	r2,r2,12860
   8d3c8:	e0fff817 	ldw	r3,-32(fp)
   8d3cc:	180690fa 	slli	r3,r3,3
   8d3d0:	10c5883a 	add	r2,r2,r3
   8d3d4:	e0fffe17 	ldw	r3,-8(fp)
   8d3d8:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   8d3dc:	00800274 	movhi	r2,9
   8d3e0:	108c8f04 	addi	r2,r2,12860
   8d3e4:	e0fff817 	ldw	r3,-32(fp)
   8d3e8:	180690fa 	slli	r3,r3,3
   8d3ec:	10c5883a 	add	r2,r2,r3
   8d3f0:	10800104 	addi	r2,r2,4
   8d3f4:	e0ffff17 	ldw	r3,-4(fp)
   8d3f8:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   8d3fc:	e0bffe17 	ldw	r2,-8(fp)
   8d400:	10000526 	beq	r2,zero,8d418 <alt_iic_isr_register+0xb4>
   8d404:	e0bff817 	ldw	r2,-32(fp)
   8d408:	100b883a 	mov	r5,r2
   8d40c:	e13ffc17 	ldw	r4,-16(fp)
   8d410:	008d2040 	call	8d204 <alt_ic_irq_enable>
   8d414:	00000406 	br	8d428 <alt_iic_isr_register+0xc4>
   8d418:	e0bff817 	ldw	r2,-32(fp)
   8d41c:	100b883a 	mov	r5,r2
   8d420:	e13ffc17 	ldw	r4,-16(fp)
   8d424:	008d28c0 	call	8d28c <alt_ic_irq_disable>
   8d428:	e0bff715 	stw	r2,-36(fp)
   8d42c:	e0bffa17 	ldw	r2,-24(fp)
   8d430:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8d434:	e0bff917 	ldw	r2,-28(fp)
   8d438:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   8d43c:	e0bff717 	ldw	r2,-36(fp)
}
   8d440:	e037883a 	mov	sp,fp
   8d444:	dfc00117 	ldw	ra,4(sp)
   8d448:	df000017 	ldw	fp,0(sp)
   8d44c:	dec00204 	addi	sp,sp,8
   8d450:	f800283a 	ret

0008d454 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
   8d454:	defff004 	addi	sp,sp,-64
   8d458:	df000f15 	stw	fp,60(sp)
   8d45c:	df000f04 	addi	fp,sp,60
   8d460:	e13ffd15 	stw	r4,-12(fp)
   8d464:	e17ffe15 	stw	r5,-8(fp)
   8d468:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
   8d46c:	00bffa84 	movi	r2,-22
   8d470:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   8d474:	e0bffd17 	ldw	r2,-12(fp)
   8d478:	10800828 	cmpgeui	r2,r2,32
   8d47c:	1000501e 	bne	r2,zero,8d5c0 <alt_irq_register+0x16c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8d480:	0005303a 	rdctl	r2,status
   8d484:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8d488:	e0fff617 	ldw	r3,-40(fp)
   8d48c:	00bfff84 	movi	r2,-2
   8d490:	1884703a 	and	r2,r3,r2
   8d494:	1001703a 	wrctl	status,r2
  
  return context;
   8d498:	e0bff617 	ldw	r2,-40(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
   8d49c:	e0bff315 	stw	r2,-52(fp)

    alt_irq[id].handler = handler;
   8d4a0:	00800274 	movhi	r2,9
   8d4a4:	108c8f04 	addi	r2,r2,12860
   8d4a8:	e0fffd17 	ldw	r3,-12(fp)
   8d4ac:	180690fa 	slli	r3,r3,3
   8d4b0:	10c5883a 	add	r2,r2,r3
   8d4b4:	e0ffff17 	ldw	r3,-4(fp)
   8d4b8:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
   8d4bc:	00800274 	movhi	r2,9
   8d4c0:	108c8f04 	addi	r2,r2,12860
   8d4c4:	e0fffd17 	ldw	r3,-12(fp)
   8d4c8:	180690fa 	slli	r3,r3,3
   8d4cc:	10c5883a 	add	r2,r2,r3
   8d4d0:	10800104 	addi	r2,r2,4
   8d4d4:	e0fffe17 	ldw	r3,-8(fp)
   8d4d8:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   8d4dc:	e0bfff17 	ldw	r2,-4(fp)
   8d4e0:	10001926 	beq	r2,zero,8d548 <alt_irq_register+0xf4>
   8d4e4:	e0bffd17 	ldw	r2,-12(fp)
   8d4e8:	e0bff215 	stw	r2,-56(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8d4ec:	0005303a 	rdctl	r2,status
   8d4f0:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8d4f4:	e0fff717 	ldw	r3,-36(fp)
   8d4f8:	00bfff84 	movi	r2,-2
   8d4fc:	1884703a 	and	r2,r3,r2
   8d500:	1001703a 	wrctl	status,r2
  
  return context;
   8d504:	e0bff717 	ldw	r2,-36(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   8d508:	e0bff815 	stw	r2,-32(fp)

  alt_irq_active |= (1 << id);
   8d50c:	00c00044 	movi	r3,1
   8d510:	e0bff217 	ldw	r2,-56(fp)
   8d514:	1884983a 	sll	r2,r3,r2
   8d518:	1007883a 	mov	r3,r2
   8d51c:	d0a6d717 	ldw	r2,-25764(gp)
   8d520:	1884b03a 	or	r2,r3,r2
   8d524:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   8d528:	d0a6d717 	ldw	r2,-25764(gp)
   8d52c:	100170fa 	wrctl	ienable,r2
   8d530:	e0bff817 	ldw	r2,-32(fp)
   8d534:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8d538:	e0bff917 	ldw	r2,-28(fp)
   8d53c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   8d540:	0005883a 	mov	r2,zero
   8d544:	00001906 	br	8d5ac <alt_irq_register+0x158>
   8d548:	e0bffd17 	ldw	r2,-12(fp)
   8d54c:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8d550:	0005303a 	rdctl	r2,status
   8d554:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8d558:	e0fffa17 	ldw	r3,-24(fp)
   8d55c:	00bfff84 	movi	r2,-2
   8d560:	1884703a 	and	r2,r3,r2
   8d564:	1001703a 	wrctl	status,r2
  
  return context;
   8d568:	e0bffa17 	ldw	r2,-24(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   8d56c:	e0bffb15 	stw	r2,-20(fp)

  alt_irq_active &= ~(1 << id);
   8d570:	00c00044 	movi	r3,1
   8d574:	e0bff417 	ldw	r2,-48(fp)
   8d578:	1884983a 	sll	r2,r3,r2
   8d57c:	0084303a 	nor	r2,zero,r2
   8d580:	1007883a 	mov	r3,r2
   8d584:	d0a6d717 	ldw	r2,-25764(gp)
   8d588:	1884703a 	and	r2,r3,r2
   8d58c:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   8d590:	d0a6d717 	ldw	r2,-25764(gp)
   8d594:	100170fa 	wrctl	ienable,r2
   8d598:	e0bffb17 	ldw	r2,-20(fp)
   8d59c:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8d5a0:	e0bffc17 	ldw	r2,-16(fp)
   8d5a4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   8d5a8:	0005883a 	mov	r2,zero
   8d5ac:	e0bff115 	stw	r2,-60(fp)
   8d5b0:	e0bff317 	ldw	r2,-52(fp)
   8d5b4:	e0bff515 	stw	r2,-44(fp)
   8d5b8:	e0bff517 	ldw	r2,-44(fp)
   8d5bc:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
   8d5c0:	e0bff117 	ldw	r2,-60(fp)
}
   8d5c4:	e037883a 	mov	sp,fp
   8d5c8:	df000017 	ldw	fp,0(sp)
   8d5cc:	dec00104 	addi	sp,sp,4
   8d5d0:	f800283a 	ret

0008d5d4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d5d4:	defffe04 	addi	sp,sp,-8
   8d5d8:	dfc00115 	stw	ra,4(sp)
   8d5dc:	df000015 	stw	fp,0(sp)
   8d5e0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d5e4:	d0a00c17 	ldw	r2,-32720(gp)
   8d5e8:	10000326 	beq	r2,zero,8d5f8 <alt_get_errno+0x24>
   8d5ec:	d0a00c17 	ldw	r2,-32720(gp)
   8d5f0:	103ee83a 	callr	r2
   8d5f4:	00000106 	br	8d5fc <alt_get_errno+0x28>
   8d5f8:	d0a6d604 	addi	r2,gp,-25768
}
   8d5fc:	e037883a 	mov	sp,fp
   8d600:	dfc00117 	ldw	ra,4(sp)
   8d604:	df000017 	ldw	fp,0(sp)
   8d608:	dec00204 	addi	sp,sp,8
   8d60c:	f800283a 	ret

0008d610 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   8d610:	deffed04 	addi	sp,sp,-76
   8d614:	dfc01215 	stw	ra,72(sp)
   8d618:	df001115 	stw	fp,68(sp)
   8d61c:	df001104 	addi	fp,sp,68
   8d620:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d624:	e0bfff17 	ldw	r2,-4(fp)
   8d628:	10000616 	blt	r2,zero,8d644 <isatty+0x34>
   8d62c:	e0bfff17 	ldw	r2,-4(fp)
   8d630:	10c00324 	muli	r3,r2,12
   8d634:	00800274 	movhi	r2,9
   8d638:	10812f04 	addi	r2,r2,1212
   8d63c:	1885883a 	add	r2,r3,r2
   8d640:	00000106 	br	8d648 <isatty+0x38>
   8d644:	0005883a 	mov	r2,zero
   8d648:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   8d64c:	e0bfef17 	ldw	r2,-68(fp)
   8d650:	10000e26 	beq	r2,zero,8d68c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   8d654:	e0bfef17 	ldw	r2,-68(fp)
   8d658:	10800017 	ldw	r2,0(r2)
   8d65c:	10800817 	ldw	r2,32(r2)
   8d660:	1000021e 	bne	r2,zero,8d66c <isatty+0x5c>
    {
      return 1;
   8d664:	00800044 	movi	r2,1
   8d668:	00000d06 	br	8d6a0 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   8d66c:	e0bff004 	addi	r2,fp,-64
   8d670:	100b883a 	mov	r5,r2
   8d674:	e13fff17 	ldw	r4,-4(fp)
   8d678:	008d1040 	call	8d104 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   8d67c:	e0bff117 	ldw	r2,-60(fp)
   8d680:	10880020 	cmpeqi	r2,r2,8192
   8d684:	10803fcc 	andi	r2,r2,255
   8d688:	00000506 	br	8d6a0 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8d68c:	008d5d40 	call	8d5d4 <alt_get_errno>
   8d690:	1007883a 	mov	r3,r2
   8d694:	00801444 	movi	r2,81
   8d698:	18800015 	stw	r2,0(r3)
    return 0;
   8d69c:	0005883a 	mov	r2,zero
  }
}
   8d6a0:	e037883a 	mov	sp,fp
   8d6a4:	dfc00117 	ldw	ra,4(sp)
   8d6a8:	df000017 	ldw	fp,0(sp)
   8d6ac:	dec00204 	addi	sp,sp,8
   8d6b0:	f800283a 	ret

0008d6b4 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   8d6b4:	defffc04 	addi	sp,sp,-16
   8d6b8:	df000315 	stw	fp,12(sp)
   8d6bc:	df000304 	addi	fp,sp,12
   8d6c0:	e13ffd15 	stw	r4,-12(fp)
   8d6c4:	e17ffe15 	stw	r5,-8(fp)
   8d6c8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   8d6cc:	e0fffe17 	ldw	r3,-8(fp)
   8d6d0:	e0bffd17 	ldw	r2,-12(fp)
   8d6d4:	18800c26 	beq	r3,r2,8d708 <alt_load_section+0x54>
  {
    while( to != end )
   8d6d8:	00000806 	br	8d6fc <alt_load_section+0x48>
    {
      *to++ = *from++;
   8d6dc:	e0bffe17 	ldw	r2,-8(fp)
   8d6e0:	10c00104 	addi	r3,r2,4
   8d6e4:	e0fffe15 	stw	r3,-8(fp)
   8d6e8:	e0fffd17 	ldw	r3,-12(fp)
   8d6ec:	19000104 	addi	r4,r3,4
   8d6f0:	e13ffd15 	stw	r4,-12(fp)
   8d6f4:	18c00017 	ldw	r3,0(r3)
   8d6f8:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   8d6fc:	e0fffe17 	ldw	r3,-8(fp)
   8d700:	e0bfff17 	ldw	r2,-4(fp)
   8d704:	18bff51e 	bne	r3,r2,8d6dc <__alt_data_end+0xfffc1bec>
    {
      *to++ = *from++;
    }
  }
}
   8d708:	0001883a 	nop
   8d70c:	e037883a 	mov	sp,fp
   8d710:	df000017 	ldw	fp,0(sp)
   8d714:	dec00104 	addi	sp,sp,4
   8d718:	f800283a 	ret

0008d71c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   8d71c:	defffe04 	addi	sp,sp,-8
   8d720:	dfc00115 	stw	ra,4(sp)
   8d724:	df000015 	stw	fp,0(sp)
   8d728:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   8d72c:	01800274 	movhi	r6,9
   8d730:	3185b804 	addi	r6,r6,5856
   8d734:	01400274 	movhi	r5,9
   8d738:	297efc04 	addi	r5,r5,-1040
   8d73c:	01000274 	movhi	r4,9
   8d740:	2105b804 	addi	r4,r4,5856
   8d744:	008d6b40 	call	8d6b4 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   8d748:	01800234 	movhi	r6,8
   8d74c:	31809104 	addi	r6,r6,580
   8d750:	01400234 	movhi	r5,8
   8d754:	29400804 	addi	r5,r5,32
   8d758:	01000234 	movhi	r4,8
   8d75c:	21000804 	addi	r4,r4,32
   8d760:	008d6b40 	call	8d6b4 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   8d764:	01800274 	movhi	r6,9
   8d768:	31befc04 	addi	r6,r6,-1040
   8d76c:	01400274 	movhi	r5,9
   8d770:	297e3004 	addi	r5,r5,-1856
   8d774:	01000274 	movhi	r4,9
   8d778:	213e3004 	addi	r4,r4,-1856
   8d77c:	008d6b40 	call	8d6b4 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   8d780:	008ea4c0 	call	8ea4c <alt_dcache_flush_all>
  alt_icache_flush_all();
   8d784:	008ec340 	call	8ec34 <alt_icache_flush_all>
}
   8d788:	0001883a 	nop
   8d78c:	e037883a 	mov	sp,fp
   8d790:	dfc00117 	ldw	ra,4(sp)
   8d794:	df000017 	ldw	fp,0(sp)
   8d798:	dec00204 	addi	sp,sp,8
   8d79c:	f800283a 	ret

0008d7a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d7a0:	defffe04 	addi	sp,sp,-8
   8d7a4:	dfc00115 	stw	ra,4(sp)
   8d7a8:	df000015 	stw	fp,0(sp)
   8d7ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d7b0:	d0a00c17 	ldw	r2,-32720(gp)
   8d7b4:	10000326 	beq	r2,zero,8d7c4 <alt_get_errno+0x24>
   8d7b8:	d0a00c17 	ldw	r2,-32720(gp)
   8d7bc:	103ee83a 	callr	r2
   8d7c0:	00000106 	br	8d7c8 <alt_get_errno+0x28>
   8d7c4:	d0a6d604 	addi	r2,gp,-25768
}
   8d7c8:	e037883a 	mov	sp,fp
   8d7cc:	dfc00117 	ldw	ra,4(sp)
   8d7d0:	df000017 	ldw	fp,0(sp)
   8d7d4:	dec00204 	addi	sp,sp,8
   8d7d8:	f800283a 	ret

0008d7dc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   8d7dc:	defff904 	addi	sp,sp,-28
   8d7e0:	dfc00615 	stw	ra,24(sp)
   8d7e4:	df000515 	stw	fp,20(sp)
   8d7e8:	df000504 	addi	fp,sp,20
   8d7ec:	e13ffd15 	stw	r4,-12(fp)
   8d7f0:	e17ffe15 	stw	r5,-8(fp)
   8d7f4:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   8d7f8:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d7fc:	e0bffd17 	ldw	r2,-12(fp)
   8d800:	10000616 	blt	r2,zero,8d81c <lseek+0x40>
   8d804:	e0bffd17 	ldw	r2,-12(fp)
   8d808:	10c00324 	muli	r3,r2,12
   8d80c:	00800274 	movhi	r2,9
   8d810:	10812f04 	addi	r2,r2,1212
   8d814:	1885883a 	add	r2,r3,r2
   8d818:	00000106 	br	8d820 <lseek+0x44>
   8d81c:	0005883a 	mov	r2,zero
   8d820:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   8d824:	e0bffc17 	ldw	r2,-16(fp)
   8d828:	10001026 	beq	r2,zero,8d86c <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   8d82c:	e0bffc17 	ldw	r2,-16(fp)
   8d830:	10800017 	ldw	r2,0(r2)
   8d834:	10800717 	ldw	r2,28(r2)
   8d838:	10000926 	beq	r2,zero,8d860 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   8d83c:	e0bffc17 	ldw	r2,-16(fp)
   8d840:	10800017 	ldw	r2,0(r2)
   8d844:	10800717 	ldw	r2,28(r2)
   8d848:	e1bfff17 	ldw	r6,-4(fp)
   8d84c:	e17ffe17 	ldw	r5,-8(fp)
   8d850:	e13ffc17 	ldw	r4,-16(fp)
   8d854:	103ee83a 	callr	r2
   8d858:	e0bffb15 	stw	r2,-20(fp)
   8d85c:	00000506 	br	8d874 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   8d860:	00bfde84 	movi	r2,-134
   8d864:	e0bffb15 	stw	r2,-20(fp)
   8d868:	00000206 	br	8d874 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   8d86c:	00bfebc4 	movi	r2,-81
   8d870:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   8d874:	e0bffb17 	ldw	r2,-20(fp)
   8d878:	1000070e 	bge	r2,zero,8d898 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   8d87c:	008d7a00 	call	8d7a0 <alt_get_errno>
   8d880:	1007883a 	mov	r3,r2
   8d884:	e0bffb17 	ldw	r2,-20(fp)
   8d888:	0085c83a 	sub	r2,zero,r2
   8d88c:	18800015 	stw	r2,0(r3)
    rc = -1;
   8d890:	00bfffc4 	movi	r2,-1
   8d894:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   8d898:	e0bffb17 	ldw	r2,-20(fp)
}
   8d89c:	e037883a 	mov	sp,fp
   8d8a0:	dfc00117 	ldw	ra,4(sp)
   8d8a4:	df000017 	ldw	fp,0(sp)
   8d8a8:	dec00204 	addi	sp,sp,8
   8d8ac:	f800283a 	ret

0008d8b0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   8d8b0:	defffd04 	addi	sp,sp,-12
   8d8b4:	dfc00215 	stw	ra,8(sp)
   8d8b8:	df000115 	stw	fp,4(sp)
   8d8bc:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   8d8c0:	0009883a 	mov	r4,zero
   8d8c4:	008dd280 	call	8dd28 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   8d8c8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   8d8cc:	008dd600 	call	8dd60 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   8d8d0:	01800274 	movhi	r6,9
   8d8d4:	31bef404 	addi	r6,r6,-1072
   8d8d8:	01400274 	movhi	r5,9
   8d8dc:	297ef404 	addi	r5,r5,-1072
   8d8e0:	01000274 	movhi	r4,9
   8d8e4:	213ef404 	addi	r4,r4,-1072
   8d8e8:	008edc80 	call	8edc8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   8d8ec:	008eb740 	call	8eb74 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   8d8f0:	01000274 	movhi	r4,9
   8d8f4:	213af504 	addi	r4,r4,-5164
   8d8f8:	008f52c0 	call	8f52c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   8d8fc:	d0a6d817 	ldw	r2,-25760(gp)
   8d900:	d0e6d917 	ldw	r3,-25756(gp)
   8d904:	d126da17 	ldw	r4,-25752(gp)
   8d908:	200d883a 	mov	r6,r4
   8d90c:	180b883a 	mov	r5,r3
   8d910:	1009883a 	mov	r4,r2
   8d914:	00805cc0 	call	805cc <main>
   8d918:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   8d91c:	01000044 	movi	r4,1
   8d920:	008cfcc0 	call	8cfcc <close>
  exit (result);
   8d924:	e13fff17 	ldw	r4,-4(fp)
   8d928:	008f5400 	call	8f540 <exit>

0008d92c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   8d92c:	defffe04 	addi	sp,sp,-8
   8d930:	df000115 	stw	fp,4(sp)
   8d934:	df000104 	addi	fp,sp,4
   8d938:	e13fff15 	stw	r4,-4(fp)
}
   8d93c:	0001883a 	nop
   8d940:	e037883a 	mov	sp,fp
   8d944:	df000017 	ldw	fp,0(sp)
   8d948:	dec00104 	addi	sp,sp,4
   8d94c:	f800283a 	ret

0008d950 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   8d950:	defffe04 	addi	sp,sp,-8
   8d954:	df000115 	stw	fp,4(sp)
   8d958:	df000104 	addi	fp,sp,4
   8d95c:	e13fff15 	stw	r4,-4(fp)
}
   8d960:	0001883a 	nop
   8d964:	e037883a 	mov	sp,fp
   8d968:	df000017 	ldw	fp,0(sp)
   8d96c:	dec00104 	addi	sp,sp,4
   8d970:	f800283a 	ret

0008d974 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d974:	defffe04 	addi	sp,sp,-8
   8d978:	dfc00115 	stw	ra,4(sp)
   8d97c:	df000015 	stw	fp,0(sp)
   8d980:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d984:	d0a00c17 	ldw	r2,-32720(gp)
   8d988:	10000326 	beq	r2,zero,8d998 <alt_get_errno+0x24>
   8d98c:	d0a00c17 	ldw	r2,-32720(gp)
   8d990:	103ee83a 	callr	r2
   8d994:	00000106 	br	8d99c <alt_get_errno+0x28>
   8d998:	d0a6d604 	addi	r2,gp,-25768
}
   8d99c:	e037883a 	mov	sp,fp
   8d9a0:	dfc00117 	ldw	ra,4(sp)
   8d9a4:	df000017 	ldw	fp,0(sp)
   8d9a8:	dec00204 	addi	sp,sp,8
   8d9ac:	f800283a 	ret

0008d9b0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   8d9b0:	defff904 	addi	sp,sp,-28
   8d9b4:	dfc00615 	stw	ra,24(sp)
   8d9b8:	df000515 	stw	fp,20(sp)
   8d9bc:	df000504 	addi	fp,sp,20
   8d9c0:	e13ffd15 	stw	r4,-12(fp)
   8d9c4:	e17ffe15 	stw	r5,-8(fp)
   8d9c8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d9cc:	e0bffd17 	ldw	r2,-12(fp)
   8d9d0:	10000616 	blt	r2,zero,8d9ec <read+0x3c>
   8d9d4:	e0bffd17 	ldw	r2,-12(fp)
   8d9d8:	10c00324 	muli	r3,r2,12
   8d9dc:	00800274 	movhi	r2,9
   8d9e0:	10812f04 	addi	r2,r2,1212
   8d9e4:	1885883a 	add	r2,r3,r2
   8d9e8:	00000106 	br	8d9f0 <read+0x40>
   8d9ec:	0005883a 	mov	r2,zero
   8d9f0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   8d9f4:	e0bffb17 	ldw	r2,-20(fp)
   8d9f8:	10002226 	beq	r2,zero,8da84 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   8d9fc:	e0bffb17 	ldw	r2,-20(fp)
   8da00:	10800217 	ldw	r2,8(r2)
   8da04:	108000cc 	andi	r2,r2,3
   8da08:	10800060 	cmpeqi	r2,r2,1
   8da0c:	1000181e 	bne	r2,zero,8da70 <read+0xc0>
        (fd->dev->read))
   8da10:	e0bffb17 	ldw	r2,-20(fp)
   8da14:	10800017 	ldw	r2,0(r2)
   8da18:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   8da1c:	10001426 	beq	r2,zero,8da70 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   8da20:	e0bffb17 	ldw	r2,-20(fp)
   8da24:	10800017 	ldw	r2,0(r2)
   8da28:	10800517 	ldw	r2,20(r2)
   8da2c:	e0ffff17 	ldw	r3,-4(fp)
   8da30:	180d883a 	mov	r6,r3
   8da34:	e17ffe17 	ldw	r5,-8(fp)
   8da38:	e13ffb17 	ldw	r4,-20(fp)
   8da3c:	103ee83a 	callr	r2
   8da40:	e0bffc15 	stw	r2,-16(fp)
   8da44:	e0bffc17 	ldw	r2,-16(fp)
   8da48:	1000070e 	bge	r2,zero,8da68 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   8da4c:	008d9740 	call	8d974 <alt_get_errno>
   8da50:	1007883a 	mov	r3,r2
   8da54:	e0bffc17 	ldw	r2,-16(fp)
   8da58:	0085c83a 	sub	r2,zero,r2
   8da5c:	18800015 	stw	r2,0(r3)
          return -1;
   8da60:	00bfffc4 	movi	r2,-1
   8da64:	00000c06 	br	8da98 <read+0xe8>
        }
        return rval;
   8da68:	e0bffc17 	ldw	r2,-16(fp)
   8da6c:	00000a06 	br	8da98 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   8da70:	008d9740 	call	8d974 <alt_get_errno>
   8da74:	1007883a 	mov	r3,r2
   8da78:	00800344 	movi	r2,13
   8da7c:	18800015 	stw	r2,0(r3)
   8da80:	00000406 	br	8da94 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   8da84:	008d9740 	call	8d974 <alt_get_errno>
   8da88:	1007883a 	mov	r3,r2
   8da8c:	00801444 	movi	r2,81
   8da90:	18800015 	stw	r2,0(r3)
  }
  return -1;
   8da94:	00bfffc4 	movi	r2,-1
}
   8da98:	e037883a 	mov	sp,fp
   8da9c:	dfc00117 	ldw	ra,4(sp)
   8daa0:	df000017 	ldw	fp,0(sp)
   8daa4:	dec00204 	addi	sp,sp,8
   8daa8:	f800283a 	ret

0008daac <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   8daac:	defffe04 	addi	sp,sp,-8
   8dab0:	df000115 	stw	fp,4(sp)
   8dab4:	df000104 	addi	fp,sp,4
   8dab8:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   8dabc:	e0bfff17 	ldw	r2,-4(fp)
   8dac0:	108000d0 	cmplti	r2,r2,3
   8dac4:	10000d1e 	bne	r2,zero,8dafc <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   8dac8:	00800274 	movhi	r2,9
   8dacc:	10812f04 	addi	r2,r2,1212
   8dad0:	e0ffff17 	ldw	r3,-4(fp)
   8dad4:	18c00324 	muli	r3,r3,12
   8dad8:	10c5883a 	add	r2,r2,r3
   8dadc:	10800204 	addi	r2,r2,8
   8dae0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   8dae4:	00800274 	movhi	r2,9
   8dae8:	10812f04 	addi	r2,r2,1212
   8daec:	e0ffff17 	ldw	r3,-4(fp)
   8daf0:	18c00324 	muli	r3,r3,12
   8daf4:	10c5883a 	add	r2,r2,r3
   8daf8:	10000015 	stw	zero,0(r2)
  }
}
   8dafc:	0001883a 	nop
   8db00:	e037883a 	mov	sp,fp
   8db04:	df000017 	ldw	fp,0(sp)
   8db08:	dec00104 	addi	sp,sp,4
   8db0c:	f800283a 	ret

0008db10 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   8db10:	defff904 	addi	sp,sp,-28
   8db14:	df000615 	stw	fp,24(sp)
   8db18:	df000604 	addi	fp,sp,24
   8db1c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8db20:	0005303a 	rdctl	r2,status
   8db24:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8db28:	e0fffe17 	ldw	r3,-8(fp)
   8db2c:	00bfff84 	movi	r2,-2
   8db30:	1884703a 	and	r2,r3,r2
   8db34:	1001703a 	wrctl	status,r2
  
  return context;
   8db38:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   8db3c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   8db40:	d0a00e17 	ldw	r2,-32712(gp)
   8db44:	10c000c4 	addi	r3,r2,3
   8db48:	00bfff04 	movi	r2,-4
   8db4c:	1884703a 	and	r2,r3,r2
   8db50:	d0a00e15 	stw	r2,-32712(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   8db54:	d0e00e17 	ldw	r3,-32712(gp)
   8db58:	e0bfff17 	ldw	r2,-4(fp)
   8db5c:	1887883a 	add	r3,r3,r2
   8db60:	00800374 	movhi	r2,13
   8db64:	10aebc04 	addi	r2,r2,-17680
   8db68:	10c0062e 	bgeu	r2,r3,8db84 <sbrk+0x74>
   8db6c:	e0bffb17 	ldw	r2,-20(fp)
   8db70:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8db74:	e0bffa17 	ldw	r2,-24(fp)
   8db78:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   8db7c:	00bfffc4 	movi	r2,-1
   8db80:	00000b06 	br	8dbb0 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   8db84:	d0a00e17 	ldw	r2,-32712(gp)
   8db88:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   8db8c:	d0e00e17 	ldw	r3,-32712(gp)
   8db90:	e0bfff17 	ldw	r2,-4(fp)
   8db94:	1885883a 	add	r2,r3,r2
   8db98:	d0a00e15 	stw	r2,-32712(gp)
   8db9c:	e0bffb17 	ldw	r2,-20(fp)
   8dba0:	e0bffc15 	stw	r2,-16(fp)
   8dba4:	e0bffc17 	ldw	r2,-16(fp)
   8dba8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   8dbac:	e0bffd17 	ldw	r2,-12(fp)
} 
   8dbb0:	e037883a 	mov	sp,fp
   8dbb4:	df000017 	ldw	fp,0(sp)
   8dbb8:	dec00104 	addi	sp,sp,4
   8dbbc:	f800283a 	ret

0008dbc0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8dbc0:	defffe04 	addi	sp,sp,-8
   8dbc4:	dfc00115 	stw	ra,4(sp)
   8dbc8:	df000015 	stw	fp,0(sp)
   8dbcc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8dbd0:	d0a00c17 	ldw	r2,-32720(gp)
   8dbd4:	10000326 	beq	r2,zero,8dbe4 <alt_get_errno+0x24>
   8dbd8:	d0a00c17 	ldw	r2,-32720(gp)
   8dbdc:	103ee83a 	callr	r2
   8dbe0:	00000106 	br	8dbe8 <alt_get_errno+0x28>
   8dbe4:	d0a6d604 	addi	r2,gp,-25768
}
   8dbe8:	e037883a 	mov	sp,fp
   8dbec:	dfc00117 	ldw	ra,4(sp)
   8dbf0:	df000017 	ldw	fp,0(sp)
   8dbf4:	dec00204 	addi	sp,sp,8
   8dbf8:	f800283a 	ret

0008dbfc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   8dbfc:	defff904 	addi	sp,sp,-28
   8dc00:	dfc00615 	stw	ra,24(sp)
   8dc04:	df000515 	stw	fp,20(sp)
   8dc08:	df000504 	addi	fp,sp,20
   8dc0c:	e13ffd15 	stw	r4,-12(fp)
   8dc10:	e17ffe15 	stw	r5,-8(fp)
   8dc14:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8dc18:	e0bffd17 	ldw	r2,-12(fp)
   8dc1c:	10000616 	blt	r2,zero,8dc38 <write+0x3c>
   8dc20:	e0bffd17 	ldw	r2,-12(fp)
   8dc24:	10c00324 	muli	r3,r2,12
   8dc28:	00800274 	movhi	r2,9
   8dc2c:	10812f04 	addi	r2,r2,1212
   8dc30:	1885883a 	add	r2,r3,r2
   8dc34:	00000106 	br	8dc3c <write+0x40>
   8dc38:	0005883a 	mov	r2,zero
   8dc3c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   8dc40:	e0bffb17 	ldw	r2,-20(fp)
   8dc44:	10002126 	beq	r2,zero,8dccc <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   8dc48:	e0bffb17 	ldw	r2,-20(fp)
   8dc4c:	10800217 	ldw	r2,8(r2)
   8dc50:	108000cc 	andi	r2,r2,3
   8dc54:	10001826 	beq	r2,zero,8dcb8 <write+0xbc>
   8dc58:	e0bffb17 	ldw	r2,-20(fp)
   8dc5c:	10800017 	ldw	r2,0(r2)
   8dc60:	10800617 	ldw	r2,24(r2)
   8dc64:	10001426 	beq	r2,zero,8dcb8 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   8dc68:	e0bffb17 	ldw	r2,-20(fp)
   8dc6c:	10800017 	ldw	r2,0(r2)
   8dc70:	10800617 	ldw	r2,24(r2)
   8dc74:	e0ffff17 	ldw	r3,-4(fp)
   8dc78:	180d883a 	mov	r6,r3
   8dc7c:	e17ffe17 	ldw	r5,-8(fp)
   8dc80:	e13ffb17 	ldw	r4,-20(fp)
   8dc84:	103ee83a 	callr	r2
   8dc88:	e0bffc15 	stw	r2,-16(fp)
   8dc8c:	e0bffc17 	ldw	r2,-16(fp)
   8dc90:	1000070e 	bge	r2,zero,8dcb0 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   8dc94:	008dbc00 	call	8dbc0 <alt_get_errno>
   8dc98:	1007883a 	mov	r3,r2
   8dc9c:	e0bffc17 	ldw	r2,-16(fp)
   8dca0:	0085c83a 	sub	r2,zero,r2
   8dca4:	18800015 	stw	r2,0(r3)
        return -1;
   8dca8:	00bfffc4 	movi	r2,-1
   8dcac:	00000c06 	br	8dce0 <write+0xe4>
      }
      return rval;
   8dcb0:	e0bffc17 	ldw	r2,-16(fp)
   8dcb4:	00000a06 	br	8dce0 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   8dcb8:	008dbc00 	call	8dbc0 <alt_get_errno>
   8dcbc:	1007883a 	mov	r3,r2
   8dcc0:	00800344 	movi	r2,13
   8dcc4:	18800015 	stw	r2,0(r3)
   8dcc8:	00000406 	br	8dcdc <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   8dccc:	008dbc00 	call	8dbc0 <alt_get_errno>
   8dcd0:	1007883a 	mov	r3,r2
   8dcd4:	00801444 	movi	r2,81
   8dcd8:	18800015 	stw	r2,0(r3)
  }
  return -1;
   8dcdc:	00bfffc4 	movi	r2,-1
}
   8dce0:	e037883a 	mov	sp,fp
   8dce4:	dfc00117 	ldw	ra,4(sp)
   8dce8:	df000017 	ldw	fp,0(sp)
   8dcec:	dec00204 	addi	sp,sp,8
   8dcf0:	f800283a 	ret

0008dcf4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   8dcf4:	defffd04 	addi	sp,sp,-12
   8dcf8:	dfc00215 	stw	ra,8(sp)
   8dcfc:	df000115 	stw	fp,4(sp)
   8dd00:	df000104 	addi	fp,sp,4
   8dd04:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   8dd08:	d1600904 	addi	r5,gp,-32732
   8dd0c:	e13fff17 	ldw	r4,-4(fp)
   8dd10:	008ead00 	call	8ead0 <alt_dev_llist_insert>
}
   8dd14:	e037883a 	mov	sp,fp
   8dd18:	dfc00117 	ldw	ra,4(sp)
   8dd1c:	df000017 	ldw	fp,0(sp)
   8dd20:	dec00204 	addi	sp,sp,8
   8dd24:	f800283a 	ret

0008dd28 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   8dd28:	defffd04 	addi	sp,sp,-12
   8dd2c:	dfc00215 	stw	ra,8(sp)
   8dd30:	df000115 	stw	fp,4(sp)
   8dd34:	df000104 	addi	fp,sp,4
   8dd38:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_QSYS, nios2_qsys);
   8dd3c:	008f23c0 	call	8f23c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   8dd40:	00800044 	movi	r2,1
   8dd44:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   8dd48:	0001883a 	nop
   8dd4c:	e037883a 	mov	sp,fp
   8dd50:	dfc00117 	ldw	ra,4(sp)
   8dd54:	df000017 	ldw	fp,0(sp)
   8dd58:	dec00204 	addi	sp,sp,8
   8dd5c:	f800283a 	ret

0008dd60 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   8dd60:	defffe04 	addi	sp,sp,-8
   8dd64:	dfc00115 	stw	ra,4(sp)
   8dd68:	df000015 	stw	fp,0(sp)
   8dd6c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   8dd70:	01c0fa04 	movi	r7,1000
   8dd74:	000d883a 	mov	r6,zero
   8dd78:	000b883a 	mov	r5,zero
   8dd7c:	01000434 	movhi	r4,16
   8dd80:	21040004 	addi	r4,r4,4096
   8dd84:	008e8a40 	call	8e8a4 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   8dd88:	01800044 	movi	r6,1
   8dd8c:	000b883a 	mov	r5,zero
   8dd90:	01000274 	movhi	r4,9
   8dd94:	21019904 	addi	r4,r4,1636
   8dd98:	008df280 	call	8df28 <altera_avalon_jtag_uart_init>
   8dd9c:	01000274 	movhi	r4,9
   8dda0:	21018f04 	addi	r4,r4,1596
   8dda4:	008dcf40 	call	8dcf4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
   8dda8:	0001883a 	nop
}
   8ddac:	0001883a 	nop
   8ddb0:	e037883a 	mov	sp,fp
   8ddb4:	dfc00117 	ldw	ra,4(sp)
   8ddb8:	df000017 	ldw	fp,0(sp)
   8ddbc:	dec00204 	addi	sp,sp,8
   8ddc0:	f800283a 	ret

0008ddc4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   8ddc4:	defffa04 	addi	sp,sp,-24
   8ddc8:	dfc00515 	stw	ra,20(sp)
   8ddcc:	df000415 	stw	fp,16(sp)
   8ddd0:	df000404 	addi	fp,sp,16
   8ddd4:	e13ffd15 	stw	r4,-12(fp)
   8ddd8:	e17ffe15 	stw	r5,-8(fp)
   8dddc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8dde0:	e0bffd17 	ldw	r2,-12(fp)
   8dde4:	10800017 	ldw	r2,0(r2)
   8dde8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   8ddec:	e0bffc17 	ldw	r2,-16(fp)
   8ddf0:	10c00a04 	addi	r3,r2,40
   8ddf4:	e0bffd17 	ldw	r2,-12(fp)
   8ddf8:	10800217 	ldw	r2,8(r2)
   8ddfc:	100f883a 	mov	r7,r2
   8de00:	e1bfff17 	ldw	r6,-4(fp)
   8de04:	e17ffe17 	ldw	r5,-8(fp)
   8de08:	1809883a 	mov	r4,r3
   8de0c:	008e3ec0 	call	8e3ec <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   8de10:	e037883a 	mov	sp,fp
   8de14:	dfc00117 	ldw	ra,4(sp)
   8de18:	df000017 	ldw	fp,0(sp)
   8de1c:	dec00204 	addi	sp,sp,8
   8de20:	f800283a 	ret

0008de24 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   8de24:	defffa04 	addi	sp,sp,-24
   8de28:	dfc00515 	stw	ra,20(sp)
   8de2c:	df000415 	stw	fp,16(sp)
   8de30:	df000404 	addi	fp,sp,16
   8de34:	e13ffd15 	stw	r4,-12(fp)
   8de38:	e17ffe15 	stw	r5,-8(fp)
   8de3c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8de40:	e0bffd17 	ldw	r2,-12(fp)
   8de44:	10800017 	ldw	r2,0(r2)
   8de48:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   8de4c:	e0bffc17 	ldw	r2,-16(fp)
   8de50:	10c00a04 	addi	r3,r2,40
   8de54:	e0bffd17 	ldw	r2,-12(fp)
   8de58:	10800217 	ldw	r2,8(r2)
   8de5c:	100f883a 	mov	r7,r2
   8de60:	e1bfff17 	ldw	r6,-4(fp)
   8de64:	e17ffe17 	ldw	r5,-8(fp)
   8de68:	1809883a 	mov	r4,r3
   8de6c:	008e6080 	call	8e608 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   8de70:	e037883a 	mov	sp,fp
   8de74:	dfc00117 	ldw	ra,4(sp)
   8de78:	df000017 	ldw	fp,0(sp)
   8de7c:	dec00204 	addi	sp,sp,8
   8de80:	f800283a 	ret

0008de84 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   8de84:	defffc04 	addi	sp,sp,-16
   8de88:	dfc00315 	stw	ra,12(sp)
   8de8c:	df000215 	stw	fp,8(sp)
   8de90:	df000204 	addi	fp,sp,8
   8de94:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8de98:	e0bfff17 	ldw	r2,-4(fp)
   8de9c:	10800017 	ldw	r2,0(r2)
   8dea0:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   8dea4:	e0bffe17 	ldw	r2,-8(fp)
   8dea8:	10c00a04 	addi	r3,r2,40
   8deac:	e0bfff17 	ldw	r2,-4(fp)
   8deb0:	10800217 	ldw	r2,8(r2)
   8deb4:	100b883a 	mov	r5,r2
   8deb8:	1809883a 	mov	r4,r3
   8debc:	008e2940 	call	8e294 <altera_avalon_jtag_uart_close>
}
   8dec0:	e037883a 	mov	sp,fp
   8dec4:	dfc00117 	ldw	ra,4(sp)
   8dec8:	df000017 	ldw	fp,0(sp)
   8decc:	dec00204 	addi	sp,sp,8
   8ded0:	f800283a 	ret

0008ded4 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   8ded4:	defffa04 	addi	sp,sp,-24
   8ded8:	dfc00515 	stw	ra,20(sp)
   8dedc:	df000415 	stw	fp,16(sp)
   8dee0:	df000404 	addi	fp,sp,16
   8dee4:	e13ffd15 	stw	r4,-12(fp)
   8dee8:	e17ffe15 	stw	r5,-8(fp)
   8deec:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   8def0:	e0bffd17 	ldw	r2,-12(fp)
   8def4:	10800017 	ldw	r2,0(r2)
   8def8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   8defc:	e0bffc17 	ldw	r2,-16(fp)
   8df00:	10800a04 	addi	r2,r2,40
   8df04:	e1bfff17 	ldw	r6,-4(fp)
   8df08:	e17ffe17 	ldw	r5,-8(fp)
   8df0c:	1009883a 	mov	r4,r2
   8df10:	008e2fc0 	call	8e2fc <altera_avalon_jtag_uart_ioctl>
}
   8df14:	e037883a 	mov	sp,fp
   8df18:	dfc00117 	ldw	ra,4(sp)
   8df1c:	df000017 	ldw	fp,0(sp)
   8df20:	dec00204 	addi	sp,sp,8
   8df24:	f800283a 	ret

0008df28 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   8df28:	defffa04 	addi	sp,sp,-24
   8df2c:	dfc00515 	stw	ra,20(sp)
   8df30:	df000415 	stw	fp,16(sp)
   8df34:	df000404 	addi	fp,sp,16
   8df38:	e13ffd15 	stw	r4,-12(fp)
   8df3c:	e17ffe15 	stw	r5,-8(fp)
   8df40:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8df44:	e0bffd17 	ldw	r2,-12(fp)
   8df48:	00c00044 	movi	r3,1
   8df4c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   8df50:	e0bffd17 	ldw	r2,-12(fp)
   8df54:	10800017 	ldw	r2,0(r2)
   8df58:	10800104 	addi	r2,r2,4
   8df5c:	1007883a 	mov	r3,r2
   8df60:	e0bffd17 	ldw	r2,-12(fp)
   8df64:	10800817 	ldw	r2,32(r2)
   8df68:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   8df6c:	e0bffe17 	ldw	r2,-8(fp)
   8df70:	e0ffff17 	ldw	r3,-4(fp)
   8df74:	d8000015 	stw	zero,0(sp)
   8df78:	e1fffd17 	ldw	r7,-12(fp)
   8df7c:	01800274 	movhi	r6,9
   8df80:	31b7fa04 	addi	r6,r6,-8216
   8df84:	180b883a 	mov	r5,r3
   8df88:	1009883a 	mov	r4,r2
   8df8c:	008d1b40 	call	8d1b4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   8df90:	e0bffd17 	ldw	r2,-12(fp)
   8df94:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   8df98:	e0bffd17 	ldw	r2,-12(fp)
   8df9c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   8dfa0:	d0e6dc17 	ldw	r3,-25744(gp)
   8dfa4:	e1fffd17 	ldw	r7,-12(fp)
   8dfa8:	01800274 	movhi	r6,9
   8dfac:	31b87d04 	addi	r6,r6,-7692
   8dfb0:	180b883a 	mov	r5,r3
   8dfb4:	1009883a 	mov	r4,r2
   8dfb8:	008e9200 	call	8e920 <alt_alarm_start>
   8dfbc:	1000040e 	bge	r2,zero,8dfd0 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   8dfc0:	e0fffd17 	ldw	r3,-12(fp)
   8dfc4:	00a00034 	movhi	r2,32768
   8dfc8:	10bfffc4 	addi	r2,r2,-1
   8dfcc:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   8dfd0:	0001883a 	nop
   8dfd4:	e037883a 	mov	sp,fp
   8dfd8:	dfc00117 	ldw	ra,4(sp)
   8dfdc:	df000017 	ldw	fp,0(sp)
   8dfe0:	dec00204 	addi	sp,sp,8
   8dfe4:	f800283a 	ret

0008dfe8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   8dfe8:	defff804 	addi	sp,sp,-32
   8dfec:	df000715 	stw	fp,28(sp)
   8dff0:	df000704 	addi	fp,sp,28
   8dff4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   8dff8:	e0bfff17 	ldw	r2,-4(fp)
   8dffc:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   8e000:	e0bffb17 	ldw	r2,-20(fp)
   8e004:	10800017 	ldw	r2,0(r2)
   8e008:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8e00c:	e0bffc17 	ldw	r2,-16(fp)
   8e010:	10800104 	addi	r2,r2,4
   8e014:	10800037 	ldwio	r2,0(r2)
   8e018:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   8e01c:	e0bffd17 	ldw	r2,-12(fp)
   8e020:	1080c00c 	andi	r2,r2,768
   8e024:	10006d26 	beq	r2,zero,8e1dc <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   8e028:	e0bffd17 	ldw	r2,-12(fp)
   8e02c:	1080400c 	andi	r2,r2,256
   8e030:	10003526 	beq	r2,zero,8e108 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   8e034:	00800074 	movhi	r2,1
   8e038:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8e03c:	e0bffb17 	ldw	r2,-20(fp)
   8e040:	10800a17 	ldw	r2,40(r2)
   8e044:	10800044 	addi	r2,r2,1
   8e048:	1081ffcc 	andi	r2,r2,2047
   8e04c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   8e050:	e0bffb17 	ldw	r2,-20(fp)
   8e054:	10c00b17 	ldw	r3,44(r2)
   8e058:	e0bffe17 	ldw	r2,-8(fp)
   8e05c:	18801526 	beq	r3,r2,8e0b4 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   8e060:	e0bffc17 	ldw	r2,-16(fp)
   8e064:	10800037 	ldwio	r2,0(r2)
   8e068:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   8e06c:	e0bff917 	ldw	r2,-28(fp)
   8e070:	10a0000c 	andi	r2,r2,32768
   8e074:	10001126 	beq	r2,zero,8e0bc <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   8e078:	e0bffb17 	ldw	r2,-20(fp)
   8e07c:	10800a17 	ldw	r2,40(r2)
   8e080:	e0fff917 	ldw	r3,-28(fp)
   8e084:	1809883a 	mov	r4,r3
   8e088:	e0fffb17 	ldw	r3,-20(fp)
   8e08c:	1885883a 	add	r2,r3,r2
   8e090:	10800e04 	addi	r2,r2,56
   8e094:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8e098:	e0bffb17 	ldw	r2,-20(fp)
   8e09c:	10800a17 	ldw	r2,40(r2)
   8e0a0:	10800044 	addi	r2,r2,1
   8e0a4:	10c1ffcc 	andi	r3,r2,2047
   8e0a8:	e0bffb17 	ldw	r2,-20(fp)
   8e0ac:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   8e0b0:	003fe206 	br	8e03c <__alt_data_end+0xfffc254c>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   8e0b4:	0001883a 	nop
   8e0b8:	00000106 	br	8e0c0 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   8e0bc:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   8e0c0:	e0bff917 	ldw	r2,-28(fp)
   8e0c4:	10bfffec 	andhi	r2,r2,65535
   8e0c8:	10000f26 	beq	r2,zero,8e108 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8e0cc:	e0bffb17 	ldw	r2,-20(fp)
   8e0d0:	10c00817 	ldw	r3,32(r2)
   8e0d4:	00bfff84 	movi	r2,-2
   8e0d8:	1886703a 	and	r3,r3,r2
   8e0dc:	e0bffb17 	ldw	r2,-20(fp)
   8e0e0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   8e0e4:	e0bffc17 	ldw	r2,-16(fp)
   8e0e8:	10800104 	addi	r2,r2,4
   8e0ec:	1007883a 	mov	r3,r2
   8e0f0:	e0bffb17 	ldw	r2,-20(fp)
   8e0f4:	10800817 	ldw	r2,32(r2)
   8e0f8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8e0fc:	e0bffc17 	ldw	r2,-16(fp)
   8e100:	10800104 	addi	r2,r2,4
   8e104:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   8e108:	e0bffd17 	ldw	r2,-12(fp)
   8e10c:	1080800c 	andi	r2,r2,512
   8e110:	103fbe26 	beq	r2,zero,8e00c <__alt_data_end+0xfffc251c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   8e114:	e0bffd17 	ldw	r2,-12(fp)
   8e118:	1004d43a 	srli	r2,r2,16
   8e11c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   8e120:	00001406 	br	8e174 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   8e124:	e0bffc17 	ldw	r2,-16(fp)
   8e128:	e0fffb17 	ldw	r3,-20(fp)
   8e12c:	18c00d17 	ldw	r3,52(r3)
   8e130:	e13ffb17 	ldw	r4,-20(fp)
   8e134:	20c7883a 	add	r3,r4,r3
   8e138:	18c20e04 	addi	r3,r3,2104
   8e13c:	18c00003 	ldbu	r3,0(r3)
   8e140:	18c03fcc 	andi	r3,r3,255
   8e144:	18c0201c 	xori	r3,r3,128
   8e148:	18ffe004 	addi	r3,r3,-128
   8e14c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8e150:	e0bffb17 	ldw	r2,-20(fp)
   8e154:	10800d17 	ldw	r2,52(r2)
   8e158:	10800044 	addi	r2,r2,1
   8e15c:	10c1ffcc 	andi	r3,r2,2047
   8e160:	e0bffb17 	ldw	r2,-20(fp)
   8e164:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   8e168:	e0bffa17 	ldw	r2,-24(fp)
   8e16c:	10bfffc4 	addi	r2,r2,-1
   8e170:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   8e174:	e0bffa17 	ldw	r2,-24(fp)
   8e178:	10000526 	beq	r2,zero,8e190 <altera_avalon_jtag_uart_irq+0x1a8>
   8e17c:	e0bffb17 	ldw	r2,-20(fp)
   8e180:	10c00d17 	ldw	r3,52(r2)
   8e184:	e0bffb17 	ldw	r2,-20(fp)
   8e188:	10800c17 	ldw	r2,48(r2)
   8e18c:	18bfe51e 	bne	r3,r2,8e124 <__alt_data_end+0xfffc2634>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   8e190:	e0bffa17 	ldw	r2,-24(fp)
   8e194:	103f9d26 	beq	r2,zero,8e00c <__alt_data_end+0xfffc251c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   8e198:	e0bffb17 	ldw	r2,-20(fp)
   8e19c:	10c00817 	ldw	r3,32(r2)
   8e1a0:	00bfff44 	movi	r2,-3
   8e1a4:	1886703a 	and	r3,r3,r2
   8e1a8:	e0bffb17 	ldw	r2,-20(fp)
   8e1ac:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8e1b0:	e0bffb17 	ldw	r2,-20(fp)
   8e1b4:	10800017 	ldw	r2,0(r2)
   8e1b8:	10800104 	addi	r2,r2,4
   8e1bc:	1007883a 	mov	r3,r2
   8e1c0:	e0bffb17 	ldw	r2,-20(fp)
   8e1c4:	10800817 	ldw	r2,32(r2)
   8e1c8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8e1cc:	e0bffc17 	ldw	r2,-16(fp)
   8e1d0:	10800104 	addi	r2,r2,4
   8e1d4:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   8e1d8:	003f8c06 	br	8e00c <__alt_data_end+0xfffc251c>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   8e1dc:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   8e1e0:	0001883a 	nop
   8e1e4:	e037883a 	mov	sp,fp
   8e1e8:	df000017 	ldw	fp,0(sp)
   8e1ec:	dec00104 	addi	sp,sp,4
   8e1f0:	f800283a 	ret

0008e1f4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   8e1f4:	defff804 	addi	sp,sp,-32
   8e1f8:	df000715 	stw	fp,28(sp)
   8e1fc:	df000704 	addi	fp,sp,28
   8e200:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   8e204:	e0bffb17 	ldw	r2,-20(fp)
   8e208:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   8e20c:	e0bff917 	ldw	r2,-28(fp)
   8e210:	10800017 	ldw	r2,0(r2)
   8e214:	10800104 	addi	r2,r2,4
   8e218:	10800037 	ldwio	r2,0(r2)
   8e21c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   8e220:	e0bffa17 	ldw	r2,-24(fp)
   8e224:	1081000c 	andi	r2,r2,1024
   8e228:	10000b26 	beq	r2,zero,8e258 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   8e22c:	e0bff917 	ldw	r2,-28(fp)
   8e230:	10800017 	ldw	r2,0(r2)
   8e234:	10800104 	addi	r2,r2,4
   8e238:	1007883a 	mov	r3,r2
   8e23c:	e0bff917 	ldw	r2,-28(fp)
   8e240:	10800817 	ldw	r2,32(r2)
   8e244:	10810014 	ori	r2,r2,1024
   8e248:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   8e24c:	e0bff917 	ldw	r2,-28(fp)
   8e250:	10000915 	stw	zero,36(r2)
   8e254:	00000a06 	br	8e280 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   8e258:	e0bff917 	ldw	r2,-28(fp)
   8e25c:	10c00917 	ldw	r3,36(r2)
   8e260:	00a00034 	movhi	r2,32768
   8e264:	10bfff04 	addi	r2,r2,-4
   8e268:	10c00536 	bltu	r2,r3,8e280 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   8e26c:	e0bff917 	ldw	r2,-28(fp)
   8e270:	10800917 	ldw	r2,36(r2)
   8e274:	10c00044 	addi	r3,r2,1
   8e278:	e0bff917 	ldw	r2,-28(fp)
   8e27c:	10c00915 	stw	r3,36(r2)
   8e280:	d0a6dc17 	ldw	r2,-25744(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   8e284:	e037883a 	mov	sp,fp
   8e288:	df000017 	ldw	fp,0(sp)
   8e28c:	dec00104 	addi	sp,sp,4
   8e290:	f800283a 	ret

0008e294 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   8e294:	defffd04 	addi	sp,sp,-12
   8e298:	df000215 	stw	fp,8(sp)
   8e29c:	df000204 	addi	fp,sp,8
   8e2a0:	e13ffe15 	stw	r4,-8(fp)
   8e2a4:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   8e2a8:	00000506 	br	8e2c0 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   8e2ac:	e0bfff17 	ldw	r2,-4(fp)
   8e2b0:	1090000c 	andi	r2,r2,16384
   8e2b4:	10000226 	beq	r2,zero,8e2c0 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   8e2b8:	00bffd44 	movi	r2,-11
   8e2bc:	00000b06 	br	8e2ec <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   8e2c0:	e0bffe17 	ldw	r2,-8(fp)
   8e2c4:	10c00d17 	ldw	r3,52(r2)
   8e2c8:	e0bffe17 	ldw	r2,-8(fp)
   8e2cc:	10800c17 	ldw	r2,48(r2)
   8e2d0:	18800526 	beq	r3,r2,8e2e8 <altera_avalon_jtag_uart_close+0x54>
   8e2d4:	e0bffe17 	ldw	r2,-8(fp)
   8e2d8:	10c00917 	ldw	r3,36(r2)
   8e2dc:	e0bffe17 	ldw	r2,-8(fp)
   8e2e0:	10800117 	ldw	r2,4(r2)
   8e2e4:	18bff136 	bltu	r3,r2,8e2ac <__alt_data_end+0xfffc27bc>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   8e2e8:	0005883a 	mov	r2,zero
}
   8e2ec:	e037883a 	mov	sp,fp
   8e2f0:	df000017 	ldw	fp,0(sp)
   8e2f4:	dec00104 	addi	sp,sp,4
   8e2f8:	f800283a 	ret

0008e2fc <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   8e2fc:	defffa04 	addi	sp,sp,-24
   8e300:	df000515 	stw	fp,20(sp)
   8e304:	df000504 	addi	fp,sp,20
   8e308:	e13ffd15 	stw	r4,-12(fp)
   8e30c:	e17ffe15 	stw	r5,-8(fp)
   8e310:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   8e314:	00bff9c4 	movi	r2,-25
   8e318:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   8e31c:	e0bffe17 	ldw	r2,-8(fp)
   8e320:	10da8060 	cmpeqi	r3,r2,27137
   8e324:	1800031e 	bne	r3,zero,8e334 <altera_avalon_jtag_uart_ioctl+0x38>
   8e328:	109a80a0 	cmpeqi	r2,r2,27138
   8e32c:	1000181e 	bne	r2,zero,8e390 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   8e330:	00002906 	br	8e3d8 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   8e334:	e0bffd17 	ldw	r2,-12(fp)
   8e338:	10c00117 	ldw	r3,4(r2)
   8e33c:	00a00034 	movhi	r2,32768
   8e340:	10bfffc4 	addi	r2,r2,-1
   8e344:	18802126 	beq	r3,r2,8e3cc <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   8e348:	e0bfff17 	ldw	r2,-4(fp)
   8e34c:	10800017 	ldw	r2,0(r2)
   8e350:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   8e354:	e0bffc17 	ldw	r2,-16(fp)
   8e358:	10800090 	cmplti	r2,r2,2
   8e35c:	1000061e 	bne	r2,zero,8e378 <altera_avalon_jtag_uart_ioctl+0x7c>
   8e360:	e0fffc17 	ldw	r3,-16(fp)
   8e364:	00a00034 	movhi	r2,32768
   8e368:	10bfffc4 	addi	r2,r2,-1
   8e36c:	18800226 	beq	r3,r2,8e378 <altera_avalon_jtag_uart_ioctl+0x7c>
   8e370:	e0bffc17 	ldw	r2,-16(fp)
   8e374:	00000206 	br	8e380 <altera_avalon_jtag_uart_ioctl+0x84>
   8e378:	00a00034 	movhi	r2,32768
   8e37c:	10bfff84 	addi	r2,r2,-2
   8e380:	e0fffd17 	ldw	r3,-12(fp)
   8e384:	18800115 	stw	r2,4(r3)
      rc = 0;
   8e388:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   8e38c:	00000f06 	br	8e3cc <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   8e390:	e0bffd17 	ldw	r2,-12(fp)
   8e394:	10c00117 	ldw	r3,4(r2)
   8e398:	00a00034 	movhi	r2,32768
   8e39c:	10bfffc4 	addi	r2,r2,-1
   8e3a0:	18800c26 	beq	r3,r2,8e3d4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   8e3a4:	e0bffd17 	ldw	r2,-12(fp)
   8e3a8:	10c00917 	ldw	r3,36(r2)
   8e3ac:	e0bffd17 	ldw	r2,-12(fp)
   8e3b0:	10800117 	ldw	r2,4(r2)
   8e3b4:	1885803a 	cmpltu	r2,r3,r2
   8e3b8:	10c03fcc 	andi	r3,r2,255
   8e3bc:	e0bfff17 	ldw	r2,-4(fp)
   8e3c0:	10c00015 	stw	r3,0(r2)
      rc = 0;
   8e3c4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   8e3c8:	00000206 	br	8e3d4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   8e3cc:	0001883a 	nop
   8e3d0:	00000106 	br	8e3d8 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   8e3d4:	0001883a 	nop

  default:
    break;
  }

  return rc;
   8e3d8:	e0bffb17 	ldw	r2,-20(fp)
}
   8e3dc:	e037883a 	mov	sp,fp
   8e3e0:	df000017 	ldw	fp,0(sp)
   8e3e4:	dec00104 	addi	sp,sp,4
   8e3e8:	f800283a 	ret

0008e3ec <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   8e3ec:	defff304 	addi	sp,sp,-52
   8e3f0:	dfc00c15 	stw	ra,48(sp)
   8e3f4:	df000b15 	stw	fp,44(sp)
   8e3f8:	df000b04 	addi	fp,sp,44
   8e3fc:	e13ffc15 	stw	r4,-16(fp)
   8e400:	e17ffd15 	stw	r5,-12(fp)
   8e404:	e1bffe15 	stw	r6,-8(fp)
   8e408:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   8e40c:	e0bffd17 	ldw	r2,-12(fp)
   8e410:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   8e414:	00004706 	br	8e534 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   8e418:	e0bffc17 	ldw	r2,-16(fp)
   8e41c:	10800a17 	ldw	r2,40(r2)
   8e420:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   8e424:	e0bffc17 	ldw	r2,-16(fp)
   8e428:	10800b17 	ldw	r2,44(r2)
   8e42c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   8e430:	e0fff717 	ldw	r3,-36(fp)
   8e434:	e0bff817 	ldw	r2,-32(fp)
   8e438:	18800536 	bltu	r3,r2,8e450 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   8e43c:	e0fff717 	ldw	r3,-36(fp)
   8e440:	e0bff817 	ldw	r2,-32(fp)
   8e444:	1885c83a 	sub	r2,r3,r2
   8e448:	e0bff615 	stw	r2,-40(fp)
   8e44c:	00000406 	br	8e460 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   8e450:	00c20004 	movi	r3,2048
   8e454:	e0bff817 	ldw	r2,-32(fp)
   8e458:	1885c83a 	sub	r2,r3,r2
   8e45c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   8e460:	e0bff617 	ldw	r2,-40(fp)
   8e464:	10001e26 	beq	r2,zero,8e4e0 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   8e468:	e0fffe17 	ldw	r3,-8(fp)
   8e46c:	e0bff617 	ldw	r2,-40(fp)
   8e470:	1880022e 	bgeu	r3,r2,8e47c <altera_avalon_jtag_uart_read+0x90>
        n = space;
   8e474:	e0bffe17 	ldw	r2,-8(fp)
   8e478:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   8e47c:	e0bffc17 	ldw	r2,-16(fp)
   8e480:	10c00e04 	addi	r3,r2,56
   8e484:	e0bff817 	ldw	r2,-32(fp)
   8e488:	1885883a 	add	r2,r3,r2
   8e48c:	e1bff617 	ldw	r6,-40(fp)
   8e490:	100b883a 	mov	r5,r2
   8e494:	e13ff517 	ldw	r4,-44(fp)
   8e498:	008613c0 	call	8613c <memcpy>
      ptr   += n;
   8e49c:	e0fff517 	ldw	r3,-44(fp)
   8e4a0:	e0bff617 	ldw	r2,-40(fp)
   8e4a4:	1885883a 	add	r2,r3,r2
   8e4a8:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   8e4ac:	e0fffe17 	ldw	r3,-8(fp)
   8e4b0:	e0bff617 	ldw	r2,-40(fp)
   8e4b4:	1885c83a 	sub	r2,r3,r2
   8e4b8:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8e4bc:	e0fff817 	ldw	r3,-32(fp)
   8e4c0:	e0bff617 	ldw	r2,-40(fp)
   8e4c4:	1885883a 	add	r2,r3,r2
   8e4c8:	10c1ffcc 	andi	r3,r2,2047
   8e4cc:	e0bffc17 	ldw	r2,-16(fp)
   8e4d0:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   8e4d4:	e0bffe17 	ldw	r2,-8(fp)
   8e4d8:	00bfcf16 	blt	zero,r2,8e418 <__alt_data_end+0xfffc2928>
   8e4dc:	00000106 	br	8e4e4 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   8e4e0:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   8e4e4:	e0fff517 	ldw	r3,-44(fp)
   8e4e8:	e0bffd17 	ldw	r2,-12(fp)
   8e4ec:	1880141e 	bne	r3,r2,8e540 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   8e4f0:	e0bfff17 	ldw	r2,-4(fp)
   8e4f4:	1090000c 	andi	r2,r2,16384
   8e4f8:	1000131e 	bne	r2,zero,8e548 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   8e4fc:	0001883a 	nop
   8e500:	e0bffc17 	ldw	r2,-16(fp)
   8e504:	10c00a17 	ldw	r3,40(r2)
   8e508:	e0bff717 	ldw	r2,-36(fp)
   8e50c:	1880051e 	bne	r3,r2,8e524 <altera_avalon_jtag_uart_read+0x138>
   8e510:	e0bffc17 	ldw	r2,-16(fp)
   8e514:	10c00917 	ldw	r3,36(r2)
   8e518:	e0bffc17 	ldw	r2,-16(fp)
   8e51c:	10800117 	ldw	r2,4(r2)
   8e520:	18bff736 	bltu	r3,r2,8e500 <__alt_data_end+0xfffc2a10>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   8e524:	e0bffc17 	ldw	r2,-16(fp)
   8e528:	10c00a17 	ldw	r3,40(r2)
   8e52c:	e0bff717 	ldw	r2,-36(fp)
   8e530:	18800726 	beq	r3,r2,8e550 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   8e534:	e0bffe17 	ldw	r2,-8(fp)
   8e538:	00bfb716 	blt	zero,r2,8e418 <__alt_data_end+0xfffc2928>
   8e53c:	00000506 	br	8e554 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   8e540:	0001883a 	nop
   8e544:	00000306 	br	8e554 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   8e548:	0001883a 	nop
   8e54c:	00000106 	br	8e554 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   8e550:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   8e554:	e0fff517 	ldw	r3,-44(fp)
   8e558:	e0bffd17 	ldw	r2,-12(fp)
   8e55c:	18801826 	beq	r3,r2,8e5c0 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e560:	0005303a 	rdctl	r2,status
   8e564:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e568:	e0fffb17 	ldw	r3,-20(fp)
   8e56c:	00bfff84 	movi	r2,-2
   8e570:	1884703a 	and	r2,r3,r2
   8e574:	1001703a 	wrctl	status,r2
  
  return context;
   8e578:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   8e57c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8e580:	e0bffc17 	ldw	r2,-16(fp)
   8e584:	10800817 	ldw	r2,32(r2)
   8e588:	10c00054 	ori	r3,r2,1
   8e58c:	e0bffc17 	ldw	r2,-16(fp)
   8e590:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8e594:	e0bffc17 	ldw	r2,-16(fp)
   8e598:	10800017 	ldw	r2,0(r2)
   8e59c:	10800104 	addi	r2,r2,4
   8e5a0:	1007883a 	mov	r3,r2
   8e5a4:	e0bffc17 	ldw	r2,-16(fp)
   8e5a8:	10800817 	ldw	r2,32(r2)
   8e5ac:	18800035 	stwio	r2,0(r3)
   8e5b0:	e0bffa17 	ldw	r2,-24(fp)
   8e5b4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e5b8:	e0bff917 	ldw	r2,-28(fp)
   8e5bc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   8e5c0:	e0fff517 	ldw	r3,-44(fp)
   8e5c4:	e0bffd17 	ldw	r2,-12(fp)
   8e5c8:	18800426 	beq	r3,r2,8e5dc <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   8e5cc:	e0fff517 	ldw	r3,-44(fp)
   8e5d0:	e0bffd17 	ldw	r2,-12(fp)
   8e5d4:	1885c83a 	sub	r2,r3,r2
   8e5d8:	00000606 	br	8e5f4 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   8e5dc:	e0bfff17 	ldw	r2,-4(fp)
   8e5e0:	1090000c 	andi	r2,r2,16384
   8e5e4:	10000226 	beq	r2,zero,8e5f0 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   8e5e8:	00bffd44 	movi	r2,-11
   8e5ec:	00000106 	br	8e5f4 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   8e5f0:	00bffec4 	movi	r2,-5
}
   8e5f4:	e037883a 	mov	sp,fp
   8e5f8:	dfc00117 	ldw	ra,4(sp)
   8e5fc:	df000017 	ldw	fp,0(sp)
   8e600:	dec00204 	addi	sp,sp,8
   8e604:	f800283a 	ret

0008e608 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   8e608:	defff304 	addi	sp,sp,-52
   8e60c:	dfc00c15 	stw	ra,48(sp)
   8e610:	df000b15 	stw	fp,44(sp)
   8e614:	df000b04 	addi	fp,sp,44
   8e618:	e13ffc15 	stw	r4,-16(fp)
   8e61c:	e17ffd15 	stw	r5,-12(fp)
   8e620:	e1bffe15 	stw	r6,-8(fp)
   8e624:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   8e628:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   8e62c:	e0bffd17 	ldw	r2,-12(fp)
   8e630:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   8e634:	00003706 	br	8e714 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   8e638:	e0bffc17 	ldw	r2,-16(fp)
   8e63c:	10800c17 	ldw	r2,48(r2)
   8e640:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   8e644:	e0bffc17 	ldw	r2,-16(fp)
   8e648:	10800d17 	ldw	r2,52(r2)
   8e64c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   8e650:	e0fff917 	ldw	r3,-28(fp)
   8e654:	e0bff517 	ldw	r2,-44(fp)
   8e658:	1880062e 	bgeu	r3,r2,8e674 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   8e65c:	e0fff517 	ldw	r3,-44(fp)
   8e660:	e0bff917 	ldw	r2,-28(fp)
   8e664:	1885c83a 	sub	r2,r3,r2
   8e668:	10bfffc4 	addi	r2,r2,-1
   8e66c:	e0bff615 	stw	r2,-40(fp)
   8e670:	00000b06 	br	8e6a0 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   8e674:	e0bff517 	ldw	r2,-44(fp)
   8e678:	10000526 	beq	r2,zero,8e690 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   8e67c:	00c20004 	movi	r3,2048
   8e680:	e0bff917 	ldw	r2,-28(fp)
   8e684:	1885c83a 	sub	r2,r3,r2
   8e688:	e0bff615 	stw	r2,-40(fp)
   8e68c:	00000406 	br	8e6a0 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   8e690:	00c1ffc4 	movi	r3,2047
   8e694:	e0bff917 	ldw	r2,-28(fp)
   8e698:	1885c83a 	sub	r2,r3,r2
   8e69c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   8e6a0:	e0bff617 	ldw	r2,-40(fp)
   8e6a4:	10001e26 	beq	r2,zero,8e720 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   8e6a8:	e0fffe17 	ldw	r3,-8(fp)
   8e6ac:	e0bff617 	ldw	r2,-40(fp)
   8e6b0:	1880022e 	bgeu	r3,r2,8e6bc <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   8e6b4:	e0bffe17 	ldw	r2,-8(fp)
   8e6b8:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   8e6bc:	e0bffc17 	ldw	r2,-16(fp)
   8e6c0:	10c20e04 	addi	r3,r2,2104
   8e6c4:	e0bff917 	ldw	r2,-28(fp)
   8e6c8:	1885883a 	add	r2,r3,r2
   8e6cc:	e1bff617 	ldw	r6,-40(fp)
   8e6d0:	e17ffd17 	ldw	r5,-12(fp)
   8e6d4:	1009883a 	mov	r4,r2
   8e6d8:	008613c0 	call	8613c <memcpy>
      ptr   += n;
   8e6dc:	e0fffd17 	ldw	r3,-12(fp)
   8e6e0:	e0bff617 	ldw	r2,-40(fp)
   8e6e4:	1885883a 	add	r2,r3,r2
   8e6e8:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   8e6ec:	e0fffe17 	ldw	r3,-8(fp)
   8e6f0:	e0bff617 	ldw	r2,-40(fp)
   8e6f4:	1885c83a 	sub	r2,r3,r2
   8e6f8:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8e6fc:	e0fff917 	ldw	r3,-28(fp)
   8e700:	e0bff617 	ldw	r2,-40(fp)
   8e704:	1885883a 	add	r2,r3,r2
   8e708:	10c1ffcc 	andi	r3,r2,2047
   8e70c:	e0bffc17 	ldw	r2,-16(fp)
   8e710:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   8e714:	e0bffe17 	ldw	r2,-8(fp)
   8e718:	00bfc716 	blt	zero,r2,8e638 <__alt_data_end+0xfffc2b48>
   8e71c:	00000106 	br	8e724 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   8e720:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e724:	0005303a 	rdctl	r2,status
   8e728:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e72c:	e0fffb17 	ldw	r3,-20(fp)
   8e730:	00bfff84 	movi	r2,-2
   8e734:	1884703a 	and	r2,r3,r2
   8e738:	1001703a 	wrctl	status,r2
  
  return context;
   8e73c:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   8e740:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   8e744:	e0bffc17 	ldw	r2,-16(fp)
   8e748:	10800817 	ldw	r2,32(r2)
   8e74c:	10c00094 	ori	r3,r2,2
   8e750:	e0bffc17 	ldw	r2,-16(fp)
   8e754:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8e758:	e0bffc17 	ldw	r2,-16(fp)
   8e75c:	10800017 	ldw	r2,0(r2)
   8e760:	10800104 	addi	r2,r2,4
   8e764:	1007883a 	mov	r3,r2
   8e768:	e0bffc17 	ldw	r2,-16(fp)
   8e76c:	10800817 	ldw	r2,32(r2)
   8e770:	18800035 	stwio	r2,0(r3)
   8e774:	e0bffa17 	ldw	r2,-24(fp)
   8e778:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e77c:	e0bff817 	ldw	r2,-32(fp)
   8e780:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   8e784:	e0bffe17 	ldw	r2,-8(fp)
   8e788:	0080100e 	bge	zero,r2,8e7cc <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   8e78c:	e0bfff17 	ldw	r2,-4(fp)
   8e790:	1090000c 	andi	r2,r2,16384
   8e794:	1000101e 	bne	r2,zero,8e7d8 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   8e798:	0001883a 	nop
   8e79c:	e0bffc17 	ldw	r2,-16(fp)
   8e7a0:	10c00d17 	ldw	r3,52(r2)
   8e7a4:	e0bff517 	ldw	r2,-44(fp)
   8e7a8:	1880051e 	bne	r3,r2,8e7c0 <altera_avalon_jtag_uart_write+0x1b8>
   8e7ac:	e0bffc17 	ldw	r2,-16(fp)
   8e7b0:	10c00917 	ldw	r3,36(r2)
   8e7b4:	e0bffc17 	ldw	r2,-16(fp)
   8e7b8:	10800117 	ldw	r2,4(r2)
   8e7bc:	18bff736 	bltu	r3,r2,8e79c <__alt_data_end+0xfffc2cac>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   8e7c0:	e0bffc17 	ldw	r2,-16(fp)
   8e7c4:	10800917 	ldw	r2,36(r2)
   8e7c8:	1000051e 	bne	r2,zero,8e7e0 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   8e7cc:	e0bffe17 	ldw	r2,-8(fp)
   8e7d0:	00bfd016 	blt	zero,r2,8e714 <__alt_data_end+0xfffc2c24>
   8e7d4:	00000306 	br	8e7e4 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   8e7d8:	0001883a 	nop
   8e7dc:	00000106 	br	8e7e4 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   8e7e0:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   8e7e4:	e0fffd17 	ldw	r3,-12(fp)
   8e7e8:	e0bff717 	ldw	r2,-36(fp)
   8e7ec:	18800426 	beq	r3,r2,8e800 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   8e7f0:	e0fffd17 	ldw	r3,-12(fp)
   8e7f4:	e0bff717 	ldw	r2,-36(fp)
   8e7f8:	1885c83a 	sub	r2,r3,r2
   8e7fc:	00000606 	br	8e818 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   8e800:	e0bfff17 	ldw	r2,-4(fp)
   8e804:	1090000c 	andi	r2,r2,16384
   8e808:	10000226 	beq	r2,zero,8e814 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   8e80c:	00bffd44 	movi	r2,-11
   8e810:	00000106 	br	8e818 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   8e814:	00bffec4 	movi	r2,-5
}
   8e818:	e037883a 	mov	sp,fp
   8e81c:	dfc00117 	ldw	ra,4(sp)
   8e820:	df000017 	ldw	fp,0(sp)
   8e824:	dec00204 	addi	sp,sp,8
   8e828:	f800283a 	ret

0008e82c <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   8e82c:	defffa04 	addi	sp,sp,-24
   8e830:	dfc00515 	stw	ra,20(sp)
   8e834:	df000415 	stw	fp,16(sp)
   8e838:	df000404 	addi	fp,sp,16
   8e83c:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   8e840:	0007883a 	mov	r3,zero
   8e844:	e0bfff17 	ldw	r2,-4(fp)
   8e848:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   8e84c:	e0bfff17 	ldw	r2,-4(fp)
   8e850:	10800104 	addi	r2,r2,4
   8e854:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e858:	0005303a 	rdctl	r2,status
   8e85c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e860:	e0fffd17 	ldw	r3,-12(fp)
   8e864:	00bfff84 	movi	r2,-2
   8e868:	1884703a 	and	r2,r3,r2
   8e86c:	1001703a 	wrctl	status,r2
  
  return context;
   8e870:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   8e874:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   8e878:	008f1340 	call	8f134 <alt_tick>
   8e87c:	e0bffc17 	ldw	r2,-16(fp)
   8e880:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e884:	e0bffe17 	ldw	r2,-8(fp)
   8e888:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   8e88c:	0001883a 	nop
   8e890:	e037883a 	mov	sp,fp
   8e894:	dfc00117 	ldw	ra,4(sp)
   8e898:	df000017 	ldw	fp,0(sp)
   8e89c:	dec00204 	addi	sp,sp,8
   8e8a0:	f800283a 	ret

0008e8a4 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   8e8a4:	defff804 	addi	sp,sp,-32
   8e8a8:	dfc00715 	stw	ra,28(sp)
   8e8ac:	df000615 	stw	fp,24(sp)
   8e8b0:	df000604 	addi	fp,sp,24
   8e8b4:	e13ffc15 	stw	r4,-16(fp)
   8e8b8:	e17ffd15 	stw	r5,-12(fp)
   8e8bc:	e1bffe15 	stw	r6,-8(fp)
   8e8c0:	e1ffff15 	stw	r7,-4(fp)
   8e8c4:	e0bfff17 	ldw	r2,-4(fp)
   8e8c8:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   8e8cc:	d0a6dc17 	ldw	r2,-25744(gp)
   8e8d0:	1000021e 	bne	r2,zero,8e8dc <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
   8e8d4:	e0bffb17 	ldw	r2,-20(fp)
   8e8d8:	d0a6dc15 	stw	r2,-25744(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   8e8dc:	e0bffc17 	ldw	r2,-16(fp)
   8e8e0:	10800104 	addi	r2,r2,4
   8e8e4:	00c001c4 	movi	r3,7
   8e8e8:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   8e8ec:	d8000015 	stw	zero,0(sp)
   8e8f0:	e1fffc17 	ldw	r7,-16(fp)
   8e8f4:	01800274 	movhi	r6,9
   8e8f8:	31ba0b04 	addi	r6,r6,-6100
   8e8fc:	e17ffe17 	ldw	r5,-8(fp)
   8e900:	e13ffd17 	ldw	r4,-12(fp)
   8e904:	008d1b40 	call	8d1b4 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   8e908:	0001883a 	nop
   8e90c:	e037883a 	mov	sp,fp
   8e910:	dfc00117 	ldw	ra,4(sp)
   8e914:	df000017 	ldw	fp,0(sp)
   8e918:	dec00204 	addi	sp,sp,8
   8e91c:	f800283a 	ret

0008e920 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   8e920:	defff504 	addi	sp,sp,-44
   8e924:	df000a15 	stw	fp,40(sp)
   8e928:	df000a04 	addi	fp,sp,40
   8e92c:	e13ffc15 	stw	r4,-16(fp)
   8e930:	e17ffd15 	stw	r5,-12(fp)
   8e934:	e1bffe15 	stw	r6,-8(fp)
   8e938:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   8e93c:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   8e940:	d0a6dc17 	ldw	r2,-25744(gp)
  
  if (alt_ticks_per_second ())
   8e944:	10003c26 	beq	r2,zero,8ea38 <alt_alarm_start+0x118>
  {
    if (alarm)
   8e948:	e0bffc17 	ldw	r2,-16(fp)
   8e94c:	10003826 	beq	r2,zero,8ea30 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   8e950:	e0bffc17 	ldw	r2,-16(fp)
   8e954:	e0fffe17 	ldw	r3,-8(fp)
   8e958:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   8e95c:	e0bffc17 	ldw	r2,-16(fp)
   8e960:	e0ffff17 	ldw	r3,-4(fp)
   8e964:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e968:	0005303a 	rdctl	r2,status
   8e96c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e970:	e0fff917 	ldw	r3,-28(fp)
   8e974:	00bfff84 	movi	r2,-2
   8e978:	1884703a 	and	r2,r3,r2
   8e97c:	1001703a 	wrctl	status,r2
  
  return context;
   8e980:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   8e984:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   8e988:	d0a6dd17 	ldw	r2,-25740(gp)
      
      current_nticks = alt_nticks();
   8e98c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   8e990:	e0fffd17 	ldw	r3,-12(fp)
   8e994:	e0bff617 	ldw	r2,-40(fp)
   8e998:	1885883a 	add	r2,r3,r2
   8e99c:	10c00044 	addi	r3,r2,1
   8e9a0:	e0bffc17 	ldw	r2,-16(fp)
   8e9a4:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   8e9a8:	e0bffc17 	ldw	r2,-16(fp)
   8e9ac:	10c00217 	ldw	r3,8(r2)
   8e9b0:	e0bff617 	ldw	r2,-40(fp)
   8e9b4:	1880042e 	bgeu	r3,r2,8e9c8 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   8e9b8:	e0bffc17 	ldw	r2,-16(fp)
   8e9bc:	00c00044 	movi	r3,1
   8e9c0:	10c00405 	stb	r3,16(r2)
   8e9c4:	00000206 	br	8e9d0 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   8e9c8:	e0bffc17 	ldw	r2,-16(fp)
   8e9cc:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   8e9d0:	e0bffc17 	ldw	r2,-16(fp)
   8e9d4:	d0e00f04 	addi	r3,gp,-32708
   8e9d8:	e0fffa15 	stw	r3,-24(fp)
   8e9dc:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   8e9e0:	e0bffb17 	ldw	r2,-20(fp)
   8e9e4:	e0fffa17 	ldw	r3,-24(fp)
   8e9e8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   8e9ec:	e0bffa17 	ldw	r2,-24(fp)
   8e9f0:	10c00017 	ldw	r3,0(r2)
   8e9f4:	e0bffb17 	ldw	r2,-20(fp)
   8e9f8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   8e9fc:	e0bffa17 	ldw	r2,-24(fp)
   8ea00:	10800017 	ldw	r2,0(r2)
   8ea04:	e0fffb17 	ldw	r3,-20(fp)
   8ea08:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   8ea0c:	e0bffa17 	ldw	r2,-24(fp)
   8ea10:	e0fffb17 	ldw	r3,-20(fp)
   8ea14:	10c00015 	stw	r3,0(r2)
   8ea18:	e0bff817 	ldw	r2,-32(fp)
   8ea1c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8ea20:	e0bff717 	ldw	r2,-36(fp)
   8ea24:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   8ea28:	0005883a 	mov	r2,zero
   8ea2c:	00000306 	br	8ea3c <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   8ea30:	00bffa84 	movi	r2,-22
   8ea34:	00000106 	br	8ea3c <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   8ea38:	00bfde84 	movi	r2,-134
  }
}
   8ea3c:	e037883a 	mov	sp,fp
   8ea40:	df000017 	ldw	fp,0(sp)
   8ea44:	dec00104 	addi	sp,sp,4
   8ea48:	f800283a 	ret

0008ea4c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   8ea4c:	defffe04 	addi	sp,sp,-8
   8ea50:	df000115 	stw	fp,4(sp)
   8ea54:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   8ea58:	e03fff15 	stw	zero,-4(fp)
   8ea5c:	00000506 	br	8ea74 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   8ea60:	e0bfff17 	ldw	r2,-4(fp)
   8ea64:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   8ea68:	e0bfff17 	ldw	r2,-4(fp)
   8ea6c:	10800804 	addi	r2,r2,32
   8ea70:	e0bfff15 	stw	r2,-4(fp)
   8ea74:	e0bfff17 	ldw	r2,-4(fp)
   8ea78:	10820030 	cmpltui	r2,r2,2048
   8ea7c:	103ff81e 	bne	r2,zero,8ea60 <__alt_data_end+0xfffc2f70>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   8ea80:	0001883a 	nop
   8ea84:	e037883a 	mov	sp,fp
   8ea88:	df000017 	ldw	fp,0(sp)
   8ea8c:	dec00104 	addi	sp,sp,4
   8ea90:	f800283a 	ret

0008ea94 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8ea94:	defffe04 	addi	sp,sp,-8
   8ea98:	dfc00115 	stw	ra,4(sp)
   8ea9c:	df000015 	stw	fp,0(sp)
   8eaa0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8eaa4:	d0a00c17 	ldw	r2,-32720(gp)
   8eaa8:	10000326 	beq	r2,zero,8eab8 <alt_get_errno+0x24>
   8eaac:	d0a00c17 	ldw	r2,-32720(gp)
   8eab0:	103ee83a 	callr	r2
   8eab4:	00000106 	br	8eabc <alt_get_errno+0x28>
   8eab8:	d0a6d604 	addi	r2,gp,-25768
}
   8eabc:	e037883a 	mov	sp,fp
   8eac0:	dfc00117 	ldw	ra,4(sp)
   8eac4:	df000017 	ldw	fp,0(sp)
   8eac8:	dec00204 	addi	sp,sp,8
   8eacc:	f800283a 	ret

0008ead0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   8ead0:	defffa04 	addi	sp,sp,-24
   8ead4:	dfc00515 	stw	ra,20(sp)
   8ead8:	df000415 	stw	fp,16(sp)
   8eadc:	df000404 	addi	fp,sp,16
   8eae0:	e13ffe15 	stw	r4,-8(fp)
   8eae4:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   8eae8:	e0bffe17 	ldw	r2,-8(fp)
   8eaec:	10000326 	beq	r2,zero,8eafc <alt_dev_llist_insert+0x2c>
   8eaf0:	e0bffe17 	ldw	r2,-8(fp)
   8eaf4:	10800217 	ldw	r2,8(r2)
   8eaf8:	1000061e 	bne	r2,zero,8eb14 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   8eafc:	008ea940 	call	8ea94 <alt_get_errno>
   8eb00:	1007883a 	mov	r3,r2
   8eb04:	00800584 	movi	r2,22
   8eb08:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   8eb0c:	00bffa84 	movi	r2,-22
   8eb10:	00001306 	br	8eb60 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   8eb14:	e0bffe17 	ldw	r2,-8(fp)
   8eb18:	e0ffff17 	ldw	r3,-4(fp)
   8eb1c:	e0fffc15 	stw	r3,-16(fp)
   8eb20:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   8eb24:	e0bffd17 	ldw	r2,-12(fp)
   8eb28:	e0fffc17 	ldw	r3,-16(fp)
   8eb2c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   8eb30:	e0bffc17 	ldw	r2,-16(fp)
   8eb34:	10c00017 	ldw	r3,0(r2)
   8eb38:	e0bffd17 	ldw	r2,-12(fp)
   8eb3c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   8eb40:	e0bffc17 	ldw	r2,-16(fp)
   8eb44:	10800017 	ldw	r2,0(r2)
   8eb48:	e0fffd17 	ldw	r3,-12(fp)
   8eb4c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   8eb50:	e0bffc17 	ldw	r2,-16(fp)
   8eb54:	e0fffd17 	ldw	r3,-12(fp)
   8eb58:	10c00015 	stw	r3,0(r2)

  return 0;  
   8eb5c:	0005883a 	mov	r2,zero
}
   8eb60:	e037883a 	mov	sp,fp
   8eb64:	dfc00117 	ldw	ra,4(sp)
   8eb68:	df000017 	ldw	fp,0(sp)
   8eb6c:	dec00204 	addi	sp,sp,8
   8eb70:	f800283a 	ret

0008eb74 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   8eb74:	defffd04 	addi	sp,sp,-12
   8eb78:	dfc00215 	stw	ra,8(sp)
   8eb7c:	df000115 	stw	fp,4(sp)
   8eb80:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   8eb84:	00800274 	movhi	r2,9
   8eb88:	10be2f04 	addi	r2,r2,-1860
   8eb8c:	e0bfff15 	stw	r2,-4(fp)
   8eb90:	00000606 	br	8ebac <_do_ctors+0x38>
        (*ctor) (); 
   8eb94:	e0bfff17 	ldw	r2,-4(fp)
   8eb98:	10800017 	ldw	r2,0(r2)
   8eb9c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   8eba0:	e0bfff17 	ldw	r2,-4(fp)
   8eba4:	10bfff04 	addi	r2,r2,-4
   8eba8:	e0bfff15 	stw	r2,-4(fp)
   8ebac:	e0ffff17 	ldw	r3,-4(fp)
   8ebb0:	00800274 	movhi	r2,9
   8ebb4:	10be3004 	addi	r2,r2,-1856
   8ebb8:	18bff62e 	bgeu	r3,r2,8eb94 <__alt_data_end+0xfffc30a4>
        (*ctor) (); 
}
   8ebbc:	0001883a 	nop
   8ebc0:	e037883a 	mov	sp,fp
   8ebc4:	dfc00117 	ldw	ra,4(sp)
   8ebc8:	df000017 	ldw	fp,0(sp)
   8ebcc:	dec00204 	addi	sp,sp,8
   8ebd0:	f800283a 	ret

0008ebd4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   8ebd4:	defffd04 	addi	sp,sp,-12
   8ebd8:	dfc00215 	stw	ra,8(sp)
   8ebdc:	df000115 	stw	fp,4(sp)
   8ebe0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   8ebe4:	00800274 	movhi	r2,9
   8ebe8:	10be2f04 	addi	r2,r2,-1860
   8ebec:	e0bfff15 	stw	r2,-4(fp)
   8ebf0:	00000606 	br	8ec0c <_do_dtors+0x38>
        (*dtor) (); 
   8ebf4:	e0bfff17 	ldw	r2,-4(fp)
   8ebf8:	10800017 	ldw	r2,0(r2)
   8ebfc:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   8ec00:	e0bfff17 	ldw	r2,-4(fp)
   8ec04:	10bfff04 	addi	r2,r2,-4
   8ec08:	e0bfff15 	stw	r2,-4(fp)
   8ec0c:	e0ffff17 	ldw	r3,-4(fp)
   8ec10:	00800274 	movhi	r2,9
   8ec14:	10be3004 	addi	r2,r2,-1856
   8ec18:	18bff62e 	bgeu	r3,r2,8ebf4 <__alt_data_end+0xfffc3104>
        (*dtor) (); 
}
   8ec1c:	0001883a 	nop
   8ec20:	e037883a 	mov	sp,fp
   8ec24:	dfc00117 	ldw	ra,4(sp)
   8ec28:	df000017 	ldw	fp,0(sp)
   8ec2c:	dec00204 	addi	sp,sp,8
   8ec30:	f800283a 	ret

0008ec34 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   8ec34:	defffe04 	addi	sp,sp,-8
   8ec38:	dfc00115 	stw	ra,4(sp)
   8ec3c:	df000015 	stw	fp,0(sp)
   8ec40:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   8ec44:	01440004 	movi	r5,4096
   8ec48:	0009883a 	mov	r4,zero
   8ec4c:	008f49c0 	call	8f49c <alt_icache_flush>
#endif
}
   8ec50:	0001883a 	nop
   8ec54:	e037883a 	mov	sp,fp
   8ec58:	dfc00117 	ldw	ra,4(sp)
   8ec5c:	df000017 	ldw	fp,0(sp)
   8ec60:	dec00204 	addi	sp,sp,8
   8ec64:	f800283a 	ret

0008ec68 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   8ec68:	defffe04 	addi	sp,sp,-8
   8ec6c:	df000115 	stw	fp,4(sp)
   8ec70:	df000104 	addi	fp,sp,4
   8ec74:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   8ec78:	e0bfff17 	ldw	r2,-4(fp)
   8ec7c:	10bffe84 	addi	r2,r2,-6
   8ec80:	10c00428 	cmpgeui	r3,r2,16
   8ec84:	18001a1e 	bne	r3,zero,8ecf0 <alt_exception_cause_generated_bad_addr+0x88>
   8ec88:	100690ba 	slli	r3,r2,2
   8ec8c:	00800274 	movhi	r2,9
   8ec90:	10bb2804 	addi	r2,r2,-4960
   8ec94:	1885883a 	add	r2,r3,r2
   8ec98:	10800017 	ldw	r2,0(r2)
   8ec9c:	1000683a 	jmp	r2
   8eca0:	0008ece0 	cmpeqi	zero,zero,9139
   8eca4:	0008ece0 	cmpeqi	zero,zero,9139
   8eca8:	0008ecf0 	cmpltui	zero,zero,9139
   8ecac:	0008ecf0 	cmpltui	zero,zero,9139
   8ecb0:	0008ecf0 	cmpltui	zero,zero,9139
   8ecb4:	0008ece0 	cmpeqi	zero,zero,9139
   8ecb8:	0008ece8 	cmpgeui	zero,zero,9139
   8ecbc:	0008ecf0 	cmpltui	zero,zero,9139
   8ecc0:	0008ece0 	cmpeqi	zero,zero,9139
   8ecc4:	0008ece0 	cmpeqi	zero,zero,9139
   8ecc8:	0008ecf0 	cmpltui	zero,zero,9139
   8eccc:	0008ece0 	cmpeqi	zero,zero,9139
   8ecd0:	0008ece8 	cmpgeui	zero,zero,9139
   8ecd4:	0008ecf0 	cmpltui	zero,zero,9139
   8ecd8:	0008ecf0 	cmpltui	zero,zero,9139
   8ecdc:	0008ece0 	cmpeqi	zero,zero,9139
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   8ece0:	00800044 	movi	r2,1
   8ece4:	00000306 	br	8ecf4 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   8ece8:	0005883a 	mov	r2,zero
   8ecec:	00000106 	br	8ecf4 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   8ecf0:	0005883a 	mov	r2,zero
  }
}
   8ecf4:	e037883a 	mov	sp,fp
   8ecf8:	df000017 	ldw	fp,0(sp)
   8ecfc:	dec00104 	addi	sp,sp,4
   8ed00:	f800283a 	ret

0008ed04 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   8ed04:	defff904 	addi	sp,sp,-28
   8ed08:	dfc00615 	stw	ra,24(sp)
   8ed0c:	df000515 	stw	fp,20(sp)
   8ed10:	df000504 	addi	fp,sp,20
   8ed14:	e13ffc15 	stw	r4,-16(fp)
   8ed18:	e17ffd15 	stw	r5,-12(fp)
   8ed1c:	e1bffe15 	stw	r6,-8(fp)
   8ed20:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   8ed24:	e1bfff17 	ldw	r6,-4(fp)
   8ed28:	e17ffe17 	ldw	r5,-8(fp)
   8ed2c:	e13ffd17 	ldw	r4,-12(fp)
   8ed30:	008ef440 	call	8ef44 <open>
   8ed34:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   8ed38:	e0bffb17 	ldw	r2,-20(fp)
   8ed3c:	10001c16 	blt	r2,zero,8edb0 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   8ed40:	00800274 	movhi	r2,9
   8ed44:	10812f04 	addi	r2,r2,1212
   8ed48:	e0fffb17 	ldw	r3,-20(fp)
   8ed4c:	18c00324 	muli	r3,r3,12
   8ed50:	10c5883a 	add	r2,r2,r3
   8ed54:	10c00017 	ldw	r3,0(r2)
   8ed58:	e0bffc17 	ldw	r2,-16(fp)
   8ed5c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   8ed60:	00800274 	movhi	r2,9
   8ed64:	10812f04 	addi	r2,r2,1212
   8ed68:	e0fffb17 	ldw	r3,-20(fp)
   8ed6c:	18c00324 	muli	r3,r3,12
   8ed70:	10c5883a 	add	r2,r2,r3
   8ed74:	10800104 	addi	r2,r2,4
   8ed78:	10c00017 	ldw	r3,0(r2)
   8ed7c:	e0bffc17 	ldw	r2,-16(fp)
   8ed80:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   8ed84:	00800274 	movhi	r2,9
   8ed88:	10812f04 	addi	r2,r2,1212
   8ed8c:	e0fffb17 	ldw	r3,-20(fp)
   8ed90:	18c00324 	muli	r3,r3,12
   8ed94:	10c5883a 	add	r2,r2,r3
   8ed98:	10800204 	addi	r2,r2,8
   8ed9c:	10c00017 	ldw	r3,0(r2)
   8eda0:	e0bffc17 	ldw	r2,-16(fp)
   8eda4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   8eda8:	e13ffb17 	ldw	r4,-20(fp)
   8edac:	008daac0 	call	8daac <alt_release_fd>
  }
} 
   8edb0:	0001883a 	nop
   8edb4:	e037883a 	mov	sp,fp
   8edb8:	dfc00117 	ldw	ra,4(sp)
   8edbc:	df000017 	ldw	fp,0(sp)
   8edc0:	dec00204 	addi	sp,sp,8
   8edc4:	f800283a 	ret

0008edc8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   8edc8:	defffb04 	addi	sp,sp,-20
   8edcc:	dfc00415 	stw	ra,16(sp)
   8edd0:	df000315 	stw	fp,12(sp)
   8edd4:	df000304 	addi	fp,sp,12
   8edd8:	e13ffd15 	stw	r4,-12(fp)
   8eddc:	e17ffe15 	stw	r5,-8(fp)
   8ede0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   8ede4:	01c07fc4 	movi	r7,511
   8ede8:	01800044 	movi	r6,1
   8edec:	e17ffd17 	ldw	r5,-12(fp)
   8edf0:	01000274 	movhi	r4,9
   8edf4:	21013204 	addi	r4,r4,1224
   8edf8:	008ed040 	call	8ed04 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   8edfc:	01c07fc4 	movi	r7,511
   8ee00:	000d883a 	mov	r6,zero
   8ee04:	e17ffe17 	ldw	r5,-8(fp)
   8ee08:	01000274 	movhi	r4,9
   8ee0c:	21012f04 	addi	r4,r4,1212
   8ee10:	008ed040 	call	8ed04 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   8ee14:	01c07fc4 	movi	r7,511
   8ee18:	01800044 	movi	r6,1
   8ee1c:	e17fff17 	ldw	r5,-4(fp)
   8ee20:	01000274 	movhi	r4,9
   8ee24:	21013504 	addi	r4,r4,1236
   8ee28:	008ed040 	call	8ed04 <alt_open_fd>
}  
   8ee2c:	0001883a 	nop
   8ee30:	e037883a 	mov	sp,fp
   8ee34:	dfc00117 	ldw	ra,4(sp)
   8ee38:	df000017 	ldw	fp,0(sp)
   8ee3c:	dec00204 	addi	sp,sp,8
   8ee40:	f800283a 	ret

0008ee44 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8ee44:	defffe04 	addi	sp,sp,-8
   8ee48:	dfc00115 	stw	ra,4(sp)
   8ee4c:	df000015 	stw	fp,0(sp)
   8ee50:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8ee54:	d0a00c17 	ldw	r2,-32720(gp)
   8ee58:	10000326 	beq	r2,zero,8ee68 <alt_get_errno+0x24>
   8ee5c:	d0a00c17 	ldw	r2,-32720(gp)
   8ee60:	103ee83a 	callr	r2
   8ee64:	00000106 	br	8ee6c <alt_get_errno+0x28>
   8ee68:	d0a6d604 	addi	r2,gp,-25768
}
   8ee6c:	e037883a 	mov	sp,fp
   8ee70:	dfc00117 	ldw	ra,4(sp)
   8ee74:	df000017 	ldw	fp,0(sp)
   8ee78:	dec00204 	addi	sp,sp,8
   8ee7c:	f800283a 	ret

0008ee80 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   8ee80:	defffd04 	addi	sp,sp,-12
   8ee84:	df000215 	stw	fp,8(sp)
   8ee88:	df000204 	addi	fp,sp,8
   8ee8c:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   8ee90:	e0bfff17 	ldw	r2,-4(fp)
   8ee94:	10800217 	ldw	r2,8(r2)
   8ee98:	10d00034 	orhi	r3,r2,16384
   8ee9c:	e0bfff17 	ldw	r2,-4(fp)
   8eea0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   8eea4:	e03ffe15 	stw	zero,-8(fp)
   8eea8:	00001d06 	br	8ef20 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   8eeac:	00800274 	movhi	r2,9
   8eeb0:	10812f04 	addi	r2,r2,1212
   8eeb4:	e0fffe17 	ldw	r3,-8(fp)
   8eeb8:	18c00324 	muli	r3,r3,12
   8eebc:	10c5883a 	add	r2,r2,r3
   8eec0:	10c00017 	ldw	r3,0(r2)
   8eec4:	e0bfff17 	ldw	r2,-4(fp)
   8eec8:	10800017 	ldw	r2,0(r2)
   8eecc:	1880111e 	bne	r3,r2,8ef14 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   8eed0:	00800274 	movhi	r2,9
   8eed4:	10812f04 	addi	r2,r2,1212
   8eed8:	e0fffe17 	ldw	r3,-8(fp)
   8eedc:	18c00324 	muli	r3,r3,12
   8eee0:	10c5883a 	add	r2,r2,r3
   8eee4:	10800204 	addi	r2,r2,8
   8eee8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   8eeec:	1000090e 	bge	r2,zero,8ef14 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   8eef0:	e0bffe17 	ldw	r2,-8(fp)
   8eef4:	10c00324 	muli	r3,r2,12
   8eef8:	00800274 	movhi	r2,9
   8eefc:	10812f04 	addi	r2,r2,1212
   8ef00:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   8ef04:	e0bfff17 	ldw	r2,-4(fp)
   8ef08:	18800226 	beq	r3,r2,8ef14 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   8ef0c:	00bffcc4 	movi	r2,-13
   8ef10:	00000806 	br	8ef34 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   8ef14:	e0bffe17 	ldw	r2,-8(fp)
   8ef18:	10800044 	addi	r2,r2,1
   8ef1c:	e0bffe15 	stw	r2,-8(fp)
   8ef20:	d0a00b17 	ldw	r2,-32724(gp)
   8ef24:	1007883a 	mov	r3,r2
   8ef28:	e0bffe17 	ldw	r2,-8(fp)
   8ef2c:	18bfdf2e 	bgeu	r3,r2,8eeac <__alt_data_end+0xfffc33bc>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   8ef30:	0005883a 	mov	r2,zero
}
   8ef34:	e037883a 	mov	sp,fp
   8ef38:	df000017 	ldw	fp,0(sp)
   8ef3c:	dec00104 	addi	sp,sp,4
   8ef40:	f800283a 	ret

0008ef44 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   8ef44:	defff604 	addi	sp,sp,-40
   8ef48:	dfc00915 	stw	ra,36(sp)
   8ef4c:	df000815 	stw	fp,32(sp)
   8ef50:	df000804 	addi	fp,sp,32
   8ef54:	e13ffd15 	stw	r4,-12(fp)
   8ef58:	e17ffe15 	stw	r5,-8(fp)
   8ef5c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   8ef60:	00bfffc4 	movi	r2,-1
   8ef64:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   8ef68:	00bffb44 	movi	r2,-19
   8ef6c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   8ef70:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   8ef74:	d1600904 	addi	r5,gp,-32732
   8ef78:	e13ffd17 	ldw	r4,-12(fp)
   8ef7c:	008f2600 	call	8f260 <alt_find_dev>
   8ef80:	e0bff815 	stw	r2,-32(fp)
   8ef84:	e0bff817 	ldw	r2,-32(fp)
   8ef88:	1000051e 	bne	r2,zero,8efa0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   8ef8c:	e13ffd17 	ldw	r4,-12(fp)
   8ef90:	008f2f00 	call	8f2f0 <alt_find_file>
   8ef94:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   8ef98:	00800044 	movi	r2,1
   8ef9c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   8efa0:	e0bff817 	ldw	r2,-32(fp)
   8efa4:	10002926 	beq	r2,zero,8f04c <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   8efa8:	e13ff817 	ldw	r4,-32(fp)
   8efac:	008f3f80 	call	8f3f8 <alt_get_fd>
   8efb0:	e0bff915 	stw	r2,-28(fp)
   8efb4:	e0bff917 	ldw	r2,-28(fp)
   8efb8:	1000030e 	bge	r2,zero,8efc8 <open+0x84>
    {
      status = index;
   8efbc:	e0bff917 	ldw	r2,-28(fp)
   8efc0:	e0bffa15 	stw	r2,-24(fp)
   8efc4:	00002306 	br	8f054 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   8efc8:	e0bff917 	ldw	r2,-28(fp)
   8efcc:	10c00324 	muli	r3,r2,12
   8efd0:	00800274 	movhi	r2,9
   8efd4:	10812f04 	addi	r2,r2,1212
   8efd8:	1885883a 	add	r2,r3,r2
   8efdc:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   8efe0:	e0fffe17 	ldw	r3,-8(fp)
   8efe4:	00900034 	movhi	r2,16384
   8efe8:	10bfffc4 	addi	r2,r2,-1
   8efec:	1886703a 	and	r3,r3,r2
   8eff0:	e0bffc17 	ldw	r2,-16(fp)
   8eff4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   8eff8:	e0bffb17 	ldw	r2,-20(fp)
   8effc:	1000051e 	bne	r2,zero,8f014 <open+0xd0>
   8f000:	e13ffc17 	ldw	r4,-16(fp)
   8f004:	008ee800 	call	8ee80 <alt_file_locked>
   8f008:	e0bffa15 	stw	r2,-24(fp)
   8f00c:	e0bffa17 	ldw	r2,-24(fp)
   8f010:	10001016 	blt	r2,zero,8f054 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   8f014:	e0bff817 	ldw	r2,-32(fp)
   8f018:	10800317 	ldw	r2,12(r2)
   8f01c:	10000826 	beq	r2,zero,8f040 <open+0xfc>
   8f020:	e0bff817 	ldw	r2,-32(fp)
   8f024:	10800317 	ldw	r2,12(r2)
   8f028:	e1ffff17 	ldw	r7,-4(fp)
   8f02c:	e1bffe17 	ldw	r6,-8(fp)
   8f030:	e17ffd17 	ldw	r5,-12(fp)
   8f034:	e13ffc17 	ldw	r4,-16(fp)
   8f038:	103ee83a 	callr	r2
   8f03c:	00000106 	br	8f044 <open+0x100>
   8f040:	0005883a 	mov	r2,zero
   8f044:	e0bffa15 	stw	r2,-24(fp)
   8f048:	00000206 	br	8f054 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   8f04c:	00bffb44 	movi	r2,-19
   8f050:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   8f054:	e0bffa17 	ldw	r2,-24(fp)
   8f058:	1000090e 	bge	r2,zero,8f080 <open+0x13c>
  {
    alt_release_fd (index);  
   8f05c:	e13ff917 	ldw	r4,-28(fp)
   8f060:	008daac0 	call	8daac <alt_release_fd>
    ALT_ERRNO = -status;
   8f064:	008ee440 	call	8ee44 <alt_get_errno>
   8f068:	1007883a 	mov	r3,r2
   8f06c:	e0bffa17 	ldw	r2,-24(fp)
   8f070:	0085c83a 	sub	r2,zero,r2
   8f074:	18800015 	stw	r2,0(r3)
    return -1;
   8f078:	00bfffc4 	movi	r2,-1
   8f07c:	00000106 	br	8f084 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   8f080:	e0bff917 	ldw	r2,-28(fp)
}
   8f084:	e037883a 	mov	sp,fp
   8f088:	dfc00117 	ldw	ra,4(sp)
   8f08c:	df000017 	ldw	fp,0(sp)
   8f090:	dec00204 	addi	sp,sp,8
   8f094:	f800283a 	ret

0008f098 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   8f098:	defffa04 	addi	sp,sp,-24
   8f09c:	df000515 	stw	fp,20(sp)
   8f0a0:	df000504 	addi	fp,sp,20
   8f0a4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8f0a8:	0005303a 	rdctl	r2,status
   8f0ac:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8f0b0:	e0fffc17 	ldw	r3,-16(fp)
   8f0b4:	00bfff84 	movi	r2,-2
   8f0b8:	1884703a 	and	r2,r3,r2
   8f0bc:	1001703a 	wrctl	status,r2
  
  return context;
   8f0c0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   8f0c4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   8f0c8:	e0bfff17 	ldw	r2,-4(fp)
   8f0cc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   8f0d0:	e0bffd17 	ldw	r2,-12(fp)
   8f0d4:	10800017 	ldw	r2,0(r2)
   8f0d8:	e0fffd17 	ldw	r3,-12(fp)
   8f0dc:	18c00117 	ldw	r3,4(r3)
   8f0e0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   8f0e4:	e0bffd17 	ldw	r2,-12(fp)
   8f0e8:	10800117 	ldw	r2,4(r2)
   8f0ec:	e0fffd17 	ldw	r3,-12(fp)
   8f0f0:	18c00017 	ldw	r3,0(r3)
   8f0f4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   8f0f8:	e0bffd17 	ldw	r2,-12(fp)
   8f0fc:	e0fffd17 	ldw	r3,-12(fp)
   8f100:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   8f104:	e0bffd17 	ldw	r2,-12(fp)
   8f108:	e0fffd17 	ldw	r3,-12(fp)
   8f10c:	10c00015 	stw	r3,0(r2)
   8f110:	e0bffb17 	ldw	r2,-20(fp)
   8f114:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8f118:	e0bffe17 	ldw	r2,-8(fp)
   8f11c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   8f120:	0001883a 	nop
   8f124:	e037883a 	mov	sp,fp
   8f128:	df000017 	ldw	fp,0(sp)
   8f12c:	dec00104 	addi	sp,sp,4
   8f130:	f800283a 	ret

0008f134 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   8f134:	defffb04 	addi	sp,sp,-20
   8f138:	dfc00415 	stw	ra,16(sp)
   8f13c:	df000315 	stw	fp,12(sp)
   8f140:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   8f144:	d0a00f17 	ldw	r2,-32708(gp)
   8f148:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   8f14c:	d0a6dd17 	ldw	r2,-25740(gp)
   8f150:	10800044 	addi	r2,r2,1
   8f154:	d0a6dd15 	stw	r2,-25740(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   8f158:	00002e06 	br	8f214 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   8f15c:	e0bffd17 	ldw	r2,-12(fp)
   8f160:	10800017 	ldw	r2,0(r2)
   8f164:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   8f168:	e0bffd17 	ldw	r2,-12(fp)
   8f16c:	10800403 	ldbu	r2,16(r2)
   8f170:	10803fcc 	andi	r2,r2,255
   8f174:	10000426 	beq	r2,zero,8f188 <alt_tick+0x54>
   8f178:	d0a6dd17 	ldw	r2,-25740(gp)
   8f17c:	1000021e 	bne	r2,zero,8f188 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   8f180:	e0bffd17 	ldw	r2,-12(fp)
   8f184:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   8f188:	e0bffd17 	ldw	r2,-12(fp)
   8f18c:	10800217 	ldw	r2,8(r2)
   8f190:	d0e6dd17 	ldw	r3,-25740(gp)
   8f194:	18801d36 	bltu	r3,r2,8f20c <alt_tick+0xd8>
   8f198:	e0bffd17 	ldw	r2,-12(fp)
   8f19c:	10800403 	ldbu	r2,16(r2)
   8f1a0:	10803fcc 	andi	r2,r2,255
   8f1a4:	1000191e 	bne	r2,zero,8f20c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   8f1a8:	e0bffd17 	ldw	r2,-12(fp)
   8f1ac:	10800317 	ldw	r2,12(r2)
   8f1b0:	e0fffd17 	ldw	r3,-12(fp)
   8f1b4:	18c00517 	ldw	r3,20(r3)
   8f1b8:	1809883a 	mov	r4,r3
   8f1bc:	103ee83a 	callr	r2
   8f1c0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   8f1c4:	e0bfff17 	ldw	r2,-4(fp)
   8f1c8:	1000031e 	bne	r2,zero,8f1d8 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   8f1cc:	e13ffd17 	ldw	r4,-12(fp)
   8f1d0:	008f0980 	call	8f098 <alt_alarm_stop>
   8f1d4:	00000d06 	br	8f20c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   8f1d8:	e0bffd17 	ldw	r2,-12(fp)
   8f1dc:	10c00217 	ldw	r3,8(r2)
   8f1e0:	e0bfff17 	ldw	r2,-4(fp)
   8f1e4:	1887883a 	add	r3,r3,r2
   8f1e8:	e0bffd17 	ldw	r2,-12(fp)
   8f1ec:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   8f1f0:	e0bffd17 	ldw	r2,-12(fp)
   8f1f4:	10c00217 	ldw	r3,8(r2)
   8f1f8:	d0a6dd17 	ldw	r2,-25740(gp)
   8f1fc:	1880032e 	bgeu	r3,r2,8f20c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   8f200:	e0bffd17 	ldw	r2,-12(fp)
   8f204:	00c00044 	movi	r3,1
   8f208:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   8f20c:	e0bffe17 	ldw	r2,-8(fp)
   8f210:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   8f214:	e0fffd17 	ldw	r3,-12(fp)
   8f218:	d0a00f04 	addi	r2,gp,-32708
   8f21c:	18bfcf1e 	bne	r3,r2,8f15c <__alt_data_end+0xfffc366c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   8f220:	0001883a 	nop
}
   8f224:	0001883a 	nop
   8f228:	e037883a 	mov	sp,fp
   8f22c:	dfc00117 	ldw	ra,4(sp)
   8f230:	df000017 	ldw	fp,0(sp)
   8f234:	dec00204 	addi	sp,sp,8
   8f238:	f800283a 	ret

0008f23c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   8f23c:	deffff04 	addi	sp,sp,-4
   8f240:	df000015 	stw	fp,0(sp)
   8f244:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   8f248:	000170fa 	wrctl	ienable,zero
}
   8f24c:	0001883a 	nop
   8f250:	e037883a 	mov	sp,fp
   8f254:	df000017 	ldw	fp,0(sp)
   8f258:	dec00104 	addi	sp,sp,4
   8f25c:	f800283a 	ret

0008f260 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   8f260:	defffa04 	addi	sp,sp,-24
   8f264:	dfc00515 	stw	ra,20(sp)
   8f268:	df000415 	stw	fp,16(sp)
   8f26c:	df000404 	addi	fp,sp,16
   8f270:	e13ffe15 	stw	r4,-8(fp)
   8f274:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   8f278:	e0bfff17 	ldw	r2,-4(fp)
   8f27c:	10800017 	ldw	r2,0(r2)
   8f280:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   8f284:	e13ffe17 	ldw	r4,-8(fp)
   8f288:	00807b00 	call	807b0 <strlen>
   8f28c:	10800044 	addi	r2,r2,1
   8f290:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   8f294:	00000d06 	br	8f2cc <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   8f298:	e0bffc17 	ldw	r2,-16(fp)
   8f29c:	10800217 	ldw	r2,8(r2)
   8f2a0:	e0fffd17 	ldw	r3,-12(fp)
   8f2a4:	180d883a 	mov	r6,r3
   8f2a8:	e17ffe17 	ldw	r5,-8(fp)
   8f2ac:	1009883a 	mov	r4,r2
   8f2b0:	008f5780 	call	8f578 <memcmp>
   8f2b4:	1000021e 	bne	r2,zero,8f2c0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   8f2b8:	e0bffc17 	ldw	r2,-16(fp)
   8f2bc:	00000706 	br	8f2dc <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   8f2c0:	e0bffc17 	ldw	r2,-16(fp)
   8f2c4:	10800017 	ldw	r2,0(r2)
   8f2c8:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   8f2cc:	e0fffc17 	ldw	r3,-16(fp)
   8f2d0:	e0bfff17 	ldw	r2,-4(fp)
   8f2d4:	18bff01e 	bne	r3,r2,8f298 <__alt_data_end+0xfffc37a8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   8f2d8:	0005883a 	mov	r2,zero
}
   8f2dc:	e037883a 	mov	sp,fp
   8f2e0:	dfc00117 	ldw	ra,4(sp)
   8f2e4:	df000017 	ldw	fp,0(sp)
   8f2e8:	dec00204 	addi	sp,sp,8
   8f2ec:	f800283a 	ret

0008f2f0 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   8f2f0:	defffb04 	addi	sp,sp,-20
   8f2f4:	dfc00415 	stw	ra,16(sp)
   8f2f8:	df000315 	stw	fp,12(sp)
   8f2fc:	df000304 	addi	fp,sp,12
   8f300:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   8f304:	d0a00717 	ldw	r2,-32740(gp)
   8f308:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   8f30c:	00003106 	br	8f3d4 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   8f310:	e0bffd17 	ldw	r2,-12(fp)
   8f314:	10800217 	ldw	r2,8(r2)
   8f318:	1009883a 	mov	r4,r2
   8f31c:	00807b00 	call	807b0 <strlen>
   8f320:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   8f324:	e0bffd17 	ldw	r2,-12(fp)
   8f328:	10c00217 	ldw	r3,8(r2)
   8f32c:	e0bffe17 	ldw	r2,-8(fp)
   8f330:	10bfffc4 	addi	r2,r2,-1
   8f334:	1885883a 	add	r2,r3,r2
   8f338:	10800003 	ldbu	r2,0(r2)
   8f33c:	10803fcc 	andi	r2,r2,255
   8f340:	1080201c 	xori	r2,r2,128
   8f344:	10bfe004 	addi	r2,r2,-128
   8f348:	10800bd8 	cmpnei	r2,r2,47
   8f34c:	1000031e 	bne	r2,zero,8f35c <alt_find_file+0x6c>
    {
      len -= 1;
   8f350:	e0bffe17 	ldw	r2,-8(fp)
   8f354:	10bfffc4 	addi	r2,r2,-1
   8f358:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   8f35c:	e0bffe17 	ldw	r2,-8(fp)
   8f360:	e0ffff17 	ldw	r3,-4(fp)
   8f364:	1885883a 	add	r2,r3,r2
   8f368:	10800003 	ldbu	r2,0(r2)
   8f36c:	10803fcc 	andi	r2,r2,255
   8f370:	1080201c 	xori	r2,r2,128
   8f374:	10bfe004 	addi	r2,r2,-128
   8f378:	10800be0 	cmpeqi	r2,r2,47
   8f37c:	1000081e 	bne	r2,zero,8f3a0 <alt_find_file+0xb0>
   8f380:	e0bffe17 	ldw	r2,-8(fp)
   8f384:	e0ffff17 	ldw	r3,-4(fp)
   8f388:	1885883a 	add	r2,r3,r2
   8f38c:	10800003 	ldbu	r2,0(r2)
   8f390:	10803fcc 	andi	r2,r2,255
   8f394:	1080201c 	xori	r2,r2,128
   8f398:	10bfe004 	addi	r2,r2,-128
   8f39c:	10000a1e 	bne	r2,zero,8f3c8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   8f3a0:	e0bffd17 	ldw	r2,-12(fp)
   8f3a4:	10800217 	ldw	r2,8(r2)
   8f3a8:	e0fffe17 	ldw	r3,-8(fp)
   8f3ac:	180d883a 	mov	r6,r3
   8f3b0:	e17fff17 	ldw	r5,-4(fp)
   8f3b4:	1009883a 	mov	r4,r2
   8f3b8:	008f5780 	call	8f578 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   8f3bc:	1000021e 	bne	r2,zero,8f3c8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   8f3c0:	e0bffd17 	ldw	r2,-12(fp)
   8f3c4:	00000706 	br	8f3e4 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   8f3c8:	e0bffd17 	ldw	r2,-12(fp)
   8f3cc:	10800017 	ldw	r2,0(r2)
   8f3d0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   8f3d4:	e0fffd17 	ldw	r3,-12(fp)
   8f3d8:	d0a00704 	addi	r2,gp,-32740
   8f3dc:	18bfcc1e 	bne	r3,r2,8f310 <__alt_data_end+0xfffc3820>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   8f3e0:	0005883a 	mov	r2,zero
}
   8f3e4:	e037883a 	mov	sp,fp
   8f3e8:	dfc00117 	ldw	ra,4(sp)
   8f3ec:	df000017 	ldw	fp,0(sp)
   8f3f0:	dec00204 	addi	sp,sp,8
   8f3f4:	f800283a 	ret

0008f3f8 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   8f3f8:	defffc04 	addi	sp,sp,-16
   8f3fc:	df000315 	stw	fp,12(sp)
   8f400:	df000304 	addi	fp,sp,12
   8f404:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   8f408:	00bffa04 	movi	r2,-24
   8f40c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   8f410:	e03ffd15 	stw	zero,-12(fp)
   8f414:	00001906 	br	8f47c <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   8f418:	00800274 	movhi	r2,9
   8f41c:	10812f04 	addi	r2,r2,1212
   8f420:	e0fffd17 	ldw	r3,-12(fp)
   8f424:	18c00324 	muli	r3,r3,12
   8f428:	10c5883a 	add	r2,r2,r3
   8f42c:	10800017 	ldw	r2,0(r2)
   8f430:	10000f1e 	bne	r2,zero,8f470 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   8f434:	00800274 	movhi	r2,9
   8f438:	10812f04 	addi	r2,r2,1212
   8f43c:	e0fffd17 	ldw	r3,-12(fp)
   8f440:	18c00324 	muli	r3,r3,12
   8f444:	10c5883a 	add	r2,r2,r3
   8f448:	e0ffff17 	ldw	r3,-4(fp)
   8f44c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   8f450:	d0e00b17 	ldw	r3,-32724(gp)
   8f454:	e0bffd17 	ldw	r2,-12(fp)
   8f458:	1880020e 	bge	r3,r2,8f464 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   8f45c:	e0bffd17 	ldw	r2,-12(fp)
   8f460:	d0a00b15 	stw	r2,-32724(gp)
      }
      rc = i;
   8f464:	e0bffd17 	ldw	r2,-12(fp)
   8f468:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   8f46c:	00000606 	br	8f488 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   8f470:	e0bffd17 	ldw	r2,-12(fp)
   8f474:	10800044 	addi	r2,r2,1
   8f478:	e0bffd15 	stw	r2,-12(fp)
   8f47c:	e0bffd17 	ldw	r2,-12(fp)
   8f480:	10800810 	cmplti	r2,r2,32
   8f484:	103fe41e 	bne	r2,zero,8f418 <__alt_data_end+0xfffc3928>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   8f488:	e0bffe17 	ldw	r2,-8(fp)
}
   8f48c:	e037883a 	mov	sp,fp
   8f490:	df000017 	ldw	fp,0(sp)
   8f494:	dec00104 	addi	sp,sp,4
   8f498:	f800283a 	ret

0008f49c <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   8f49c:	defffb04 	addi	sp,sp,-20
   8f4a0:	df000415 	stw	fp,16(sp)
   8f4a4:	df000404 	addi	fp,sp,16
   8f4a8:	e13ffe15 	stw	r4,-8(fp)
   8f4ac:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   8f4b0:	e0bfff17 	ldw	r2,-4(fp)
   8f4b4:	10840070 	cmpltui	r2,r2,4097
   8f4b8:	1000021e 	bne	r2,zero,8f4c4 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   8f4bc:	00840004 	movi	r2,4096
   8f4c0:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   8f4c4:	e0fffe17 	ldw	r3,-8(fp)
   8f4c8:	e0bfff17 	ldw	r2,-4(fp)
   8f4cc:	1885883a 	add	r2,r3,r2
   8f4d0:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   8f4d4:	e0bffe17 	ldw	r2,-8(fp)
   8f4d8:	e0bffc15 	stw	r2,-16(fp)
   8f4dc:	00000506 	br	8f4f4 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   8f4e0:	e0bffc17 	ldw	r2,-16(fp)
   8f4e4:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   8f4e8:	e0bffc17 	ldw	r2,-16(fp)
   8f4ec:	10800804 	addi	r2,r2,32
   8f4f0:	e0bffc15 	stw	r2,-16(fp)
   8f4f4:	e0fffc17 	ldw	r3,-16(fp)
   8f4f8:	e0bffd17 	ldw	r2,-12(fp)
   8f4fc:	18bff836 	bltu	r3,r2,8f4e0 <__alt_data_end+0xfffc39f0>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   8f500:	e0bffe17 	ldw	r2,-8(fp)
   8f504:	108007cc 	andi	r2,r2,31
   8f508:	10000226 	beq	r2,zero,8f514 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   8f50c:	e0bffc17 	ldw	r2,-16(fp)
   8f510:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   8f514:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   8f518:	0001883a 	nop
   8f51c:	e037883a 	mov	sp,fp
   8f520:	df000017 	ldw	fp,0(sp)
   8f524:	dec00104 	addi	sp,sp,4
   8f528:	f800283a 	ret

0008f52c <atexit>:
   8f52c:	200b883a 	mov	r5,r4
   8f530:	000f883a 	mov	r7,zero
   8f534:	000d883a 	mov	r6,zero
   8f538:	0009883a 	mov	r4,zero
   8f53c:	008f5f41 	jmpi	8f5f4 <__register_exitproc>

0008f540 <exit>:
   8f540:	defffe04 	addi	sp,sp,-8
   8f544:	000b883a 	mov	r5,zero
   8f548:	dc000015 	stw	r16,0(sp)
   8f54c:	dfc00115 	stw	ra,4(sp)
   8f550:	2021883a 	mov	r16,r4
   8f554:	008f70c0 	call	8f70c <__call_exitprocs>
   8f558:	00800274 	movhi	r2,9
   8f55c:	1085a804 	addi	r2,r2,5792
   8f560:	11000017 	ldw	r4,0(r2)
   8f564:	20800f17 	ldw	r2,60(r4)
   8f568:	10000126 	beq	r2,zero,8f570 <exit+0x30>
   8f56c:	103ee83a 	callr	r2
   8f570:	8009883a 	mov	r4,r16
   8f574:	008f88c0 	call	8f88c <_exit>

0008f578 <memcmp>:
   8f578:	01c000c4 	movi	r7,3
   8f57c:	3980192e 	bgeu	r7,r6,8f5e4 <memcmp+0x6c>
   8f580:	2144b03a 	or	r2,r4,r5
   8f584:	11c4703a 	and	r2,r2,r7
   8f588:	10000f26 	beq	r2,zero,8f5c8 <memcmp+0x50>
   8f58c:	20800003 	ldbu	r2,0(r4)
   8f590:	28c00003 	ldbu	r3,0(r5)
   8f594:	10c0151e 	bne	r2,r3,8f5ec <memcmp+0x74>
   8f598:	31bfff84 	addi	r6,r6,-2
   8f59c:	01ffffc4 	movi	r7,-1
   8f5a0:	00000406 	br	8f5b4 <memcmp+0x3c>
   8f5a4:	20800003 	ldbu	r2,0(r4)
   8f5a8:	28c00003 	ldbu	r3,0(r5)
   8f5ac:	31bfffc4 	addi	r6,r6,-1
   8f5b0:	10c00e1e 	bne	r2,r3,8f5ec <memcmp+0x74>
   8f5b4:	21000044 	addi	r4,r4,1
   8f5b8:	29400044 	addi	r5,r5,1
   8f5bc:	31fff91e 	bne	r6,r7,8f5a4 <__alt_data_end+0xfffc3ab4>
   8f5c0:	0005883a 	mov	r2,zero
   8f5c4:	f800283a 	ret
   8f5c8:	20c00017 	ldw	r3,0(r4)
   8f5cc:	28800017 	ldw	r2,0(r5)
   8f5d0:	18bfee1e 	bne	r3,r2,8f58c <__alt_data_end+0xfffc3a9c>
   8f5d4:	31bfff04 	addi	r6,r6,-4
   8f5d8:	21000104 	addi	r4,r4,4
   8f5dc:	29400104 	addi	r5,r5,4
   8f5e0:	39bff936 	bltu	r7,r6,8f5c8 <__alt_data_end+0xfffc3ad8>
   8f5e4:	303fe91e 	bne	r6,zero,8f58c <__alt_data_end+0xfffc3a9c>
   8f5e8:	003ff506 	br	8f5c0 <__alt_data_end+0xfffc3ad0>
   8f5ec:	10c5c83a 	sub	r2,r2,r3
   8f5f0:	f800283a 	ret

0008f5f4 <__register_exitproc>:
   8f5f4:	defffa04 	addi	sp,sp,-24
   8f5f8:	dc000315 	stw	r16,12(sp)
   8f5fc:	04000274 	movhi	r16,9
   8f600:	8405a804 	addi	r16,r16,5792
   8f604:	80c00017 	ldw	r3,0(r16)
   8f608:	dc400415 	stw	r17,16(sp)
   8f60c:	dfc00515 	stw	ra,20(sp)
   8f610:	18805217 	ldw	r2,328(r3)
   8f614:	2023883a 	mov	r17,r4
   8f618:	10003726 	beq	r2,zero,8f6f8 <__register_exitproc+0x104>
   8f61c:	10c00117 	ldw	r3,4(r2)
   8f620:	010007c4 	movi	r4,31
   8f624:	20c00e16 	blt	r4,r3,8f660 <__register_exitproc+0x6c>
   8f628:	1a000044 	addi	r8,r3,1
   8f62c:	8800221e 	bne	r17,zero,8f6b8 <__register_exitproc+0xc4>
   8f630:	18c00084 	addi	r3,r3,2
   8f634:	18c7883a 	add	r3,r3,r3
   8f638:	18c7883a 	add	r3,r3,r3
   8f63c:	12000115 	stw	r8,4(r2)
   8f640:	10c7883a 	add	r3,r2,r3
   8f644:	19400015 	stw	r5,0(r3)
   8f648:	0005883a 	mov	r2,zero
   8f64c:	dfc00517 	ldw	ra,20(sp)
   8f650:	dc400417 	ldw	r17,16(sp)
   8f654:	dc000317 	ldw	r16,12(sp)
   8f658:	dec00604 	addi	sp,sp,24
   8f65c:	f800283a 	ret
   8f660:	00800034 	movhi	r2,0
   8f664:	10800004 	addi	r2,r2,0
   8f668:	10002626 	beq	r2,zero,8f704 <__register_exitproc+0x110>
   8f66c:	01006404 	movi	r4,400
   8f670:	d9400015 	stw	r5,0(sp)
   8f674:	d9800115 	stw	r6,4(sp)
   8f678:	d9c00215 	stw	r7,8(sp)
   8f67c:	00000000 	call	0 <__reset-0x80000>
   8f680:	d9400017 	ldw	r5,0(sp)
   8f684:	d9800117 	ldw	r6,4(sp)
   8f688:	d9c00217 	ldw	r7,8(sp)
   8f68c:	10001d26 	beq	r2,zero,8f704 <__register_exitproc+0x110>
   8f690:	81000017 	ldw	r4,0(r16)
   8f694:	10000115 	stw	zero,4(r2)
   8f698:	02000044 	movi	r8,1
   8f69c:	22405217 	ldw	r9,328(r4)
   8f6a0:	0007883a 	mov	r3,zero
   8f6a4:	12400015 	stw	r9,0(r2)
   8f6a8:	20805215 	stw	r2,328(r4)
   8f6ac:	10006215 	stw	zero,392(r2)
   8f6b0:	10006315 	stw	zero,396(r2)
   8f6b4:	883fde26 	beq	r17,zero,8f630 <__alt_data_end+0xfffc3b40>
   8f6b8:	18c9883a 	add	r4,r3,r3
   8f6bc:	2109883a 	add	r4,r4,r4
   8f6c0:	1109883a 	add	r4,r2,r4
   8f6c4:	21802215 	stw	r6,136(r4)
   8f6c8:	01800044 	movi	r6,1
   8f6cc:	12406217 	ldw	r9,392(r2)
   8f6d0:	30cc983a 	sll	r6,r6,r3
   8f6d4:	4992b03a 	or	r9,r9,r6
   8f6d8:	12406215 	stw	r9,392(r2)
   8f6dc:	21c04215 	stw	r7,264(r4)
   8f6e0:	01000084 	movi	r4,2
   8f6e4:	893fd21e 	bne	r17,r4,8f630 <__alt_data_end+0xfffc3b40>
   8f6e8:	11006317 	ldw	r4,396(r2)
   8f6ec:	218cb03a 	or	r6,r4,r6
   8f6f0:	11806315 	stw	r6,396(r2)
   8f6f4:	003fce06 	br	8f630 <__alt_data_end+0xfffc3b40>
   8f6f8:	18805304 	addi	r2,r3,332
   8f6fc:	18805215 	stw	r2,328(r3)
   8f700:	003fc606 	br	8f61c <__alt_data_end+0xfffc3b2c>
   8f704:	00bfffc4 	movi	r2,-1
   8f708:	003fd006 	br	8f64c <__alt_data_end+0xfffc3b5c>

0008f70c <__call_exitprocs>:
   8f70c:	defff504 	addi	sp,sp,-44
   8f710:	df000915 	stw	fp,36(sp)
   8f714:	dd400615 	stw	r21,24(sp)
   8f718:	dc800315 	stw	r18,12(sp)
   8f71c:	dfc00a15 	stw	ra,40(sp)
   8f720:	ddc00815 	stw	r23,32(sp)
   8f724:	dd800715 	stw	r22,28(sp)
   8f728:	dd000515 	stw	r20,20(sp)
   8f72c:	dcc00415 	stw	r19,16(sp)
   8f730:	dc400215 	stw	r17,8(sp)
   8f734:	dc000115 	stw	r16,4(sp)
   8f738:	d9000015 	stw	r4,0(sp)
   8f73c:	2839883a 	mov	fp,r5
   8f740:	04800044 	movi	r18,1
   8f744:	057fffc4 	movi	r21,-1
   8f748:	00800274 	movhi	r2,9
   8f74c:	1085a804 	addi	r2,r2,5792
   8f750:	12000017 	ldw	r8,0(r2)
   8f754:	45005217 	ldw	r20,328(r8)
   8f758:	44c05204 	addi	r19,r8,328
   8f75c:	a0001c26 	beq	r20,zero,8f7d0 <__call_exitprocs+0xc4>
   8f760:	a0800117 	ldw	r2,4(r20)
   8f764:	15ffffc4 	addi	r23,r2,-1
   8f768:	b8000d16 	blt	r23,zero,8f7a0 <__call_exitprocs+0x94>
   8f76c:	14000044 	addi	r16,r2,1
   8f770:	8421883a 	add	r16,r16,r16
   8f774:	8421883a 	add	r16,r16,r16
   8f778:	84402004 	addi	r17,r16,128
   8f77c:	a463883a 	add	r17,r20,r17
   8f780:	a421883a 	add	r16,r20,r16
   8f784:	e0001e26 	beq	fp,zero,8f800 <__call_exitprocs+0xf4>
   8f788:	80804017 	ldw	r2,256(r16)
   8f78c:	e0801c26 	beq	fp,r2,8f800 <__call_exitprocs+0xf4>
   8f790:	bdffffc4 	addi	r23,r23,-1
   8f794:	843fff04 	addi	r16,r16,-4
   8f798:	8c7fff04 	addi	r17,r17,-4
   8f79c:	bd7ff91e 	bne	r23,r21,8f784 <__alt_data_end+0xfffc3c94>
   8f7a0:	00800034 	movhi	r2,0
   8f7a4:	10800004 	addi	r2,r2,0
   8f7a8:	10000926 	beq	r2,zero,8f7d0 <__call_exitprocs+0xc4>
   8f7ac:	a0800117 	ldw	r2,4(r20)
   8f7b0:	1000301e 	bne	r2,zero,8f874 <__call_exitprocs+0x168>
   8f7b4:	a0800017 	ldw	r2,0(r20)
   8f7b8:	10003226 	beq	r2,zero,8f884 <__call_exitprocs+0x178>
   8f7bc:	a009883a 	mov	r4,r20
   8f7c0:	98800015 	stw	r2,0(r19)
   8f7c4:	00000000 	call	0 <__reset-0x80000>
   8f7c8:	9d000017 	ldw	r20,0(r19)
   8f7cc:	a03fe41e 	bne	r20,zero,8f760 <__alt_data_end+0xfffc3c70>
   8f7d0:	dfc00a17 	ldw	ra,40(sp)
   8f7d4:	df000917 	ldw	fp,36(sp)
   8f7d8:	ddc00817 	ldw	r23,32(sp)
   8f7dc:	dd800717 	ldw	r22,28(sp)
   8f7e0:	dd400617 	ldw	r21,24(sp)
   8f7e4:	dd000517 	ldw	r20,20(sp)
   8f7e8:	dcc00417 	ldw	r19,16(sp)
   8f7ec:	dc800317 	ldw	r18,12(sp)
   8f7f0:	dc400217 	ldw	r17,8(sp)
   8f7f4:	dc000117 	ldw	r16,4(sp)
   8f7f8:	dec00b04 	addi	sp,sp,44
   8f7fc:	f800283a 	ret
   8f800:	a0800117 	ldw	r2,4(r20)
   8f804:	80c00017 	ldw	r3,0(r16)
   8f808:	10bfffc4 	addi	r2,r2,-1
   8f80c:	15c01426 	beq	r2,r23,8f860 <__call_exitprocs+0x154>
   8f810:	80000015 	stw	zero,0(r16)
   8f814:	183fde26 	beq	r3,zero,8f790 <__alt_data_end+0xfffc3ca0>
   8f818:	95c8983a 	sll	r4,r18,r23
   8f81c:	a0806217 	ldw	r2,392(r20)
   8f820:	a5800117 	ldw	r22,4(r20)
   8f824:	2084703a 	and	r2,r4,r2
   8f828:	10000b26 	beq	r2,zero,8f858 <__call_exitprocs+0x14c>
   8f82c:	a0806317 	ldw	r2,396(r20)
   8f830:	2088703a 	and	r4,r4,r2
   8f834:	20000c1e 	bne	r4,zero,8f868 <__call_exitprocs+0x15c>
   8f838:	89400017 	ldw	r5,0(r17)
   8f83c:	d9000017 	ldw	r4,0(sp)
   8f840:	183ee83a 	callr	r3
   8f844:	a0800117 	ldw	r2,4(r20)
   8f848:	15bfbf1e 	bne	r2,r22,8f748 <__alt_data_end+0xfffc3c58>
   8f84c:	98800017 	ldw	r2,0(r19)
   8f850:	153fcf26 	beq	r2,r20,8f790 <__alt_data_end+0xfffc3ca0>
   8f854:	003fbc06 	br	8f748 <__alt_data_end+0xfffc3c58>
   8f858:	183ee83a 	callr	r3
   8f85c:	003ff906 	br	8f844 <__alt_data_end+0xfffc3d54>
   8f860:	a5c00115 	stw	r23,4(r20)
   8f864:	003feb06 	br	8f814 <__alt_data_end+0xfffc3d24>
   8f868:	89000017 	ldw	r4,0(r17)
   8f86c:	183ee83a 	callr	r3
   8f870:	003ff406 	br	8f844 <__alt_data_end+0xfffc3d54>
   8f874:	a0800017 	ldw	r2,0(r20)
   8f878:	a027883a 	mov	r19,r20
   8f87c:	1029883a 	mov	r20,r2
   8f880:	003fb606 	br	8f75c <__alt_data_end+0xfffc3c6c>
   8f884:	0005883a 	mov	r2,zero
   8f888:	003ffb06 	br	8f878 <__alt_data_end+0xfffc3d88>

0008f88c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   8f88c:	defffd04 	addi	sp,sp,-12
   8f890:	df000215 	stw	fp,8(sp)
   8f894:	df000204 	addi	fp,sp,8
   8f898:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   8f89c:	0001883a 	nop
   8f8a0:	e0bfff17 	ldw	r2,-4(fp)
   8f8a4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   8f8a8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   8f8ac:	10000226 	beq	r2,zero,8f8b8 <_exit+0x2c>
    ALT_SIM_FAIL();
   8f8b0:	002af070 	cmpltui	zero,zero,43969
   8f8b4:	00000106 	br	8f8bc <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   8f8b8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   8f8bc:	003fff06 	br	8f8bc <__alt_data_end+0xfffc3dcc>
